{"version":3,"file":"bundle.js","sources":["js/core/calculator.js","js/core/gpx-parser.js","js/modules/gap-ngp.js","js/ui/history-manager.js","js/ui/shoe-manager.js","js/ui/debrief-manager.js","js/ui/training-pace-calculator.js","js/core/training-planner.js","js/ui/training-plan-ui.js","js/app.js","js/ui/png-generator.js"],"sourcesContent":["/**\n * Calculates the percentage of actual pace relative to a threshold pace.\n * @param {number} actualPace - The actual pace in minutes/km.\n * @param {number} thresholdPace - The threshold pace in minutes/km.\n * @returns {number} The percentage (e.g., 105 for 105%).\n */\nexport function calculateThresholdPercentage(actualPace, thresholdPace) {\n    if (thresholdPace <= 0) return 0; // Avoid division by zero\n    return (thresholdPace / actualPace) * 100;\n}\n\n/**\n * Modifies EPH based on non-linear fatigue for ultra-distance races.\n * @param {number} baseEph - The base EPH.\n * @param {number} timeInHours - The estimated time in hours.\n * @param {string} routeType - The route type.\n * @param {number} altitude - The altitude.\n * @param {boolean} isUltraRace - True if it's an ultra-distance race.\n * @returns {object} An object containing the final EPH and fatigue factor.\n */\nexport function getAdvancedEPH(baseEph, timeInHours, routeType, altitude, isUltraRace) {\n    const terrainFactors = {\n        'road': 0.92,\n        'fire_trail': 1.0,\n        'technical': 1.35,\n        'alpine': 1.8\n    };\n    const terrainFactor = terrainFactors[routeType] || 1.0;\n\n    const gravityFactor = (altitude || 0) > 2000 ? 1 + (altitude / 10000) : 1;\n\n    let fatigueFactor = 1.0;\n    if (isUltraRace && timeInHours > 2) { // Apply non-linear fatigue for races longer than 2 hours\n        // Simplified non-linear fatigue model: logarithmic decay\n        // The longer the time, the more the fatigue factor reduces EPH\n        fatigueFactor = 1 - (Math.log10(timeInHours + 1) / 2); \n        fatigueFactor = Math.max(0.5, fatigueFactor); // Ensure fatigue factor doesn't drop below 0.5\n    }\n\n    const finalEph = baseEph * terrainFactor * gravityFactor * fatigueFactor;\n\n    return {\n        finalEph,\n        terrainFactor,\n        gravityFactor,\n        fatigueFactor\n    };\n}\n\n/**\n * 將小時轉換為 HH:MM:SS 格式\n * @param {number} timeInHours - 小時數\n * @returns {string} 格式化後的時間字串\n */\nexport function formatTime(timeInHours) {\n    if (isNaN(timeInHours) || timeInHours < 0) {\n        return '00:00:00';\n    }\n    const hours = Math.floor(timeInHours);\n    const minutes = Math.floor((timeInHours - hours) * 60);\n    const seconds = Math.floor((((timeInHours - hours) * 60) - minutes) * 60);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n}\n\n/**\n * 將時、分、秒轉換為小時\n * @param {number} h - 小時\n * @param {number} m - 分鐘\n * @param {number} s - 秒\n * @returns {number} 總小時數\n */\nexport function hmsToHours(h, m, s) {\n    return (parseInt(h, 10) || 0) + (parseInt(m, 10) || 0) / 60 + (parseInt(s, 10) || 0) / 3600;\n}\n\n/**\n * 計算 EP (Equivalent Pace)\n * @param {number} distance - 距離 (km)\n * @param {number} elevation - 爬升 (m)\n * @returns {number} EP 值\n */\nexport function calculateEP(distance, elevation) {\n    return (distance || 0) + ((elevation || 0) / 100);\n}\n\n/**\n * 計算 EPH (Equivalent Pace per Hour)\n * @param {number} ep - EP 值\n * @param {number} timeInHours - 時間 (小時)\n * @returns {number} EPH 值\n */\nexport function calculateEPH(ep, timeInHours) {\n    if (timeInHours <= 0) return 0;\n    return ep / timeInHours;\n}\n\n/**\n * Converts pace in hours per kilometer to a formatted string 'MM:SS/km'.\n * @param {number} paceInHoursPerKm - Pace in hours per kilometer.\n * @returns {string} Formatted pace string.\n */\nexport function paceToMinutesPerKm(paceInHoursPerKm) {\n    if (isNaN(paceInHoursPerKm) || paceInHoursPerKm <= 0) {\n        return '0:00/km';\n    }\n    const totalSeconds = paceInHoursPerKm * 3600;\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = Math.round(totalSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}/km`;\n}\n\n/**\n * Converts pace from minutes and seconds per km to hours per km.\n * @param {number} minutes - The minutes part of the pace.\n * @param {number} seconds - The seconds part of the pace.\n * @returns {number} Pace in hours per kilometer.\n */\nexport function minutesPerKmToHoursPerKm(minutes, seconds) {\n    const totalSeconds = (minutes * 60) + seconds;\n    return totalSeconds / 3600;\n}\n\n/**\n * Calculates equivalent pace based on distance and time.\n * For simplicity, this is flat ground pace.\n * @param {number} distance - Distance in km.\n * @param {number} timeInHours - Time in hours.\n * @returns {number} Pace in hours per kilometer.\n */\nexport function calculateEquivalentPace(distance, timeInHours) {\n    if (distance <= 0 || timeInHours <= 0) {\n        return 0;\n    }\n    return timeInHours / distance;\n}\n\n/**\n * Recommends training paces based on a base equivalent pace and specific training distances.\n * Uses a logarithmic adjustment for interval pace and a linear adjustment for LSD pace.\n * @param {number} basePaceInHoursPerKm - The runner's current equivalent pace from a race.\n * @param {number} intervalDistanceMeters - The distance for the interval workout in meters.\n * @param {number} lsdDistanceKm - The distance for the LSD run in kilometers.\n * @returns {object} An object containing paces for different training types.\n */\nexport function getTrainingPaces(basePaceInHoursPerKm, intervalDistanceMeters = 400, lsdDistanceKm = 20) {\n    if (basePaceInHoursPerKm <= 0) {\n        return {\n            interval: 0,\n            lsd: 0,\n            recovery: 0\n        };\n    }\n\n    // --- Interval Pace Calculation ---\n    const i_ref_dist = 800; // meters\n    const i_ref_factor = 0.95; // 95% of base pace time\n    const i_k = 0.05; // Factor adjustment per doubling of distance\n    const i_dist_adj = Math.log2(intervalDistanceMeters / i_ref_dist);\n    let intervalPaceFactor = i_ref_factor + (i_dist_adj * i_k);\n    intervalPaceFactor = Math.max(0.85, Math.min(1.05, intervalPaceFactor));\n\n    // --- LSD Pace Calculation ---\n    const lsd_ref_dist = 20; // km\n    const lsd_ref_factor = 1.25; // 125% of base pace time\n    const lsd_k = 0.025; // Factor adjustment per 10km increase\n    const lsd_dist_adj = (lsdDistanceKm - lsd_ref_dist) / 10;\n    let lsdPaceFactor = lsd_ref_factor + (lsd_dist_adj * lsd_k);\n    lsdPaceFactor = Math.max(1.20, Math.min(1.35, lsdPaceFactor)); // Clamp to reasonable bounds\n\n    // --- Recovery Pace (fixed) ---\n    const recoveryPaceFactor = 1.35;\n\n    return {\n        interval: basePaceInHoursPerKm * intervalPaceFactor,\n        lsd: basePaceInHoursPerKm * lsdPaceFactor,\n        recovery: basePaceInHoursPerKm * recoveryPaceFactor\n    };\n}\n\n","\n// GPX 文件解析器\n\n/**\n * 解析 GPX 文件內容\n * @param {string} gpxContent - GPX 文件的 XML 文本內容\n * @returns {object|null} 包含距離、爬升、下降等資訊的物件，或在失敗時返回 null\n */\nexport function parseGPX(gpxContent) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(gpxContent, \"text/xml\");\n\n    const trkpts = xmlDoc.getElementsByTagName('trkpt');\n    if (trkpts.length < 2) {\n        console.error(\"GPX file must contain at least two trackpoints.\");\n        return null;\n    }\n\n    let totalDistance = 0;\n    let totalElevationGain = 0;\n    let totalElevationLoss = 0;\n    const points = [];\n\n    for (let i = 0; i < trkpts.length; i++) {\n        const lat = parseFloat(trkpts[i].getAttribute('lat'));\n        const lon = parseFloat(trkpts[i].getAttribute('lon'));\n        const eleNode = trkpts[i].getElementsByTagName('ele')[0];\n        const ele = eleNode ? parseFloat(eleNode.textContent) : 0;\n        points.push({ lat, lon, ele });\n\n        if (i > 0) {\n            const prevPoint = points[i - 1];\n            totalDistance += haversineDistance(prevPoint, points[i]);\n            const eleDiff = ele - prevPoint.ele;\n            if (eleDiff > 0) {\n                totalElevationGain += eleDiff;\n            } else {\n                totalElevationLoss += Math.abs(eleDiff);\n            }\n        }\n    }\n\n    return {\n        distance: totalDistance,\n        elevation: totalElevationGain,\n        descent: totalElevationLoss,\n        points: points\n    };\n}\n\n/**\n * 使用 Haversine 公式計算兩點之間的距離\n * @param {{lat: number, lon: number}} p1 - 點 1\n * @param {{lat: number, lon: number}} p2 - 點 2\n * @returns {number} 距離 (km)\n */\nfunction haversineDistance(p1, p2) {\n    const R = 6371; // 地球半徑 (km)\n    const dLat = toRad(p2.lat - p1.lat);\n    const dLon = toRad(p2.lon - p1.lon);\n    const lat1 = toRad(p1.lat);\n    const lat2 = toRad(p2.lat);\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n              Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n}\n\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n","// js/modules/gap-ngp.js\n/**\n * GAP/NGP 對照模組 (C3) - 骨骼肌體版\n * \n * 設計哲學：\n * 1. 數據即代碼：用結構化數據驅動邏輯\n * 2. 零魔數：所有常量集中管理\n * 3. 查表代替分支：用 O(1) 查表取代 O(n) 分支\n * 4. 機器可讀性：100%\n * \n * 代碼量：15 行核心邏輯\n */\n\n// ======================\n// 核心數據結構\n// ======================\nconst GapConfig = {\n  bounds: {\n    pace: [0.5, 25],\n    gradient: [-30, 30]\n  },\n  factors: {\n    gap: 0.07,\n    ngp: 0.05,\n    tech: 0.03\n  }\n};\n\n// ======================\n// 核心計算函數\n// ======================\nexport const calculateGAP = (pace, gradient, tech = 0) => {\n  const base = pace * (1 + gradient * GapConfig.factors.gap);\n  return base * (1 + tech * GapConfig.factors.tech);\n};\n\nexport const calculateNGP = (pace, gradient, tech = 0) => {\n  const base = pace * (1 + gradient * GapConfig.factors.ngp);\n  return base * (1 + tech * GapConfig.factors.tech);\n};\n\nexport const gapToNpg = (gap, gradient) => \n  gap / (1 + gradient * GapConfig.factors.gap) * \n  (1 + gradient * GapConfig.factors.ngp);\n\nexport const ngpToGap = (ngp, gradient) => \n  ngp / (1 + gradient * GapConfig.factors.ngp) * \n  (1 + gradient * GapConfig.factors.gap);\n\n// ======================\n// 工具函數\n// ======================\nexport const validateInput = (value, [min, max]) => \n  value >= min && value <= max;\n\nexport const formatResult = {\n  gap: gap => `${gap.toFixed(2)} min/km`,\n  ngp: ngp => `${ngp.toFixed(2)} min/km`,\n  diff: (gap, ngp) => {\n    const diff = gap - ngp;\n    return {\n      value: diff.toFixed(2),\n      percent: ((diff / ngp) * 100).toFixed(1)\n    };\n  }\n};","\n// 歷史紀錄管理器 (使用 localStorage)\n\nconst TRAINING_HISTORY_KEY = 'trailSyncTrainingHistory';\n\n/**\n * 從 localStorage 獲取訓練歷史\n * @returns {Array} 歷史紀錄陣列\n */\nexport function getTrainingHistory() {\n    try {\n        const history = localStorage.getItem(TRAINING_HISTORY_KEY);\n        return history ? JSON.parse(history) : [];\n    } catch (e) {\n        console.error(\"Error reading training history from localStorage\", e);\n        return [];\n    }\n}\n\n/**\n * 保存一筆訓練紀錄到 localStorage\n * @param {object} entry - 要保存的紀錄物件\n */\nexport function saveTrainingToHistory(entry) {\n    const history = getTrainingHistory();\n    history.push(entry);\n    try {\n        localStorage.setItem(TRAINING_HISTORY_KEY, JSON.stringify(history));\n    } catch (e) {\n        console.error(\"Error saving training history to localStorage\", e);\n    }\n}\n\n/**\n * 清除 localStorage 中的訓練歷史\n */\nexport function clearTrainingHistory() {\n    try {\n        localStorage.removeItem(TRAINING_HISTORY_KEY);\n    } catch (e) {\n        console.error(\"Error clearing training history from localStorage\", e);\n    }\n}\n","const SHOE_STORAGE_KEY = 'trailSyncShoes';\n\n/**\n * Retrieves all shoes from localStorage.\n * @returns {Array} An array of shoe objects.\n */\nexport function getShoes() {\n    const shoes = localStorage.getItem(SHOE_STORAGE_KEY);\n    return shoes ? JSON.parse(shoes) : [];\n}\n\n/**\n * Saves the entire array of shoes to localStorage.\n * @param {Array} shoes - The array of shoe objects to save.\n */\nfunction saveAllShoes(shoes) {\n    localStorage.setItem(SHOE_STORAGE_KEY, JSON.stringify(shoes));\n}\n\n/**\n * Adds a new shoe to the collection.\n * @param {object} shoeData - The shoe object to add (e.g., { name, brand, initialMileage }).\n */\nexport function addShoe(shoeData) {\n    const shoes = getShoes();\n    const newShoe = {\n        id: `shoe_${Date.now()}`,\n        name: shoeData.name,\n        brand: shoeData.brand,\n        initialMileage: parseFloat(shoeData.initialMileage) || 0,\n        currentMileage: parseFloat(shoeData.initialMileage) || 0,\n        addedDate: new Date().toISOString()\n    };\n    shoes.push(newShoe);\n    saveAllShoes(shoes);\n}\n\n/**\n * Updates the mileage of a specific shoe.\n * @param {string} shoeId - The ID of the shoe to update.\n * @param {number} runDistance - The distance of the run to add to the shoe's mileage.\n */\nexport function updateShoeMileage(shoeId, runDistance) {\n    const shoes = getShoes();\n    const shoeIndex = shoes.findIndex(s => s.id === shoeId);\n\n    if (shoeIndex > -1) {\n        shoes[shoeIndex].currentMileage += parseFloat(runDistance);\n        saveAllShoes(shoes);\n    }\n}\n\n/**\n * Deletes a shoe from the collection.\n * @param {string} shoeId - The ID of the shoe to delete.\n */\nexport function deleteShoe(shoeId) {\n    let shoes = getShoes();\n    shoes = shoes.filter(s => s.id !== shoeId);\n    saveAllShoes(shoes);\n}","const DEBRIEF_STORAGE_KEY = 'trailSyncDebriefs';\n\n/**\n * Retrieves all debrief entries from localStorage.\n * @returns {Array} An array of debrief objects.\n */\nexport function getDebriefs() {\n    const debriefs = localStorage.getItem(DEBRIEF_STORAGE_KEY);\n    return debriefs ? JSON.parse(debriefs) : [];\n}\n\n/**\n * Saves a new debrief entry to the collection.\n * @param {object} debriefData - The debrief object to add.\n */\nexport function saveDebrief(debriefData) {\n    const debriefs = getDebriefs();\n    const newDebrief = {\n        id: `debrief_${Date.now()}`,\n        type: 'debrief', // Mark as debrief entry\n        ...debriefData,\n        savedAt: new Date().toISOString()\n    };\n    debriefs.push(newDebrief);\n    localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n}\n\n/**\n * Deletes a debrief entry from the collection.\n * @param {string} debriefId - The ID of the debrief to delete.\n */\nexport function deleteDebrief(debriefId) {\n    let debriefs = getDebriefs();\n    debriefs = debriefs.filter(d => d.id !== debriefId);\n    localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n}\n\n/**\n * Updates a specific debrief entry.\n * @param {string} debriefId - The ID of the debrief to update.\n * @param {object} updatedData - The new data for the debrief entry.\n */\nexport function updateDebrief(debriefId, updatedData) {\n    const debriefs = getDebriefs();\n    const index = debriefs.findIndex(d => d.id === debriefId);\n    if (index !== -1) {\n        debriefs[index] = { ...debriefs[index], ...updatedData };\n        localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n    }\n}\n\n/**\n * Clears all debrief entries from the collection.\n */\nexport function clearDebriefs() {\n    localStorage.removeItem(DEBRIEF_STORAGE_KEY);\n}","import { hmsToHours, calculateEquivalentPace, getTrainingPaces, paceToMinutesPerKm, minutesPerKmToHoursPerKm } from '../core/calculator.js';\n\nexport class TrainingPaceCalculator {\n    constructor() {\n        this.cacheDOMElements();\n        this.addEventListeners();\n        this.init();\n    }\n\n    init() {\n        // Initial calculation on load can be done here if needed\n    }\n\n    cacheDOMElements() {\n        // Input mode\n        this.modeCurrentBtn = document.getElementById('tpc-mode-current');\n        this.modeTargetBtn = document.getElementById('tpc-mode-target');\n\n        // Distance\n        this.distanceInput = document.getElementById('tpc-distance');\n\n        // Input type\n        this.inputTypeTimeBtn = document.getElementById('tpc-input-time');\n        this.inputTypePaceBtn = document.getElementById('tpc-input-pace');\n        this.timeGroup = document.getElementById('tpc-time-group');\n        this.paceGroup = document.getElementById('tpc-pace-group');\n\n        // Time inputs\n        this.hoursInput = document.getElementById('tpc-hours');\n        this.minutesInput = document.getElementById('tpc-minutes');\n        this.secondsInput = document.getElementById('tpc-seconds');\n\n        // Pace inputs\n        this.paceMinInput = document.getElementById('tpc-pace-min');\n        this.paceSecInput = document.getElementById('tpc-pace-sec');\n\n        // Calculate button\n        this.calculateBtn = document.getElementById('tpc-calculate');\n\n        // Result elements\n        this.basePaceOutput = document.getElementById('tpc-base-pace');\n        \n        // Interval results\n        this.intervalDistInput = document.getElementById('tpc-interval-dist');\n        this.intervalRepsInput = document.getElementById('tpc-interval-reps');\n        this.intervalPaceOutput = document.getElementById('tpc-interval-pace');\n        this.intervalRecoveryOutput = document.getElementById('tpc-interval-recovery');\n\n        // LSD results\n        this.lsdDistInput = document.getElementById('tpc-lsd-dist');\n        this.lsdPaceOutput = document.getElementById('tpc-lsd-pace');\n        this.lsdRecoveryOutput = document.getElementById('tpc-lsd-recovery');\n\n        // Copy button\n        this.copyBtn = document.getElementById('copy-tpc-results');\n    }\n\n    addEventListeners() {\n        this.inputTypeTimeBtn.addEventListener('click', () => this.toggleInputType('time'));\n        this.inputTypePaceBtn.addEventListener('click', () => this.toggleInputType('pace'));\n        this.calculateBtn.addEventListener('click', () => this.calculateAndDisplay());\n        \n        // Recalculate on input change for immediate feedback\n        this.intervalDistInput.addEventListener('input', () => this.calculateAndDisplay());\n        this.lsdDistInput.addEventListener('input', () => this.calculateAndDisplay());\n\n        if(this.copyBtn) this.copyBtn.addEventListener('click', () => this.copyResults());\n    }\n\n    copyResults() {\n        if (this.basePaceOutput.textContent === '0:00/km') {\n            alert('沒有結果可以複製。');\n            return;\n        }\n\n        const textToCopy = `\n訓練配速計算結果：\n- 基準配速: ${this.basePaceOutput.textContent}\n\n間歇跑 (Interval)\n- 趟數距離: ${this.intervalDistInput.value || 'N/A'} m\n- 趟數: ${this.intervalRepsInput.value || 'N/A'}\n- 建議配速: ${this.intervalPaceOutput.textContent}\n- 恢復跑: ${this.intervalRecoveryOutput.textContent}\n\n長距離慢跑 (LSD)\n- LSD 距離: ${this.lsdDistInput.value || 'N/A'} km\n- 建議配速: ${this.lsdPaceOutput.textContent}\n- 恢復跑: ${this.lsdRecoveryOutput.textContent}\n        `.trim().replace(/^ +/gm, ''); // trim and remove leading spaces\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            alert('結果已複製到剪貼簿！');\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    toggleInputType(type) {\n        if (type === 'time') {\n            this.timeGroup.style.display = 'block';\n            this.paceGroup.style.display = 'none';\n            this.inputTypeTimeBtn.classList.add('active');\n            this.inputTypePaceBtn.classList.remove('active');\n        } else {\n            this.timeGroup.style.display = 'none';\n            this.paceGroup.style.display = 'block';\n            this.inputTypeTimeBtn.classList.remove('active');\n            this.inputTypePaceBtn.classList.add('active');\n        }\n    }\n\n    calculateAndDisplay() {\n        const distance = parseFloat(this.distanceInput.value);\n        let timeInHours;\n\n        if (this.inputTypeTimeBtn.classList.contains('active')) {\n            const hours = parseInt(this.hoursInput.value) || 0;\n            const minutes = parseInt(this.minutesInput.value) || 0;\n            const seconds = parseInt(this.secondsInput.value) || 0;\n            timeInHours = hmsToHours(hours, minutes, seconds);\n        } else {\n            const paceMinutes = parseInt(this.paceMinInput.value) || 0;\n            const paceSeconds = parseInt(this.paceSecInput.value) || 0;\n            if (distance > 0) {\n                const paceInHoursPerKm = minutesPerKmToHoursPerKm(paceMinutes, paceSeconds);\n                timeInHours = paceInHoursPerKm * distance;\n            } else {\n                timeInHours = 0;\n            }\n        }\n\n        if (!distance || distance <= 0 || !timeInHours || timeInHours <= 0) {\n            // Clear results if input is invalid\n            this.basePaceOutput.textContent = '0:00/km';\n            this.intervalPaceOutput.textContent = '0:00/km';\n            this.intervalRecoveryOutput.textContent = '0:00/km';\n            this.lsdPaceOutput.textContent = '0:00/km';\n            this.lsdRecoveryOutput.textContent = '0:00/km';\n            return;\n        }\n\n        const intervalDistance = parseFloat(this.intervalDistInput.value) || 400;\n        const lsdDistance = parseFloat(this.lsdDistInput.value) || 20;\n        const basePace = calculateEquivalentPace(distance, timeInHours);\n        const trainingPaces = getTrainingPaces(basePace, intervalDistance, lsdDistance);\n\n        this.basePaceOutput.textContent = paceToMinutesPerKm(basePace);\n        \n        // Interval pace doesn't depend on interval distance, but the display might in future\n        this.intervalPaceOutput.textContent = paceToMinutesPerKm(trainingPaces.interval);\n        this.intervalRecoveryOutput.textContent = paceToMinutesPerKm(trainingPaces.recovery);\n\n        // LSD pace doesn't depend on LSD distance\n        this.lsdPaceOutput.textContent = paceToMinutesPerKm(trainingPaces.lsd);\n        this.lsdRecoveryOutput.textContent = paceToMinutesPerKm(trainingPaces.recovery); // Often same recovery pace\n    }\n}\n","\nimport { minutesPerKmToHoursPerKm, paceToMinutesPerKm } from './calculator.js';\n\n/**\n * 使用 Riegel 公式預測不同距離的完賽時間\n * T2 = T1 * (D2 / D1)^1.06\n * @param {number} t1 - 已知時間 (小時)\n * @param {number} d1 - 已知距離 (公里)\n * @param {number} d2 - 目標距離 (公里)\n * @returns {number} 預測的目標距離完賽時間 (小時)\n */\nexport function riegelPrediction(t1, d1, d2) {\n    if (t1 <= 0 || d1 <= 0 || d2 <= 0) return 0;\n    return t1 * Math.pow(d2 / d1, 1.06);\n}\n\n/**\n * 根據基準配速 (小時/公里) 計算各強度配速\n * @param {number} basePaceInHoursPerKm - 10K 競賽配速 (小時/公里)\n * @returns {object} 包含 I, T, M, E 配速的物件 (小時/公里)\n */\nexport function getPaceZones(basePaceInHoursPerKm) {\n    if (basePaceInHoursPerKm <= 0) {\n        return { I: 0, T: 0, M: 0, E: 0 };\n    }\n\n    // 根據 Daniels' Running Formula 的通用規則估算\n    // T-Pace (Threshold): 約比 10K 配速慢 15-20 秒/公里\n    const tPace = basePaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 18);\n\n    // I-Pace (Interval): 約等於 3K-5K 配速。我們用 Riegel 從 10K 推算 3K 配速\n    const time10k = basePaceInHoursPerKm * 10;\n    const time3k = riegelPrediction(time10k, 10, 3);\n    const iPace = time3k / 3;\n\n    // M-Pace (Marathon): 全馬配速。用 Riegel 從 10K 推算 42.195K 配速\n    const time42k = riegelPrediction(time10k, 10, 42.195);\n    const mPace = time42k / 42.195;\n\n    // E-Pace (Easy/LSD): 約比 M-Pace 慢 60-90 秒/公里\n    const ePace = mPace + minutesPerKmToHoursPerKm(1, 15);\n\n    return {\n        I: iPace,\n        T: tPace,\n        M: mPace,\n        E: ePace,\n    };\n}\n\n/**\n * 產生完整的訓練課表建議\n * @param {object} options - 使用者輸入的選項\n * @returns {object} 包含熱身、主課表、緩和的完整課表物件\n */\nexport function generateWorkout(options) {\n    const {\n        baseRace, // { distance, timeInHours }\n        mainWorkout, // { type, distance, reps, targetPace }\n        warmup, // { type, value }\n    } = options;\n\n    // 1. 計算基準配速和各區間配速\n    const basePace = baseRace.timeInHours / baseRace.distance;\n    const paceZones = getPaceZones(basePace);\n\n    // 2. 決定主課表配速\n    let mainPaceInHoursPerKm;\n    switch (mainWorkout.targetPace) {\n        case 'I pace':\n            mainPaceInHoursPerKm = paceZones.I;\n            break;\n        case 'T pace':\n            mainPaceInHoursPerKm = paceZones.T;\n            break;\n        case 'M pace':\n            mainPaceInHoursPerKm = paceZones.M;\n            break;\n        default: // LSD 或其他\n            mainPaceInHoursPerKm = paceZones.E;\n    }\n    \n    const mainPaceFormatted = paceToMinutesPerKm(mainPaceInHoursPerKm);\n    const finalMainWorkout = { ...mainWorkout, pace: mainPaceFormatted };\n\n    // 3. 計算熱身\n    const warmupPaceInHoursPerKm = mainPaceInHoursPerKm + minutesPerKmToHoursPerKm(1, 45); // 主配速 +1:30-2:00\n    const warmupPaceFormatted = `${paceToMinutesPerKm(warmupPaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 10))} - ${paceToMinutesPerKm(warmupPaceInHoursPerKm - minutesPerKmToHoursPerKm(0, 10))}`;\n    \n    let warmupDistance, warmupTime;\n    if (warmup.type === 'distance') {\n        warmupDistance = warmup.value;\n        warmupTime = warmup.value * warmupPaceInHoursPerKm * 60; // 分鐘\n    } else { // time\n        warmupTime = warmup.value;\n        warmupDistance = warmup.value / 60 / warmupPaceInHoursPerKm;\n    }\n\n    const finalWarmup = {\n        text: `${warmupTime.toFixed(0)} 分鐘 (約 ${warmupDistance.toFixed(1)} 公里)`,\n        pace: warmupPaceFormatted,\n        zone: 'Zone 1-2',\n        strides: mainWorkout.targetPace === 'I pace' ? '4-6x100m strides' : null\n    };\n\n    // 4. 計算緩和\n    const cooldownTime = warmupTime * 0.7; // 熱身時間的 0.6-0.8\n    const cooldownPaceInHoursPerKm = warmupPaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 10); // 比熱身慢\n    const cooldownDistance = cooldownTime / 60 / cooldownPaceInHoursPerKm;\n\n    const finalCooldown = {\n        text: `${cooldownTime.toFixed(0)} 分鐘 (約 ${cooldownDistance.toFixed(1)} 公里)`,\n        pace: paceToMinutesPerKm(cooldownPaceInHoursPerKm)\n    };\n\n    return {\n        warmup: finalWarmup,\n        main: finalMainWorkout,\n        cooldown: finalCooldown,\n        debug: { paceZones }\n    };\n}\n","\nimport { hmsToHours } from '../core/calculator.js';\nimport { generateWorkout } from '../core/training-planner.js';\n\nexport class TrainingPlanUI {\n    constructor() {\n        this.cacheDOMElements();\n        if (this.generateBtn) { // Only add listeners if the element exists\n            this.addEventListeners();\n        }\n    }\n\n    cacheDOMElements() {\n        // Mode Buttons\n        this.modeResultBtn = document.getElementById('plan-mode-result');\n        this.modeGoalBtn = document.getElementById('plan-mode-goal');\n        this.resultGroup = document.getElementById('plan-result-group');\n        this.goalGroup = document.getElementById('plan-goal-group');\n\n        // Result Inputs\n        this.resultDist = document.getElementById('plan-result-dist');\n        this.resultHours = document.getElementById('plan-result-hours');\n        this.resultMinutes = document.getElementById('plan-result-minutes');\n        this.resultSeconds = document.getElementById('plan-result-seconds');\n\n        // Goal Inputs\n        this.goalDist = document.getElementById('plan-goal-dist');\n        this.goalHours = document.getElementById('plan-goal-hours');\n        this.goalMinutes = document.getElementById('plan-goal-minutes');\n        this.goalSeconds = document.getElementById('plan-goal-seconds');\n\n        // Main Workout Inputs\n        this.mainType = document.getElementById('plan-main-type');\n        this.mainDetails = document.getElementById('plan-main-details');\n        this.mainPace = document.getElementById('plan-main-pace');\n\n        // Warmup Inputs\n        this.warmupTimeBtn = document.getElementById('plan-warmup-time');\n        this.warmupDistBtn = document.getElementById('plan-warmup-dist');\n        this.warmupValue = document.getElementById('plan-warmup-value');\n        this.warmupLabel = document.querySelector('label[for=\"plan-warmup-value\"]');\n\n        // Generate Button\n        this.generateBtn = document.getElementById('plan-generate-btn');\n\n        // Result Display\n        this.resWarmup = document.getElementById('plan-res-warmup');\n        this.resWarmupPace = document.getElementById('plan-res-warmup-pace');\n        this.resMainTitle = document.getElementById('plan-res-main-title');\n        this.resMainPace = document.getElementById('plan-res-main-pace');\n        this.resCooldown = document.getElementById('plan-res-cooldown');\n        this.resCooldownPace = document.getElementById('plan-res-cooldown-pace');\n\n        // Copy Button\n        this.copyBtn = document.getElementById('copy-plan-results');\n    }\n\n    addEventListeners() {\n        this.modeResultBtn.addEventListener('click', () => this.toggleMode('result'));\n        this.modeGoalBtn.addEventListener('click', () => this.toggleMode('goal'));\n        this.warmupTimeBtn.addEventListener('click', () => this.toggleWarmupInput('time'));\n        this.warmupDistBtn.addEventListener('click', () => this.toggleWarmupInput('dist'));\n        this.generateBtn.addEventListener('click', () => this.calculateAndDisplay());\n        if(this.copyBtn) this.copyBtn.addEventListener('click', () => this.copyResults());\n    }\n\n    copyResults() {\n        if (this.resWarmup.textContent === '--') {\n            alert('沒有課表可以複製。');\n            return;\n        }\n\n        const textToCopy = `\nTrailSync 課表建議：\n\n- 熱身: ${this.resWarmup.textContent}\n  ${this.resWarmupPace.textContent}\n\n- 主課表: ${this.resMainTitle.textContent}\n  ${this.resMainPace.textContent}\n\n- 緩和: ${this.resCooldown.textContent}\n  ${this.resCooldownPace.textContent}\n        `.trim().replace(/^ +/gm, '');\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            alert('課表已複製到剪貼簿！');\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    toggleMode(mode) {\n        if (mode === 'result') {\n            this.resultGroup.style.display = 'block';\n            this.goalGroup.style.display = 'none';\n            this.modeResultBtn.classList.add('active');\n            this.modeGoalBtn.classList.remove('active');\n        } else {\n            this.resultGroup.style.display = 'none';\n            this.goalGroup.style.display = 'block';\n            this.modeResultBtn.classList.remove('active');\n            this.modeGoalBtn.classList.add('active');\n        }\n    }\n\n    toggleWarmupInput(type) {\n        if (type === 'time') {\n            this.warmupLabel.textContent = '時間 (分鐘) 或 距離 (公里)';\n            this.warmupValue.placeholder = '例如: 15 (分鐘)';\n            this.warmupTimeBtn.classList.add('active');\n            this.warmupDistBtn.classList.remove('active');\n        } else {\n            this.warmupLabel.textContent = '距離 (公里) 或 時間 (分鐘)';\n            this.warmupValue.placeholder = '例如: 2 (公里)';\n            this.warmupTimeBtn.classList.remove('active');\n            this.warmupDistBtn.classList.add('active');\n        }\n    }\n\n    calculateAndDisplay() {\n        // 1. Gather Base Race Info\n        let baseRace = {};\n        if (this.modeResultBtn.classList.contains('active')) {\n            baseRace.distance = parseFloat(this.resultDist.value);\n            baseRace.timeInHours = hmsToHours(this.resultHours.value, this.resultMinutes.value, this.resultSeconds.value);\n        } else {\n            baseRace.distance = parseFloat(this.goalDist.value);\n            baseRace.timeInHours = hmsToHours(this.goalHours.value, this.goalMinutes.value, this.goalSeconds.value);\n        }\n\n        if (!baseRace.distance || !baseRace.timeInHours) {\n            alert('請輸入有效的比賽成績或目標時間。');\n            return;\n        }\n\n        // 2. Gather Main Workout Info\n        const mainWorkout = {\n            type: this.mainType.value,\n            details: this.mainDetails.value,\n            targetPace: this.mainPace.value\n        };\n\n        // 3. Gather Warmup Info\n        const warmup = {\n            type: this.warmupTimeBtn.classList.contains('active') ? 'time' : 'distance',\n            value: parseFloat(this.warmupValue.value)\n        };\n\n        if (!warmup.value) {\n            alert('請輸入有效的熱身時間或距離。');\n            return;\n        }\n\n        // 4. Generate Workout\n        const workoutPlan = generateWorkout({ baseRace, mainWorkout, warmup });\n\n        // 5. Display Results\n        this.resWarmup.textContent = workoutPlan.warmup.text;\n        let warmupPaceText = `配速: ${workoutPlan.warmup.pace}`;\n        if(workoutPlan.warmup.strides){\n            warmupPaceText += ` + ${workoutPlan.warmup.strides}`;\n        }\n        this.resWarmupPace.textContent = warmupPaceText;\n\n        this.resMainTitle.textContent = `${workoutPlan.main.type}: ${workoutPlan.main.details}`;\n        this.resMainPace.textContent = `配速: ${workoutPlan.main.pace}`;\n\n        this.resCooldown.textContent = workoutPlan.cooldown.text;\n        this.resCooldownPace.textContent = `配速: ${workoutPlan.cooldown.pace}`;\n    }\n}\n","import { formatTime, hmsToHours, calculateEP, calculateEPH, getAdvancedEPH, calculateThresholdPercentage } from './core/calculator.js';\nimport { parseGPX } from './core/gpx-parser.js';\nimport { calculateGAP } from './modules/gap-ngp.js';\nimport { parseIntervals } from './modules/interval-parser.js';\nimport { getTrainingHistory, saveTrainingToHistory, clearTrainingHistory } from './ui/history-manager.js';\nimport { exportElementAsPng } from './ui/png-generator.js';\nimport { getShoes, addShoe, updateShoeMileage, deleteShoe } from './ui/shoe-manager.js';\nimport { saveDebrief, getDebriefs, clearDebriefs, deleteDebrief, updateDebrief } from './ui/debrief-manager.js';\nimport { TrainingPaceCalculator } from './ui/training-pace-calculator.js';\nimport { TrainingPlanUI } from './ui/training-plan-ui.js';\n\nfunction convertTreadmillToPace(speed, incline) {\n    if (speed <= 0) return 0;\n    const pacePerKm = 60 / speed;\n    const inclineEffect = incline * 0.15;\n    return pacePerKm + inclineEffect;\n}\n\nfunction convertPaceToTreadmillSpeed(pace, incline) {\n    if (pace <= 0) return 0;\n    const speed = 60 / (pace - (incline * 0.15));\n    return speed;\n}\n\nclass TrailSyncApp {\n    constructor() {\n        this.editingDebriefId = null;\n        this.cacheDOMElements();\n        this.addEventListeners();\n        this.loadShoes();\n        this.loadHistory();\n        this.intervalSetCounter = 0;\n        this.initializeDebriefCalendar();\n        this.trainingPaceCalculator = new TrainingPaceCalculator();\n        this.trainingPlanUI = new TrainingPlanUI(); // Initialize new UI module\n    }\n\n    cacheDOMElements() {\n        this.routeNameInput = document.getElementById('route-name');\n        this.distanceInput = document.getElementById('distance');\n        this.elevationInput = document.getElementById('elevation');\n        this.targetHoursInput = document.getElementById('target-hours');\n        this.targetMinutesInput = document.getElementById('target-minutes');\n        this.targetSecondsInput = document.getElementById('target-seconds');\n        this.routeTypeSelect = document.getElementById('route-type');\n        this.altitudeInput = document.getElementById('altitude');\n        this.userTPaceInput = document.getElementById('user-t-pace');\n        this.ultraRaceCheckbox = document.getElementById('ultra-race-checkbox');\n        this.calculateBtn = document.getElementById('calculate-btn');\n        this.resultsPaneOnPage = document.getElementById('results-pane-onpage');\n        this.resDistanceDisplay = document.getElementById('res-distance');\n        this.resElevationDisplay = document.getElementById('res-elevation');\n        this.resTimeDisplay = document.getElementById('res-time');\n        this.ephDisplay = document.getElementById('eph');\n        this.exportCardBtn = document.getElementById('export-card-btn');\n        this.cardExporterContent = document.getElementById('card-exporter-content');\n        this.runShoeSelector = document.getElementById('run-shoe-selector');\n\n        // Interval Elements\n        this.intervalModeTimeBtn = document.getElementById('interval-mode-time');\n        this.intervalModePaceBtn = document.getElementById('interval-mode-pace');\n        this.intervalTimeInputs = document.getElementById('interval-time-inputs');\n        this.intervalPaceInputs = document.getElementById('interval-pace-inputs');\n        this.intervalDistanceInput = document.getElementById('interval-distance');\n        this.intervalCalculateBtn = document.getElementById('interval-calculate');\n        this.intervalResultsList = document.getElementById('interval-results-list');\n        this.intervalSetsContainer = document.getElementById('interval-sets-container');\n        this.addIntervalSetBtn = document.getElementById('add-interval-set-btn');\n        this.clearIntervalSetsBtn = document.getElementById('clear-interval-sets-btn');\n        this.intervalTotalDistanceDisplay = document.getElementById('interval-total-distance');\n        this.intervalTotalTimeDisplay = document.getElementById('interval-total-time');\n        this.intervalTargetPaceMin = document.getElementById('interval-target-pace-min');\n        this.intervalTargetPaceSec = document.getElementById('interval-target-pace-sec');\n        this.intervalPaceReps = document.getElementById('interval-pace-reps');\n        this.copyIntervalBtn = document.getElementById('copy-interval-results');\n\n        this.gapPaceInput = document.getElementById('gap-pace');\n        this.gapGradeInput = document.getElementById('gap-grade');\n        this.gapCalculateBtn = document.getElementById('gap-calculate');\n        this.gapResultDisplay = document.getElementById('gap-result');\n\n        this.treadmillSpeedInput = document.getElementById('treadmill-speed');\n        this.treadmillInclineInput = document.getElementById('treadmill-incline');\n        this.treadmillConvertBtn = document.getElementById('treadmill-convert');\n        this.equivalentPaceDisplay = document.getElementById('equivalent-pace');\n        this.flatPaceInput = document.getElementById('flat-pace-input');\n        this.reverseTreadmillInclineInput = document.getElementById('reverse-treadmill-incline');\n        this.reverseTreadmillConvertBtn = document.getElementById('reverse-treadmill-convert-btn');\n        this.treadmillSpeedResultDisplay = document.getElementById('treadmill-speed-result');\n\n        this.raceDistanceInput = document.getElementById('race-distance');\n        this.raceElevationGainInput = document.getElementById('race-elevation-gain');\n        this.raceElevationLossInput = document.getElementById('race-elevation-loss');\n        this.userEphInput = document.getElementById('user-eph');\n        this.racePredictBtn = document.getElementById('race-predict');\n        this.raceTimeDisplay = document.getElementById('race-time');\n        this.raceEpDisplay = document.getElementById('race-ep');\n\n        this.saveTrainingBtn = document.getElementById('save-training');\n        this.historyList = document.getElementById('history-list');\n        this.clearHistoryBtn = document.getElementById('clear-history');\n\n        this.shoeNameInput = document.getElementById('shoe-name');\n        this.shoeBrandInput = document.getElementById('shoe-brand');\n        this.shoeMileageInput = document.getElementById('shoe-mileage');\n        this.addShoeBtn = document.getElementById('add-shoe-btn');\n        this.shoeListContainer = document.getElementById('shoe-list');\n\n        this.debriefRaceNameInput = document.getElementById('debrief-race-name');\n        this.debriefDateInput = document.getElementById('debrief-date');\n        this.debriefActualTimeInput = document.getElementById('debrief-actual-time');\n        this.debriefMentalStateInput = document.getElementById('debrief-mental-state');\n        this.debriefNutritionInput = document.getElementById('debrief-nutrition');\n        this.debriefGearInput = document.getElementById('debrief-gear');\n        this.debriefSubmitBtn = document.getElementById('debrief-submit');\n        this.debriefCalendarContainer = document.getElementById('debrief-calendar');\n\n        // Race Predictor v2\n        this.refRaceDistInput = document.getElementById('ref-race-dist');\n        this.refRaceElevInput = document.getElementById('ref-race-elev');\n        this.refRaceTimeHInput = document.getElementById('ref-race-time-h');\n        this.refRaceTimeMInput = document.getElementById('ref-race-time-m');\n        this.refRaceTimeSInput = document.getElementById('ref-race-time-s');\n        this.trainDistInput = document.getElementById('train-dist');\n        this.trainElevInput = document.getElementById('train-elev');\n        this.calculateTrainingTimeBtn = document.getElementById('calculate-training-time-btn');\n        this.trainingTimeResultDisplay = document.getElementById('training-time-result');\n        this.refRaceEphResultDisplay = document.getElementById('ref-race-eph-result');\n\n        // Advanced Prediction\n        this.advancedStrategySection = document.getElementById('advanced-strategy-section');\n        this.climbingFactorInput = document.getElementById('climbing-factor');\n        this.descendingFactorInput = document.getElementById('descending-factor');\n        this.aidStationContainer = document.getElementById('aid-station-container');\n        this.addAidStationBtn = document.getElementById('add-aid-station-btn');\n    }\n\n    addEventListeners() {\n        this.calculateBtn.addEventListener('click', () => this.handleCalculation());\n        this.intervalCalculateBtn.addEventListener('click', () => this.handleIntervalCalculation());\n        this.gapCalculateBtn.addEventListener('click', () => this.handleGapCalculation());\n        this.treadmillConvertBtn.addEventListener('click', () => this.handleTreadmillConversion());\n        this.racePredictBtn.addEventListener('click', () => this.handleRacePrediction());\n        this.saveTrainingBtn.addEventListener('click', () => this.saveCurrentTraining());\n        this.clearHistoryBtn.addEventListener('click', () => this.clearHistory());\n        this.exportCardBtn.addEventListener('click', () => this.handleExportCard());\n        this.addShoeBtn.addEventListener('click', () => this.handleAddShoe());\n        this.debriefSubmitBtn.addEventListener('click', () => this.handleDebriefSubmit());\n        this.addIntervalSetBtn.addEventListener('click', () => this.addIntervalSetRow());\n        this.clearIntervalSetsBtn.addEventListener('click', () => this.clearIntervalSets());\n        this.reverseTreadmillConvertBtn.addEventListener('click', () => this.handleReverseTreadmillConversion());\n        this.calculateTrainingTimeBtn.addEventListener('click', () => this.handleTrainingTimeCalculation());\n\n        if(this.copyIntervalBtn) this.copyIntervalBtn.addEventListener('click', () => this.handleCopyIntervalResults());\n\n        // Advanced Prediction Listeners\n        this.addAidStationBtn.addEventListener('click', () => this.handleAddAidStation());\n\n        // Interval mode switching\n        this.intervalModeTimeBtn.addEventListener('click', () => this.switchIntervalMode('time'));\n        this.intervalModePaceBtn.addEventListener('click', () => this.switchIntervalMode('pace'));\n\n        this.shoeListContainer.addEventListener('click', (e) => {\n            if (e.target && e.target.classList.contains('shoe-delete-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleDeleteShoe(shoeId);\n            }\n            if (e.target && e.target.classList.contains('shoe-add-mileage-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleAddMileage(shoeId);\n            }\n            if (e.target && e.target.classList.contains('shoe-edit-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleEditShoe(shoeId);\n            }\n        });\n\n        this.debriefCalendarContainer.addEventListener('click', (e) => {\n            if (e.target && e.target.classList.contains('debrief-delete-btn')) {\n                const debriefId = e.target.dataset.id;\n                this.handleDeleteDebrief(debriefId);\n            }\n            if (e.target && e.target.classList.contains('debrief-edit-btn')) {\n                const debriefId = e.target.dataset.id;\n                this.handleEditDebrief(debriefId);\n            }\n        });\n    }\n\n    switchIntervalMode(mode) {\n        if (mode === 'time') {\n            this.intervalModeTimeBtn.classList.add('active');\n            this.intervalModePaceBtn.classList.remove('active');\n            this.intervalTimeInputs.style.display = 'block';\n            this.intervalPaceInputs.style.display = 'none';\n        } else {\n            this.intervalModeTimeBtn.classList.remove('active');\n            this.intervalModePaceBtn.classList.add('active');\n            this.intervalTimeInputs.style.display = 'none';\n            this.intervalPaceInputs.style.display = 'block';\n        }\n        this.clearIntervalSets(); // Reset results when switching modes\n    }\n\n    handleCalculation() {\n        const distance = parseFloat(this.distanceInput.value) || 0;\n        const elevation = parseFloat(this.elevationInput.value) || 0;\n        const timeInHours = hmsToHours(this.targetHoursInput.value, this.targetMinutesInput.value, this.targetSecondsInput.value);\n        const routeType = this.routeTypeSelect.value;\n        const altitude = parseFloat(this.altitudeInput.value) || 0;\n        const isUltra = this.ultraRaceCheckbox.checked;\n\n        if (distance <= 0 || timeInHours <= 0) {\n            alert('請輸入有效的距離和時間。');\n            return;\n        }\n\n        const ep = calculateEP(distance, elevation);\n        const baseEph = calculateEPH(ep, timeInHours);\n\n        const { finalEph } = getAdvancedEPH(baseEph, timeInHours, routeType, altitude, isUltra);\n\n        this.resDistanceDisplay.textContent = `${distance.toFixed(1)} km`;\n        this.resElevationDisplay.textContent = `${elevation.toFixed(0)} m`;\n        this.resTimeDisplay.textContent = formatTime(timeInHours);\n        this.ephDisplay.textContent = finalEph.toFixed(1);\n    }\n\n    loadShoes() {\n        const shoes = getShoes();\n        this.shoeListContainer.innerHTML = '';\n        this.runShoeSelector.innerHTML = '<option value=\"\">不指定</option>';\n        if (shoes.length === 0) {\n            this.shoeListContainer.innerHTML = '<p class=\"history-empty\">尚未加入任何跑鞋</p>';\n            return;\n        }\n        shoes.forEach(shoe => {\n            this.renderShoeCard(shoe);\n            this.addShoeToSelector(shoe);\n        });\n    }\n\n    renderShoeCard(shoe) {\n        const card = document.createElement('div');\n        card.className = 'shoe-card';\n        card.dataset.id = shoe.id;\n        const retirement = 800;\n        const pct = Math.min((shoe.currentMileage / retirement) * 100, 100);\n        card.innerHTML = `\n            <div class=\"shoe-header\">\n                <div>\n                    <h4 class=\"shoe-name\">${shoe.name}</h4>\n                    <p class=\"shoe-brand\">${shoe.brand}</p>\n                </div>\n                <div>\n                    <button class=\"shoe-edit-btn\" data-id=\"${shoe.id}\">編輯</button>\n                    <button class=\"shoe-delete-btn\" data-id=\"${shoe.id}\">&times;</button>\n                </div>\n            </div>\n            <div class=\"mileage-info\">\n                <div class=\"mileage-bar-container\"><div class=\"mileage-bar\" style=\"width: ${pct}%;\"></div></div>\n                <p class=\"mileage-text\">${shoe.currentMileage.toFixed(1)} / ${retirement} km</p>\n                <button class=\"shoe-add-mileage-btn\" data-id=\"${shoe.id}\">新增里程</button>\n            </div>\n        `;\n        this.shoeListContainer.appendChild(card);\n    }\n\n    addShoeToSelector(shoe) {\n        const opt = document.createElement('option');\n        opt.value = shoe.id;\n        opt.textContent = `${shoe.name} (${shoe.brand})`;\n        this.runShoeSelector.appendChild(opt);\n    }\n\n    handleAddShoe() {\n        const name = this.shoeNameInput.value.trim();\n        const brand = this.shoeBrandInput.value.trim();\n        const initial = parseFloat(this.shoeMileageInput.value) || 0;\n        if (!name || !brand) { alert('請輸入跑鞋型號和品牌。'); return; }\n        addShoe({ name, brand, initialMileage: initial });\n        this.shoeNameInput.value = '';\n        this.shoeBrandInput.value = '';\n        this.shoeMileageInput.value = '';\n        this.loadShoes();\n    }\n\n    handleDeleteShoe(shoeId) {\n        if (confirm('您確定要刪除這雙跑鞋嗎？')) { deleteShoe(shoeId); this.loadShoes(); }\n    }\n\n    handleAddMileage(shoeId) {\n        const km = prompt('請輸入本次新增里程（km）：');\n        if (km === null) return;\n        const num = parseFloat(km);\n        if (isNaN(num) || num <= 0) { alert('請輸入正數！'); return; }\n        updateShoeMileage(shoeId, num);\n        this.loadShoes();\n        alert(`已為跑鞋新增 ${num.toFixed(1)} km！`);\n    }\n\n    handleEditShoe(shoeId) {\n        const shoes = getShoes();\n        const shoe = shoes.find(s => s.id === shoeId);\n        if (!shoe) return;\n        const newName = prompt('新名稱（留空保持原值）：', shoe.name);\n        const newBrand = prompt('新品牌（留空保持原值）：', shoe.brand);\n        const newMile = prompt('目前累積里程（km，留空保持原值）：', shoe.currentMileage.toFixed(1));\n        if (newName === null && newBrand === null && newMile === null) return;\n        const updated = {\n            name: (newName || shoe.name).trim(),\n            brand: (newBrand || shoe.brand).trim(),\n            currentMileage: parseFloat(newMile) || shoe.currentMileage\n        };\n        updateShoeMileage(shoeId, 0); // 先寫 0 觸發更新介面\n        const idx = shoes.findIndex(s => s.id === shoeId);\n        shoes[idx] = { ...shoes[idx], ...updated };\n        localStorage.setItem('shoes', JSON.stringify(shoes));\n        this.loadShoes();\n        alert('跑鞋資料已更新！');\n    }\n\n    handleDeleteDebrief(debriefId) {\n        if (confirm('您確定要刪除這篇復盤日誌嗎？')) {\n            deleteDebrief(debriefId);\n            this.loadHistory();\n            this.initializeDebriefCalendar();\n        }\n    }\n\n    handleEditDebrief(debriefId) {\n        const debriefs = getDebriefs();\n        const debrief = debriefs.find(d => d.id === debriefId);\n        if (!debrief) return;\n\n        this.debriefRaceNameInput.value = debrief.raceName;\n        this.debriefDateInput.value = debrief.date;\n        this.debriefActualTimeInput.value = debrief.actualTime;\n        this.debriefMentalStateInput.value = debrief.mentalState;\n        this.debriefNutritionInput.value = debrief.nutrition;\n        this.debriefGearInput.value = debrief.gear;\n\n        this.debriefSubmitBtn.textContent = '更新復盤';\n        this.editingDebriefId = debriefId;\n\n        // Scroll to the form\n        this.debriefRaceNameInput.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    handleDebriefSubmit() {\n        const entry = {\n            raceName: this.debriefRaceNameInput.value.trim(),\n            date: this.debriefDateInput.value,\n            actualTime: this.debriefActualTimeInput.value.trim(),\n            mentalState: this.debriefMentalStateInput.value.trim(),\n            nutrition: this.debriefNutritionInput.value.trim(),\n            gear: this.debriefGearInput.value.trim()\n        };\n        if (!entry.raceName || !entry.date) { alert('請至少輸入賽事名稱和日期。'); return; }\n\n        if (this.editingDebriefId) {\n            updateDebrief(this.editingDebriefId, entry);\n            alert('賽後復盤已更新！');\n            this.editingDebriefId = null;\n            this.debriefSubmitBtn.textContent = '提交復盤';\n        } else {\n            saveDebrief(entry);\n            alert('賽後復盤已提交！');\n        }\n\n        ['raceName', 'date', 'actualTime', 'mentalState', 'nutrition', 'gear']\n            .forEach(k => this[`debrief${k.charAt(0).toUpperCase() + k.slice(1)}Input`].value = '');\n        this.loadHistory();\n        this.initializeDebriefCalendar();\n    }\n\n    loadHistory() {\n        this.historyList.innerHTML = '';\n        const tHist = getTrainingHistory();\n        const dHist = getDebriefs();\n        const combined = [...tHist, ...dHist].sort((a, b) => new Date(b.date) - new Date(a.date));\n        if (combined.length === 0) {\n            this.historyList.innerHTML = '<div class=\"history-empty\">尚無歷史紀錄</div>';\n            return;\n        }\n        combined.forEach(it => this.addHistoryEntryToDOM(it));\n        this.initializeDebriefCalendar();\n    }\n\n    initializeDebriefCalendar() {\n        if (!this.debriefCalendarContainer) return;\n        const debriefs = getDebriefs().sort((a, b) => new Date(b.date) - new Date(a.date));\n        this.debriefCalendarContainer.innerHTML = '';\n        if (debriefs.length === 0) {\n            this.debriefCalendarContainer.innerHTML = '<p class=\"history-empty\">尚無復盤紀錄</p>';\n            return;\n        }\n        debriefs.forEach(d => {\n            const details = document.createElement('details');\n            details.className = 'debrief-item';\n\n            const summary = document.createElement('summary');\n            summary.className = 'debrief-summary';\n            summary.innerHTML = `<strong>${d.raceName}</strong> - <small>${new Date(d.date).toLocaleDateString('zh-Hant')}</small>`;\n\n            const content = document.createElement('div');\n            content.className = 'debrief-content';\n            content.innerHTML = `\n                <p><strong>完賽時間:</strong> ${d.actualTime || '未記錄'}</p>\n                <p><strong>心態感受:</strong> ${d.mentalState || '未記錄'}</p>\n                <p><strong>補給策略:</strong> ${d.nutrition || '未記錄'}</p>\n                <p><strong>裝備表現:</strong> ${d.gear || '未記錄'}</p>\n                <div class=\"debrief-actions\">\n                    <button class=\"btn btn-outline btn-small debrief-edit-btn\" data-id=\"${d.id}\">編輯</button>\n                    <button class=\"btn btn-danger btn-small debrief-delete-btn\" data-id=\"${d.id}\">刪除</button>\n                </div>\n            `;\n\n            details.appendChild(summary);\n            details.appendChild(content);\n            this.debriefCalendarContainer.appendChild(details);\n        });\n    }\n\n    addHistoryEntryToDOM(entry) {\n        const empty = this.historyList.querySelector('.history-empty');\n        if (empty) empty.remove();\n        let html = '';\n        if (entry.type === 'debrief') {\n            html = `\n                <p class=\"history-date\">${new Date(entry.date).toLocaleDateString('zh-Hant')} - <strong>賽後復盤: ${entry.raceName}</strong></p>\n                <div class=\"history-metrics\">\n                    <div><p class=\"history-metric-name\">完賽時間</p><p class=\"history-metric-value\">${entry.actualTime || '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">心態</p><p class=\"history-metric-value\">${entry.mentalState ? '已記錄' : '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">補給</p><p class=\"history-metric-value\">${entry.nutrition ? '已記錄' : '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">裝備</p><p class=\"history-metric-value\">${entry.gear ? '已記錄' : '未記錄'}</p></div>\n                </div>`;\n        } else {\n            const shoes = getShoes();\n            const shoe = entry.shoeId ? shoes.find(s => s.id === entry.shoeId) : null;\n            const shoeName = shoe ? shoe.name : '';\n\n            html = `\n                <p class=\"history-date\">${new Date(entry.date).toLocaleDateString('zh-Hant')} - <strong>${entry.name || '無標題'}</strong></p>\n                <div class=\"history-metrics\">\n                    <div><p class=\"history-metric-name\">距離</p><p class=\"history-metric-value\">${entry.distance} km</p></div>\n                    <div><p class=\"history-metric-name\">爬升</p><p class=\"history-metric-value\">${entry.elevation} m</p></div>\n                    <div><p class=\"history-metric-name\">時間</p><p class=\"history-metric-value\">${formatTime(entry.time)}</p></div>\n                    <div><p class=\"history-metric-name\">EPH</p><p class=\"metric-value\">${entry.eph.toFixed(1)}</p></div>\n                    ${shoeName ? `<div><p class=\"history-metric-name\">跑鞋</p><p class=\"history-metric-value\">${shoeName}</p></div>` : ''}\n                </div>`;\n        }\n        const item = document.createElement('div');\n        item.className = 'history-item';\n        item.innerHTML = html;\n        this.historyList.prepend(item);\n    }\n\n    addIntervalSetRow() {\n        this.intervalSetCounter++;\n        const div = document.createElement('div');\n        div.className = 'form-group interval-set';\n        div.innerHTML = `\n            <label class=\"form-label\">單趟間歇時間 (秒)</label>\n            <input type=\"number\" class=\"form-control interval-seconds\" placeholder=\"例如: 90\">\n            <label class=\"form-label\">次數</label>\n            <input type=\"number\" class=\"form-control interval-count\" placeholder=\"例如: 8\">\n        `;\n        this.intervalSetsContainer.appendChild(div);\n    }\n\n    clearIntervalSets() {\n        this.intervalSetCounter = 0;\n        const sets = this.intervalSetsContainer.querySelectorAll('.interval-set');\n        sets.forEach((s, i) => { if (i > 0) s.remove(); });\n        sets[0]?.querySelectorAll('input').forEach(inp => inp.value = '');\n        this.intervalResultsList.innerHTML = '';\n        this.intervalTotalDistanceDisplay.textContent = '0 km';\n        this.intervalTotalTimeDisplay.textContent = '00:00:00';\n    }\n\n    handleIntervalCalculation() {\n        const distance = parseFloat(this.intervalDistanceInput.value) || 0;\n        if (distance <= 0) {\n            this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的間歇距離</p>';\n            return;\n        }\n\n        const userTPace = parseFloat(this.userTPaceInput.value) || 0;\n        let totalDist = 0, totalSec = 0;\n        this.intervalResultsList.innerHTML = '';\n\n        // Mode check\n        if (this.intervalModeTimeBtn.classList.contains('active')) {\n            // Existing \"by time\" logic\n            const sets = [];\n            this.intervalSetsContainer.querySelectorAll('.interval-set').forEach(set => {\n                const sec = parseInt(set.querySelector('.interval-seconds').value, 10);\n                const cnt = parseInt(set.querySelector('.interval-count').value, 10);\n                if (!isNaN(sec) && !isNaN(cnt) && sec > 0 && cnt > 0) sets.push({ time: sec, count: cnt });\n            });\n\n            if (sets.length === 0) {\n                this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的間歇數據</p>';\n                return;\n            }\n\n            sets.forEach((st, idx) => {\n                const pace = (st.time / 60) / (distance / 1000);\n                const min = Math.floor(pace), sec = Math.round((pace - min) * 60);\n                let pct = '';\n                if (userTPace > 0) pct = ` (${calculateThresholdPercentage(pace, userTPace).toFixed(0)}% T-Pace)`;\n                totalDist += (distance / 1000) * st.count;\n                totalSec += st.time * st.count;\n                this.intervalResultsList.innerHTML += `\n                    <div class=\"metric-item\">\n                        <span class=\"metric-number\">${String(idx + 1).padStart(2, '0')}</span>\n                        <div class=\"metric-content\">\n                            <h3 class=\"metric-name\">第 ${idx + 1} 組配速 (${st.count} 趟)</h3>\n                            <p class=\"metric-value\">${min}:${String(sec).padStart(2, '0')}/km${pct}</p>\n                        </div>\n                    </div>`;\n            });\n        } else {\n            // New \"by pace\" logic\n            const paceMin = parseInt(this.intervalTargetPaceMin.value, 10) || 0;\n            const paceSec = parseInt(this.intervalTargetPaceSec.value, 10) || 0;\n            const reps = parseInt(this.intervalPaceReps.value, 10) || 0;\n\n            if (reps <= 0 || (paceMin <= 0 && paceSec <= 0)) {\n                this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的目標配速和次數</p>';\n                return;\n            }\n\n            const totalPaceSecondsPerKm = (paceMin * 60) + paceSec;\n            const secondsPerMeter = totalPaceSecondsPerKm / 1000;\n            const timePerRep = secondsPerMeter * distance;\n\n            const repMin = Math.floor(timePerRep / 60);\n            const repSec = Math.round(timePerRep % 60);\n\n            totalDist = (distance / 1000) * reps;\n            totalSec = timePerRep * reps;\n\n            this.intervalResultsList.innerHTML = `\n                <div class=\"metric-item\">\n                    <span class=\"metric-number\">${String(reps).padStart(2, '0')}</span>\n                    <div class=\"metric-content\">\n                        <h3 class=\"metric-name\">單趟時間 (${reps} 趟)</h3>\n                        <p class=\"metric-value\">${repMin}:${String(repSec).padStart(2, '0')}</p>\n                    </div>\n                </div>`;\n        }\n\n        this.intervalTotalDistanceDisplay.textContent = `${totalDist.toFixed(2)} km`;\n        this.intervalTotalTimeDisplay.textContent = formatTime(totalSec / 3600);\n    }\n\n    handleGapCalculation() {\n        const pace = parseFloat(this.gapPaceInput.value) || 0;\n        const grade = parseFloat(this.gapGradeInput.value) || 0;\n        if (pace <= 0) return;\n        const gap = calculateGAP(pace, grade);\n        const min = Math.floor(gap), sec = Math.round((gap - min) * 60);\n        this.gapResultDisplay.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n    }\n\n    handleTreadmillConversion() {\n        const speed = parseFloat(this.treadmillSpeedInput.value) || 0;\n        const incline = parseFloat(this.treadmillInclineInput.value) || 0;\n        if (speed <= 0) return;\n        const pace = convertTreadmillToPace(speed, incline);\n        const min = Math.floor(pace), sec = Math.round((pace - min) * 60);\n        this.equivalentPaceDisplay.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n    }\n\n    handleReverseTreadmillConversion() {\n        const flatPace = parseFloat(this.flatPaceInput.value) || 0;\n        const incline = parseFloat(this.reverseTreadmillInclineInput.value) || 0;\n        if (flatPace <= 0) { alert('請輸入有效的目標平路配速。'); return; }\n        const speed = convertPaceToTreadmillSpeed(flatPace, incline);\n        this.treadmillSpeedResultDisplay.textContent = `${speed.toFixed(1)} km/h`;\n    }\n\n    handleRacePrediction() {\n        // --- Get Base Inputs ---\n        const D = parseFloat(this.raceDistanceInput.value) || 0;\n        const G_plus = parseFloat(this.raceElevationGainInput.value) || 0;\n        const G_minus = parseFloat(this.raceElevationLossInput.value) || 0;\n        const eph = parseFloat(this.userEphInput.value) || 0;\n\n        if (D <= 0 || eph <= 0) {\n            alert('請輸入有效的賽事距離、爬升/下降和您的平均EPH。');\n            return;\n        }\n\n        // --- Convert EPH (speed) to eHP (pace) ---\n        const targetEhpInMinutes = 60 / eph;\n\n        // --- Define Coefficients ---\n        const Kg = 100; // 爬升難度係數\n        const Kd = 200; // 下降難度係數 (折中值)\n\n        // --- Check for Advanced Mode ---\n        const isAdvancedMode = this.advancedStrategySection.open;\n        const AG = parseFloat(this.climbingFactorInput.value) || 1.0; // 爬坡能力係數\n        const AD = parseFloat(this.descendingFactorInput.value) || 1.0; // 下坡能力係數\n        \n        const aidStations = [];\n        this.aidStationContainer.querySelectorAll('.aid-station-group').forEach(group => {\n            const dist = parseFloat(group.querySelector('.aid-station-dist').value);\n            const time = parseFloat(group.querySelector('.aid-station-time').value);\n            if (!isNaN(dist) && !isNaN(time) && dist > 0 && time > 0) {\n                aidStations.push({ distance: dist, time: time });\n            }\n        });\n\n        let equivalentDistance = 0;\n        let mode = \"(標準)\";\n\n        if (isAdvancedMode && (AG !== 1.0 || AD !== 1.0)) {\n            // --- Personalized Formula (Level 3) ---\n            mode = \"(進階)\";\n            equivalentDistance = D + (G_plus / (Kg * AG)) + (G_minus / (Kd * AD));\n        } else {\n            // --- Baseline Formula (Level 2) ---\n            equivalentDistance = D + (G_plus / Kg) + (G_minus / Kd);\n        }\n\n        let totalMinutes = equivalentDistance * targetEhpInMinutes;\n\n        // Add aid station time if in advanced mode\n        if (isAdvancedMode && aidStations.length > 0) {\n            const totalAidStationMinutes = aidStations.reduce((total, station) => total + station.time, 0);\n            totalMinutes += totalAidStationMinutes;\n            if (mode === \"(標準)\") mode = \"(進階-補給站)\"; // Indicate that aid stations were used\n        }\n\n        const totalHours = totalMinutes / 60;\n\n        this.raceTimeDisplay.textContent = formatTime(totalHours) + ` ${mode}`;\n        this.raceEpDisplay.textContent = `${equivalentDistance.toFixed(1)} ekm`;\n    }\n\n    handleTrainingTimeCalculation() {\n        const refRaceDist = parseFloat(this.refRaceDistInput.value) || 0;\n        const refRaceElev = parseFloat(this.refRaceElevInput.value) || 0;\n        const refRaceTime = hmsToHours(this.refRaceTimeHInput.value, this.refRaceTimeMInput.value, this.refRaceTimeSInput.value);\n\n        const trainDist = parseFloat(this.trainDistInput.value) || 0;\n        const trainElev = parseFloat(this.trainElevInput.value) || 0;\n\n        if (refRaceDist <= 0 || refRaceTime <= 0 || trainDist < 0) {\n            alert('請輸入有效的參考賽事數據和訓練距離。');\n            return;\n        }\n\n        const refRaceEP = calculateEP(refRaceDist, refRaceElev);\n        const refRaceEPH = calculateEPH(refRaceEP, refRaceTime);\n\n        if (isNaN(refRaceEPH) || !isFinite(refRaceEPH)) {\n            alert('無法計算參考賽事的 EPH，請檢查輸入值。');\n            return;\n        }\n\n        const trainEP = calculateEP(trainDist, trainElev);\n        const estimatedTrainingTime = trainEP / refRaceEPH; // in hours\n\n        this.refRaceEphResultDisplay.textContent = refRaceEPH.toFixed(1);\n        this.trainingTimeResultDisplay.textContent = formatTime(estimatedTrainingTime);\n    }\n\n    handleAddAidStation() {\n        const stationIndex = this.aidStationContainer.children.length;\n        const stationDiv = document.createElement('div');\n        stationDiv.className = 'form-group-inline aid-station-group';\n        stationDiv.innerHTML = `\n            <div class=\"form-group\">\n                <label for=\"aid-dist-${stationIndex}\" class=\"form-label\">補給站 ${stationIndex + 1} (km)</label>\n                <input type=\"number\" id=\"aid-dist-${stationIndex}\" class=\"form-control aid-station-dist\" placeholder=\"距離\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"aid-time-${stationIndex}\" class=\"form-label\">停留時間 (分)</label>\n                <input type=\"number\" id=\"aid-time-${stationIndex}\" class=\"form-control aid-station-time\" placeholder=\"分鐘\">\n            </div>\n            <button class=\"btn btn-danger btn-small remove-aid-station-btn\">&times;</button>\n        `;\n        this.aidStationContainer.appendChild(stationDiv);\n\n        stationDiv.querySelector('.remove-aid-station-btn').addEventListener('click', () => {\n            stationDiv.remove();\n        });\n    }\n\n    saveCurrentTraining() {\n        const routeName = this.routeNameInput.value.trim() || '未命名訓練';\n        const distance = parseFloat(this.distanceInput.value);\n        const entry = {\n            date: new Date().toISOString(),\n            name: routeName,\n            distance: distance,\n            elevation: this.elevationInput.value,\n            time: hmsToHours(this.targetHoursInput.value, this.targetMinutesInput.value, this.targetSecondsInput.value),\n            eph: parseFloat(this.ephDisplay.textContent) || 0,\n            type: 'training',\n            shoeId: this.runShoeSelector.value || null\n        };\n        if (!entry.distance || !entry.time) { alert('沒有可儲存的有效訓練數據。'); return; }\n        \n        saveTrainingToHistory(entry);\n\n        if (entry.shoeId && entry.distance > 0) {\n            updateShoeMileage(entry.shoeId, entry.distance);\n            this.loadShoes(); \n        }\n\n        this.loadHistory();\n        alert(`已儲存訓練: ${routeName}`);\n    }\n\n    handleExportCard() {\n        const distance = this.resDistanceDisplay.textContent;\n        const elevation = this.resElevationDisplay.textContent;\n        const time = this.resTimeDisplay.textContent;\n        const eph = this.ephDisplay.textContent;\n        const div = document.createElement('div');\n        div.style.width = '400px';\n        div.style.height = '400px';\n        div.style.position = 'absolute';\n        div.style.left = '-9999px';\n        div.style.background = '#fff';\n        div.style.display = 'grid';\n        div.style.gridTemplateColumns = '1fr 1fr';\n        div.style.gap = '10px';\n        div.style.padding = '10px';\n        div.style.fontFamily = '\"Noto Sans SC\", sans-serif';\n        div.style.color = 'rgba(51,51,51,.8)';\n        div.innerHTML = `\n            <div style=\"text-align:center;display:flex;flex-direction:column;justify-content:center;\"><h3 style=\"margin:0;font-size:1.1em;\">距離</h3><p style=\"font-size:1.3em;font-weight:bold;margin:0;\">${distance}</p></div>\n            <div style=\"text-align:center;display:flex;flex-direction:column;justify-content:center;\"><h3 style=\"margin:0;font-size:1.1em;\">總爬升</h3><p style=\"font-size:1.3em;font-weight:bold;margin:0;\">${elevation}</p></div>\n            <div style=\"text-align:center;display:flex;flex-direction:column;justify-content:center;\"><h3 style=\"margin:0;font-size:1.1em;\">用時</h3><p style=\"font-size:1.3em;font-weight:bold;margin:0;\">${time}</p></div>\n            <div style=\"text-align:center;display:flex;flex-direction:column;justify-content:center;\"><h3 style=\"margin:0;font-size:1.1em;\">EPH</h3><p style=\"font-size:1.3em;font-weight:bold;margin:0;\">${eph}</p></div>\n        `;\n        document.body.appendChild(div);\n        exportElementAsPng(div, `TrailSync-Card-${Date.now()}.png`, { width: 400, height: 400 });\n        setTimeout(() => document.body.removeChild(div), 200);\n    }\n\n    handleGPXUpload(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const gpx = parseGPX(e.target.result);\n                if (gpx) {\n                    this.distanceInput.value = gpx.distance.toFixed(2);\n                    this.elevationInput.value = gpx.elevation.toFixed(0);\n                    alert(`GPX 已載入: ${gpx.distance.toFixed(2)} km, ${gpx.elevation.toFixed(0)} m`);\n                } else {\n                    alert('無法解析 GPX 檔案。');\n                }\n            } catch (err) {\n                alert('解析 GPX 檔案時發生錯誤。');\n            }\n        };\n        reader.readAsText(file);\n    }\n\n    clearHistory() {\n        if (confirm('您確定要清除所有歷史紀錄嗎？')) {\n            clearTrainingHistory();\n            clearDebriefs();\n            this.loadHistory();\n        }\n    }\n\n    handleCopyIntervalResults() {\n        const resultsList = this.intervalResultsList;\n        if (resultsList.children.length === 0) {\n            alert('沒有結果可以複製。');\n            return;\n        }\n\n        let textToCopy = '間歇訓練配速解析結果：\\n';\n        resultsList.querySelectorAll('.metric-item').forEach(item => {\n            const title = item.querySelector('.metric-name').textContent.trim();\n            const value = item.querySelector('.metric-value').textContent.trim();\n            textToCopy += `- ${title}: ${value}\\n`;\n        });\n\n        const totalDist = this.intervalTotalDistanceDisplay.textContent;\n        const totalTime = this.intervalTotalTimeDisplay.textContent;\n        textToCopy += `\\n總距離: ${totalDist}\\n總時間: ${totalTime}`;\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            alert('結果已複製到剪貼簿！');\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new TrailSyncApp();\n});","\n/**\n * Generates a transparent PNG from a DOM element and triggers download.\n * @param {HTMLElement} element - The DOM element to capture.\n * @param {string} filename - The desired filename for the downloaded image.\n */\nexport function exportElementAsPng(element, filename = 'trail-card.png', html2canvasOptions = {}) {\n    if (!element) {\n        console.error('Element for PNG export not found.');\n        return;\n    }\n\n    // Use html2canvas to render the element\n    html2canvas(element, {\n        backgroundColor: null, // Crucial for transparency\n        scale: 2, // Increase resolution for better quality\n        ...html2canvasOptions // Merge additional options\n    }).then(canvas => {\n        // Create a link element\n        const link = document.createElement('a');\n        link.download = filename;\n        link.href = canvas.toDataURL('image/png');\n        \n        // Trigger the download\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }).catch(err => {\n        console.error('Error exporting PNG:', err);\n    });\n}\n"],"names":["formatTime","timeInHours","isNaN","hours","Math","floor","minutes","seconds","toString","padStart","hmsToHours","h","m","s","parseInt","calculateEP","distance","elevation","calculateEPH","ep","paceToMinutesPerKm","paceInHoursPerKm","totalSeconds","round","minutesPerKmToHoursPerKm","haversineDistance","p1","p2","dLat","toRad","lat","dLon","lon","lat1","lat2","a","sin","cos","atan2","sqrt","value","PI","GapConfig","gap","tech","TRAINING_HISTORY_KEY","getTrainingHistory","history","localStorage","getItem","JSON","parse","e","console","error","SHOE_STORAGE_KEY","getShoes","shoes","saveAllShoes","setItem","stringify","updateShoeMileage","shoeId","runDistance","shoeIndex","findIndex","id","currentMileage","parseFloat","DEBRIEF_STORAGE_KEY","getDebriefs","debriefs","TrainingPaceCalculator","constructor","this","cacheDOMElements","addEventListeners","init","modeCurrentBtn","document","getElementById","modeTargetBtn","distanceInput","inputTypeTimeBtn","inputTypePaceBtn","timeGroup","paceGroup","hoursInput","minutesInput","secondsInput","paceMinInput","paceSecInput","calculateBtn","basePaceOutput","intervalDistInput","intervalRepsInput","intervalPaceOutput","intervalRecoveryOutput","lsdDistInput","lsdPaceOutput","lsdRecoveryOutput","copyBtn","addEventListener","toggleInputType","calculateAndDisplay","copyResults","textContent","alert","textToCopy","trim","replace","navigator","clipboard","writeText","then","catch","err","type","style","display","classList","add","remove","contains","paceMinutes","paceSeconds","intervalDistance","lsdDistance","basePace","calculateEquivalentPace","trainingPaces","basePaceInHoursPerKm","intervalDistanceMeters","lsdDistanceKm","interval","lsd","recovery","intervalPaceFactor","log2","max","min","lsdPaceFactor","getTrainingPaces","riegelPrediction","t1","d1","d2","pow","generateWorkout","options","baseRace","mainWorkout","warmup","paceZones","I","T","M","E","tPace","time10k","iPace","mPace","getPaceZones","mainPaceInHoursPerKm","targetPace","mainPaceFormatted","finalMainWorkout","pace","warmupPaceInHoursPerKm","warmupPaceFormatted","warmupDistance","warmupTime","finalWarmup","text","toFixed","zone","strides","cooldownTime","cooldownPaceInHoursPerKm","cooldownDistance","main","cooldown","debug","TrainingPlanUI","generateBtn","modeResultBtn","modeGoalBtn","resultGroup","goalGroup","resultDist","resultHours","resultMinutes","resultSeconds","goalDist","goalHours","goalMinutes","goalSeconds","mainType","mainDetails","mainPace","warmupTimeBtn","warmupDistBtn","warmupValue","warmupLabel","querySelector","resWarmup","resWarmupPace","resMainTitle","resMainPace","resCooldown","resCooldownPace","toggleMode","toggleWarmupInput","mode","placeholder","details","workoutPlan","warmupPaceText","TrailSyncApp","editingDebriefId","loadShoes","loadHistory","intervalSetCounter","initializeDebriefCalendar","trainingPaceCalculator","trainingPlanUI","routeNameInput","elevationInput","targetHoursInput","targetMinutesInput","targetSecondsInput","routeTypeSelect","altitudeInput","userTPaceInput","ultraRaceCheckbox","resultsPaneOnPage","resDistanceDisplay","resElevationDisplay","resTimeDisplay","ephDisplay","exportCardBtn","cardExporterContent","runShoeSelector","intervalModeTimeBtn","intervalModePaceBtn","intervalTimeInputs","intervalPaceInputs","intervalDistanceInput","intervalCalculateBtn","intervalResultsList","intervalSetsContainer","addIntervalSetBtn","clearIntervalSetsBtn","intervalTotalDistanceDisplay","intervalTotalTimeDisplay","intervalTargetPaceMin","intervalTargetPaceSec","intervalPaceReps","copyIntervalBtn","gapPaceInput","gapGradeInput","gapCalculateBtn","gapResultDisplay","treadmillSpeedInput","treadmillInclineInput","treadmillConvertBtn","equivalentPaceDisplay","flatPaceInput","reverseTreadmillInclineInput","reverseTreadmillConvertBtn","treadmillSpeedResultDisplay","raceDistanceInput","raceElevationGainInput","raceElevationLossInput","userEphInput","racePredictBtn","raceTimeDisplay","raceEpDisplay","saveTrainingBtn","historyList","clearHistoryBtn","shoeNameInput","shoeBrandInput","shoeMileageInput","addShoeBtn","shoeListContainer","debriefRaceNameInput","debriefDateInput","debriefActualTimeInput","debriefMentalStateInput","debriefNutritionInput","debriefGearInput","debriefSubmitBtn","debriefCalendarContainer","refRaceDistInput","refRaceElevInput","refRaceTimeHInput","refRaceTimeMInput","refRaceTimeSInput","trainDistInput","trainElevInput","calculateTrainingTimeBtn","trainingTimeResultDisplay","refRaceEphResultDisplay","advancedStrategySection","climbingFactorInput","descendingFactorInput","aidStationContainer","addAidStationBtn","handleCalculation","handleIntervalCalculation","handleGapCalculation","handleTreadmillConversion","handleRacePrediction","saveCurrentTraining","clearHistory","handleExportCard","handleAddShoe","handleDebriefSubmit","addIntervalSetRow","clearIntervalSets","handleReverseTreadmillConversion","handleTrainingTimeCalculation","handleCopyIntervalResults","handleAddAidStation","switchIntervalMode","target","dataset","handleDeleteShoe","handleAddMileage","handleEditShoe","debriefId","handleDeleteDebrief","handleEditDebrief","routeType","altitude","isUltra","checked","baseEph","finalEph","isUltraRace","terrainFactor","road","fire_trail","technical","alpine","gravityFactor","fatigueFactor","log10","getAdvancedEPH","innerHTML","length","forEach","shoe","renderShoeCard","addShoeToSelector","card","createElement","className","pct","name","brand","appendChild","opt","initial","shoeData","newShoe","Date","now","initialMileage","addedDate","toISOString","push","addShoe","confirm","filter","deleteShoe","km","prompt","num","find","newName","newBrand","newMile","updated","idx","d","deleteDebrief","debrief","raceName","date","actualTime","mentalState","nutrition","gear","scrollIntoView","behavior","entry","updatedData","index","updateDebrief","debriefData","newDebrief","savedAt","saveDebrief","k","charAt","toUpperCase","slice","combined","sort","b","it","addHistoryEntryToDOM","summary","toLocaleDateString","content","empty","html","shoeName","time","eph","item","prepend","div","sets","querySelectorAll","i","inp","userTPace","totalDist","totalSec","set","sec","cnt","count","st","actualPace","thresholdPace","String","paceMin","paceSec","reps","timePerRep","repMin","repSec","grade","gradient","calculateGAP","speed","incline","convertTreadmillToPace","flatPace","convertPaceToTreadmillSpeed","D","G_plus","G_minus","targetEhpInMinutes","isAdvancedMode","open","AG","AD","aidStations","group","dist","equivalentDistance","totalMinutes","reduce","total","station","totalHours","refRaceDist","refRaceElev","refRaceTime","trainDist","trainElev","refRaceEPH","isFinite","estimatedTrainingTime","stationIndex","children","stationDiv","routeName","saveTrainingToHistory","width","height","position","left","background","gridTemplateColumns","padding","fontFamily","color","body","element","filename","html2canvasOptions","html2canvas","backgroundColor","scale","canvas","link","download","href","toDataURL","click","removeChild","exportElementAsPng","setTimeout","handleGPXUpload","event","file","files","reader","FileReader","onload","gpx","gpxContent","trkpts","DOMParser","parseFromString","getElementsByTagName","totalDistance","totalElevationGain","totalElevationLoss","points","getAttribute","eleNode","ele","prevPoint","eleDiff","abs","descent","parseGPX","result","readAsText","removeItem","clearTrainingHistory","resultsList","title","totalTime"],"mappings":"yBAsDO,SAASA,EAAWC,GACvB,GAAIC,MAAMD,IAAgBA,EAAc,EACpC,MAAO,WAEX,MAAME,EAAQC,KAAKC,MAAMJ,GACnBK,EAAUF,KAAKC,MAA8B,IAAvBJ,EAAcE,IACpCI,EAAUH,KAAKC,MAAiD,IAAjB,IAAvBJ,EAAcE,GAAeG,IAC3D,MAAO,GAAGH,EAAMK,WAAWC,SAAS,EAAG,QAAQH,EAAQE,WAAWC,SAAS,EAAG,QAAQF,EAAQC,WAAWC,SAAS,EAAG,MACzH,CASO,SAASC,EAAWC,EAAGC,EAAGC,GAC7B,OAAQC,SAASH,EAAG,KAAO,IAAMG,SAASF,EAAG,KAAO,GAAK,IAAME,SAASD,EAAG,KAAO,GAAK,IAC3F,CAQO,SAASE,EAAYC,EAAUC,GAClC,OAAQD,GAAY,IAAOC,GAAa,GAAK,GACjD,CAQO,SAASC,EAAaC,EAAIlB,GAC7B,OAAIA,GAAe,EAAU,EACtBkB,EAAKlB,CAChB,CAOO,SAASmB,EAAmBC,GAC/B,GAAInB,MAAMmB,IAAqBA,GAAoB,EAC/C,MAAO,UAEX,MAAMC,EAAkC,KAAnBD,EAGrB,MAAO,GAFSjB,KAAKC,MAAMiB,EAAe,OAC1BlB,KAAKmB,MAAMD,EAAe,IACbd,WAAWC,SAAS,EAAG,SACxD,CAQO,SAASe,EAAyBlB,EAASC,GAE9C,OADgC,GAAVD,EAAgBC,GAChB,IAC1B,CChEA,SAASkB,EAAkBC,EAAIC,GAC3B,MACMC,EAAOC,EAAMF,EAAGG,IAAMJ,EAAGI,KACzBC,EAAOF,EAAMF,EAAGK,IAAMN,EAAGM,KACzBC,EAAOJ,EAAMH,EAAGI,KAChBI,EAAOL,EAAMF,EAAGG,KAEhBK,EAAI/B,KAAKgC,IAAIR,EAAO,GAAKxB,KAAKgC,IAAIR,EAAO,GACrCxB,KAAKgC,IAAIL,EAAO,GAAK3B,KAAKgC,IAAIL,EAAO,GAAK3B,KAAKiC,IAAIJ,GAAQ7B,KAAKiC,IAAIH,GAE9E,OATU,MAQA,EAAI9B,KAAKkC,MAAMlC,KAAKmC,KAAKJ,GAAI/B,KAAKmC,KAAK,EAAIJ,IAEzD,CAEA,SAASN,EAAMW,GACX,OAAOA,EAAQpC,KAAKqC,GAAK,GAC7B,CCvDA,MAAMC,EAKK,CACPC,IAAK,IAELC,KAAM,KCrBJC,EAAuB,2BAMtB,SAASC,IACZ,IACI,MAAMC,EAAUC,aAAaC,QAAQJ,GACrC,OAAOE,EAAUG,KAAKC,MAAMJ,GAAW,EAC3C,CAAE,MAAOK,GAEL,OADAC,QAAQC,MAAM,mDAAoDF,GAC3D,EACX,CACJ,CCjBA,MAAMG,EAAmB,iBAMlB,SAASC,IACZ,MAAMC,EAAQT,aAAaC,QAAQM,GACnC,OAAOE,EAAQP,KAAKC,MAAMM,GAAS,EACvC,CAMA,SAASC,EAAaD,GAClBT,aAAaW,QAAQJ,EAAkBL,KAAKU,UAAUH,GAC1D,CAyBO,SAASI,EAAkBC,EAAQC,GACtC,MAAMN,EAAQD,IACRQ,EAAYP,EAAMQ,UAAUpD,GAAKA,EAAEqD,KAAOJ,GAE5CE,GAAY,IACZP,EAAMO,GAAWG,gBAAkBC,WAAWL,GAC9CL,EAAaD,GAErB,CClDA,MAAMY,EAAsB,oBAMrB,SAASC,IACZ,MAAMC,EAAWvB,aAAaC,QAAQoB,GACtC,OAAOE,EAAWrB,KAAKC,MAAMoB,GAAY,EAC7C,CCPO,MAAMC,EACT,WAAAC,GACIC,KAAKC,mBACLD,KAAKE,oBACLF,KAAKG,MACT,CAEA,IAAAA,GAEA,CAEA,gBAAAF,GAEID,KAAKI,eAAiBC,SAASC,eAAe,oBAC9CN,KAAKO,cAAgBF,SAASC,eAAe,mBAG7CN,KAAKQ,cAAgBH,SAASC,eAAe,gBAG7CN,KAAKS,iBAAmBJ,SAASC,eAAe,kBAChDN,KAAKU,iBAAmBL,SAASC,eAAe,kBAChDN,KAAKW,UAAYN,SAASC,eAAe,kBACzCN,KAAKY,UAAYP,SAASC,eAAe,kBAGzCN,KAAKa,WAAaR,SAASC,eAAe,aAC1CN,KAAKc,aAAeT,SAASC,eAAe,eAC5CN,KAAKe,aAAeV,SAASC,eAAe,eAG5CN,KAAKgB,aAAeX,SAASC,eAAe,gBAC5CN,KAAKiB,aAAeZ,SAASC,eAAe,gBAG5CN,KAAKkB,aAAeb,SAASC,eAAe,iBAG5CN,KAAKmB,eAAiBd,SAASC,eAAe,iBAG9CN,KAAKoB,kBAAoBf,SAASC,eAAe,qBACjDN,KAAKqB,kBAAoBhB,SAASC,eAAe,qBACjDN,KAAKsB,mBAAqBjB,SAASC,eAAe,qBAClDN,KAAKuB,uBAAyBlB,SAASC,eAAe,yBAGtDN,KAAKwB,aAAenB,SAASC,eAAe,gBAC5CN,KAAKyB,cAAgBpB,SAASC,eAAe,gBAC7CN,KAAK0B,kBAAoBrB,SAASC,eAAe,oBAGjDN,KAAK2B,QAAUtB,SAASC,eAAe,mBAC3C,CAEA,iBAAAJ,GACIF,KAAKS,iBAAiBmB,iBAAiB,QAAS,IAAM5B,KAAK6B,gBAAgB,SAC3E7B,KAAKU,iBAAiBkB,iBAAiB,QAAS,IAAM5B,KAAK6B,gBAAgB,SAC3E7B,KAAKkB,aAAaU,iBAAiB,QAAS,IAAM5B,KAAK8B,uBAGvD9B,KAAKoB,kBAAkBQ,iBAAiB,QAAS,IAAM5B,KAAK8B,uBAC5D9B,KAAKwB,aAAaI,iBAAiB,QAAS,IAAM5B,KAAK8B,uBAEpD9B,KAAK2B,SAAS3B,KAAK2B,QAAQC,iBAAiB,QAAS,IAAM5B,KAAK+B,cACvE,CAEA,WAAAA,GACI,GAAwC,YAApC/B,KAAKmB,eAAea,YAEpB,YADAC,MAAM,aAIV,MAAMC,EAAa,wBAEjBlC,KAAKmB,eAAea,0CAGpBhC,KAAKoB,kBAAkBtD,OAAS,kBAClCkC,KAAKqB,kBAAkBvD,OAAS,kBAC9BkC,KAAKsB,mBAAmBU,uBACzBhC,KAAKuB,uBAAuBS,yCAGzBhC,KAAKwB,aAAa1D,OAAS,qBAC7BkC,KAAKyB,cAAcO,uBACpBhC,KAAK0B,kBAAkBM,wBACtBG,OAAOC,QAAQ,QAAS,IAE1BC,UAAUC,UAAUC,UAAUL,GAAYM,KAAK,KAC3CP,MAAM,gBACPQ,MAAMC,IACL/D,QAAQC,MAAM,WAAY8D,GAC1BT,MAAM,mBAEd,CAEA,eAAAJ,CAAgBc,GACC,SAATA,GACA3C,KAAKW,UAAUiC,MAAMC,QAAU,QAC/B7C,KAAKY,UAAUgC,MAAMC,QAAU,OAC/B7C,KAAKS,iBAAiBqC,UAAUC,IAAI,UACpC/C,KAAKU,iBAAiBoC,UAAUE,OAAO,YAEvChD,KAAKW,UAAUiC,MAAMC,QAAU,OAC/B7C,KAAKY,UAAUgC,MAAMC,QAAU,QAC/B7C,KAAKS,iBAAiBqC,UAAUE,OAAO,UACvChD,KAAKU,iBAAiBoC,UAAUC,IAAI,UAE5C,CAEA,mBAAAjB,GACI,MAAMxF,EAAWoD,WAAWM,KAAKQ,cAAc1C,OAC/C,IAAIvC,EAEJ,GAAIyE,KAAKS,iBAAiBqC,UAAUG,SAAS,UAAW,CAIpD1H,EAAcS,EAHAI,SAAS4D,KAAKa,WAAW/C,QAAU,EACjC1B,SAAS4D,KAAKc,aAAahD,QAAU,EACrC1B,SAAS4D,KAAKe,aAAajD,QAAU,EAEzD,KAAO,CACH,MAAMoF,EAAc9G,SAAS4D,KAAKgB,aAAalD,QAAU,EACnDqF,EAAc/G,SAAS4D,KAAKiB,aAAanD,QAAU,EACzD,GAAIxB,EAAW,EAAG,CAEdf,EADyBuB,EAAyBoG,EAAaC,GAC9B7G,CACrC,MACIf,EAAc,CAEtB,CAEA,IAAKe,GAAYA,GAAY,IAAMf,GAAeA,GAAe,EAO7D,OALAyE,KAAKmB,eAAea,YAAc,UAClChC,KAAKsB,mBAAmBU,YAAc,UACtChC,KAAKuB,uBAAuBS,YAAc,UAC1ChC,KAAKyB,cAAcO,YAAc,eACjChC,KAAK0B,kBAAkBM,YAAc,WAIzC,MAAMoB,EAAmB1D,WAAWM,KAAKoB,kBAAkBtD,QAAU,IAC/DuF,EAAc3D,WAAWM,KAAKwB,aAAa1D,QAAU,GACrDwF,ENhBP,SAAiChH,EAAUf,GAC9C,OAAIe,GAAY,GAAKf,GAAe,EACzB,EAEJA,EAAce,CACzB,CMWyBiH,CAAwBjH,EAAUf,GAC7CiI,ENFP,SAA0BC,EAAsBC,EAAyB,IAAKC,EAAgB,IACjG,GAAIF,GAAwB,EACxB,MAAO,CACHG,SAAU,EACVC,IAAK,EACLC,SAAU,GASlB,IAAIC,EAHiB,IACT,IACOrI,KAAKsI,KAAKN,EAHV,KAKnBK,EAAqBrI,KAAKuI,IAAI,IAAMvI,KAAKwI,IAAI,KAAMH,IAOnD,IAAII,EAHmB,MAEDR,EAHD,IAGiC,GADxC,KAQd,OALAQ,EAAgBzI,KAAKuI,IAAI,IAAMvI,KAAKwI,IAAI,KAAMC,IAKvC,CACHP,SAAUH,EAAuBM,EACjCF,IAAKJ,EAAuBU,EAC5BL,SALuB,KAKbL,EAElB,CM/B8BW,CAAiBd,EAAUF,EAAkBC,GAEnErD,KAAKmB,eAAea,YAActF,EAAmB4G,GAGrDtD,KAAKsB,mBAAmBU,YAActF,EAAmB8G,EAAcI,UACvE5D,KAAKuB,uBAAuBS,YAActF,EAAmB8G,EAAcM,UAG3E9D,KAAKyB,cAAcO,YAActF,EAAmB8G,EAAcK,KAClE7D,KAAK0B,kBAAkBM,YAActF,EAAmB8G,EAAcM,SAC1E,EClJG,SAASO,EAAiBC,EAAIC,EAAIC,GACrC,OAAIF,GAAM,GAAKC,GAAM,GAAKC,GAAM,EAAU,EACnCF,EAAK5I,KAAK+I,IAAID,EAAKD,EAAI,KAClC,CAyCO,SAASG,EAAgBC,GAC5B,MAAMC,SACFA,EAAQC,YACRA,EAAWC,OACXA,GACAH,EAIEI,EA3CH,SAAsBtB,GACzB,GAAIA,GAAwB,EACxB,MAAO,CAAEuB,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAKlC,MAAMC,EAAQ3B,EAAuB3G,EAAyB,EAAG,IAG3DuI,EAAiC,GAAvB5B,EAEV6B,EADSjB,EAAiBgB,EAAS,GAAI,GACtB,EAIjBE,EADUlB,EAAiBgB,EAAS,GAAI,QACtB,OAKxB,MAAO,CACHL,EAAGM,EACHL,EAAGG,EACHF,EAAGK,EACHJ,EANUI,EAAQzI,EAAyB,EAAG,IAQtD,CAgBsB0I,CADDZ,EAASrJ,YAAcqJ,EAAStI,UAIjD,IAAImJ,EACJ,OAAQZ,EAAYa,YAChB,IAAK,SACDD,EAAuBV,EAAUC,EACjC,MACJ,IAAK,SACDS,EAAuBV,EAAUE,EACjC,MACJ,IAAK,SACDQ,EAAuBV,EAAUG,EACjC,MACJ,QACIO,EAAuBV,EAAUI,EAGzC,MAAMQ,EAAoBjJ,EAAmB+I,GACvCG,EAAmB,IAAKf,EAAagB,KAAMF,GAG3CG,EAAyBL,EAAuB3I,EAAyB,EAAG,IAC5EiJ,EAAsB,GAAGrJ,EAAmBoJ,EAAyBhJ,EAAyB,EAAG,UAAUJ,EAAmBoJ,EAAyBhJ,EAAyB,EAAG,OAEzL,IAAIkJ,EAAgBC,EACA,aAAhBnB,EAAOnC,MACPqD,EAAiBlB,EAAOhH,MACxBmI,EAAanB,EAAOhH,MAAQgI,EAAyB,KAErDG,EAAanB,EAAOhH,MACpBkI,EAAiBlB,EAAOhH,MAAQ,GAAKgI,GAGzC,MAAMI,EAAc,CAChBC,KAAM,GAAGF,EAAWG,QAAQ,YAAYJ,EAAeI,QAAQ,SAC/DP,KAAME,EACNM,KAAM,WACNC,QAAoC,WAA3BzB,EAAYa,WAA0B,mBAAqB,MAIlEa,EAA4B,GAAbN,EACfO,EAA2BV,EAAyBhJ,EAAyB,EAAG,IAChF2J,EAAmBF,EAAe,GAAKC,EAO7C,MAAO,CACH1B,OAAQoB,EACRQ,KAAMd,EACNe,SARkB,CAClBR,KAAM,GAAGI,EAAaH,QAAQ,YAAYK,EAAiBL,QAAQ,SACnEP,KAAMnJ,EAAmB8J,IAOzBI,MAAO,CAAE7B,aAEjB,CCrHO,MAAM8B,EACT,WAAA9G,GACIC,KAAKC,mBACDD,KAAK8G,aACL9G,KAAKE,mBAEb,CAEA,gBAAAD,GAEID,KAAK+G,cAAgB1G,SAASC,eAAe,oBAC7CN,KAAKgH,YAAc3G,SAASC,eAAe,kBAC3CN,KAAKiH,YAAc5G,SAASC,eAAe,qBAC3CN,KAAKkH,UAAY7G,SAASC,eAAe,mBAGzCN,KAAKmH,WAAa9G,SAASC,eAAe,oBAC1CN,KAAKoH,YAAc/G,SAASC,eAAe,qBAC3CN,KAAKqH,cAAgBhH,SAASC,eAAe,uBAC7CN,KAAKsH,cAAgBjH,SAASC,eAAe,uBAG7CN,KAAKuH,SAAWlH,SAASC,eAAe,kBACxCN,KAAKwH,UAAYnH,SAASC,eAAe,mBACzCN,KAAKyH,YAAcpH,SAASC,eAAe,qBAC3CN,KAAK0H,YAAcrH,SAASC,eAAe,qBAG3CN,KAAK2H,SAAWtH,SAASC,eAAe,kBACxCN,KAAK4H,YAAcvH,SAASC,eAAe,qBAC3CN,KAAK6H,SAAWxH,SAASC,eAAe,kBAGxCN,KAAK8H,cAAgBzH,SAASC,eAAe,oBAC7CN,KAAK+H,cAAgB1H,SAASC,eAAe,oBAC7CN,KAAKgI,YAAc3H,SAASC,eAAe,qBAC3CN,KAAKiI,YAAc5H,SAAS6H,cAAc,kCAG1ClI,KAAK8G,YAAczG,SAASC,eAAe,qBAG3CN,KAAKmI,UAAY9H,SAASC,eAAe,mBACzCN,KAAKoI,cAAgB/H,SAASC,eAAe,wBAC7CN,KAAKqI,aAAehI,SAASC,eAAe,uBAC5CN,KAAKsI,YAAcjI,SAASC,eAAe,sBAC3CN,KAAKuI,YAAclI,SAASC,eAAe,qBAC3CN,KAAKwI,gBAAkBnI,SAASC,eAAe,0BAG/CN,KAAK2B,QAAUtB,SAASC,eAAe,oBAC3C,CAEA,iBAAAJ,GACIF,KAAK+G,cAAcnF,iBAAiB,QAAS,IAAM5B,KAAKyI,WAAW,WACnEzI,KAAKgH,YAAYpF,iBAAiB,QAAS,IAAM5B,KAAKyI,WAAW,SACjEzI,KAAK8H,cAAclG,iBAAiB,QAAS,IAAM5B,KAAK0I,kBAAkB,SAC1E1I,KAAK+H,cAAcnG,iBAAiB,QAAS,IAAM5B,KAAK0I,kBAAkB,SAC1E1I,KAAK8G,YAAYlF,iBAAiB,QAAS,IAAM5B,KAAK8B,uBACnD9B,KAAK2B,SAAS3B,KAAK2B,QAAQC,iBAAiB,QAAS,IAAM5B,KAAK+B,cACvE,CAEA,WAAAA,GACI,GAAmC,OAA/B/B,KAAKmI,UAAUnG,YAEf,YADAC,MAAM,aAIV,MAAMC,EAAa,8BAGnBlC,KAAKmI,UAAUnG,kBACnBhC,KAAKoI,cAAcpG,yBAEdhC,KAAKqI,aAAarG,kBACvBhC,KAAKsI,YAAYtG,wBAEbhC,KAAKuI,YAAYvG,kBACrBhC,KAAKwI,gBAAgBxG,wBACfG,OAAOC,QAAQ,QAAS,IAE1BC,UAAUC,UAAUC,UAAUL,GAAYM,KAAK,KAC3CP,MAAM,gBACPQ,MAAMC,IACL/D,QAAQC,MAAM,WAAY8D,GAC1BT,MAAM,mBAEd,CAEA,UAAAwG,CAAWE,GACM,WAATA,GACA3I,KAAKiH,YAAYrE,MAAMC,QAAU,QACjC7C,KAAKkH,UAAUtE,MAAMC,QAAU,OAC/B7C,KAAK+G,cAAcjE,UAAUC,IAAI,UACjC/C,KAAKgH,YAAYlE,UAAUE,OAAO,YAElChD,KAAKiH,YAAYrE,MAAMC,QAAU,OACjC7C,KAAKkH,UAAUtE,MAAMC,QAAU,QAC/B7C,KAAK+G,cAAcjE,UAAUE,OAAO,UACpChD,KAAKgH,YAAYlE,UAAUC,IAAI,UAEvC,CAEA,iBAAA2F,CAAkB/F,GACD,SAATA,GACA3C,KAAKiI,YAAYjG,YAAc,oBAC/BhC,KAAKgI,YAAYY,YAAc,cAC/B5I,KAAK8H,cAAchF,UAAUC,IAAI,UACjC/C,KAAK+H,cAAcjF,UAAUE,OAAO,YAEpChD,KAAKiI,YAAYjG,YAAc,oBAC/BhC,KAAKgI,YAAYY,YAAc,aAC/B5I,KAAK8H,cAAchF,UAAUE,OAAO,UACpChD,KAAK+H,cAAcjF,UAAUC,IAAI,UAEzC,CAEA,mBAAAjB,GAEI,IAAI8C,EAAW,CAAA,EASf,GARI5E,KAAK+G,cAAcjE,UAAUG,SAAS,WACtC2B,EAAStI,SAAWoD,WAAWM,KAAKmH,WAAWrJ,OAC/C8G,EAASrJ,YAAcS,EAAWgE,KAAKoH,YAAYtJ,MAAOkC,KAAKqH,cAAcvJ,MAAOkC,KAAKsH,cAAcxJ,SAEvG8G,EAAStI,SAAWoD,WAAWM,KAAKuH,SAASzJ,OAC7C8G,EAASrJ,YAAcS,EAAWgE,KAAKwH,UAAU1J,MAAOkC,KAAKyH,YAAY3J,MAAOkC,KAAK0H,YAAY5J,SAGhG8G,EAAStI,WAAasI,EAASrJ,YAEhC,YADA0G,MAAM,oBAKV,MAAM4C,EAAc,CAChBlC,KAAM3C,KAAK2H,SAAS7J,MACpB+K,QAAS7I,KAAK4H,YAAY9J,MAC1B4H,WAAY1F,KAAK6H,SAAS/J,OAIxBgH,EAAS,CACXnC,KAAM3C,KAAK8H,cAAchF,UAAUG,SAAS,UAAY,OAAS,WACjEnF,MAAO4B,WAAWM,KAAKgI,YAAYlK,QAGvC,IAAKgH,EAAOhH,MAER,YADAmE,MAAM,kBAKV,MAAM6G,EAAcpE,EAAgB,CAAEE,WAAUC,cAAaC,WAG7D9E,KAAKmI,UAAUnG,YAAc8G,EAAYhE,OAAOqB,KAChD,IAAI4C,EAAiB,OAAOD,EAAYhE,OAAOe,OAC5CiD,EAAYhE,OAAOwB,UAClByC,GAAkB,MAAMD,EAAYhE,OAAOwB,WAE/CtG,KAAKoI,cAAcpG,YAAc+G,EAEjC/I,KAAKqI,aAAarG,YAAc,GAAG8G,EAAYpC,KAAK/D,SAASmG,EAAYpC,KAAKmC,UAC9E7I,KAAKsI,YAAYtG,YAAc,OAAO8G,EAAYpC,KAAKb,OAEvD7F,KAAKuI,YAAYvG,YAAc8G,EAAYnC,SAASR,KACpDnG,KAAKwI,gBAAgBxG,YAAc,OAAO8G,EAAYnC,SAASd,MACnE,ECnJJ,MAAMmD,EACF,WAAAjJ,GACIC,KAAKiJ,iBAAmB,KACxBjJ,KAAKC,mBACLD,KAAKE,oBACLF,KAAKkJ,YACLlJ,KAAKmJ,cACLnJ,KAAKoJ,mBAAqB,EAC1BpJ,KAAKqJ,4BACLrJ,KAAKsJ,uBAAyB,IAAIxJ,EAClCE,KAAKuJ,eAAiB,IAAI1C,CAC9B,CAEA,gBAAA5G,GACID,KAAKwJ,eAAiBnJ,SAASC,eAAe,cAC9CN,KAAKQ,cAAgBH,SAASC,eAAe,YAC7CN,KAAKyJ,eAAiBpJ,SAASC,eAAe,aAC9CN,KAAK0J,iBAAmBrJ,SAASC,eAAe,gBAChDN,KAAK2J,mBAAqBtJ,SAASC,eAAe,kBAClDN,KAAK4J,mBAAqBvJ,SAASC,eAAe,kBAClDN,KAAK6J,gBAAkBxJ,SAASC,eAAe,cAC/CN,KAAK8J,cAAgBzJ,SAASC,eAAe,YAC7CN,KAAK+J,eAAiB1J,SAASC,eAAe,eAC9CN,KAAKgK,kBAAoB3J,SAASC,eAAe,uBACjDN,KAAKkB,aAAeb,SAASC,eAAe,iBAC5CN,KAAKiK,kBAAoB5J,SAASC,eAAe,uBACjDN,KAAKkK,mBAAqB7J,SAASC,eAAe,gBAClDN,KAAKmK,oBAAsB9J,SAASC,eAAe,iBACnDN,KAAKoK,eAAiB/J,SAASC,eAAe,YAC9CN,KAAKqK,WAAahK,SAASC,eAAe,OAC1CN,KAAKsK,cAAgBjK,SAASC,eAAe,mBAC7CN,KAAKuK,oBAAsBlK,SAASC,eAAe,yBACnDN,KAAKwK,gBAAkBnK,SAASC,eAAe,qBAG/CN,KAAKyK,oBAAsBpK,SAASC,eAAe,sBACnDN,KAAK0K,oBAAsBrK,SAASC,eAAe,sBACnDN,KAAK2K,mBAAqBtK,SAASC,eAAe,wBAClDN,KAAK4K,mBAAqBvK,SAASC,eAAe,wBAClDN,KAAK6K,sBAAwBxK,SAASC,eAAe,qBACrDN,KAAK8K,qBAAuBzK,SAASC,eAAe,sBACpDN,KAAK+K,oBAAsB1K,SAASC,eAAe,yBACnDN,KAAKgL,sBAAwB3K,SAASC,eAAe,2BACrDN,KAAKiL,kBAAoB5K,SAASC,eAAe,wBACjDN,KAAKkL,qBAAuB7K,SAASC,eAAe,2BACpDN,KAAKmL,6BAA+B9K,SAASC,eAAe,2BAC5DN,KAAKoL,yBAA2B/K,SAASC,eAAe,uBACxDN,KAAKqL,sBAAwBhL,SAASC,eAAe,4BACrDN,KAAKsL,sBAAwBjL,SAASC,eAAe,4BACrDN,KAAKuL,iBAAmBlL,SAASC,eAAe,sBAChDN,KAAKwL,gBAAkBnL,SAASC,eAAe,yBAE/CN,KAAKyL,aAAepL,SAASC,eAAe,YAC5CN,KAAK0L,cAAgBrL,SAASC,eAAe,aAC7CN,KAAK2L,gBAAkBtL,SAASC,eAAe,iBAC/CN,KAAK4L,iBAAmBvL,SAASC,eAAe,cAEhDN,KAAK6L,oBAAsBxL,SAASC,eAAe,mBACnDN,KAAK8L,sBAAwBzL,SAASC,eAAe,qBACrDN,KAAK+L,oBAAsB1L,SAASC,eAAe,qBACnDN,KAAKgM,sBAAwB3L,SAASC,eAAe,mBACrDN,KAAKiM,cAAgB5L,SAASC,eAAe,mBAC7CN,KAAKkM,6BAA+B7L,SAASC,eAAe,6BAC5DN,KAAKmM,2BAA6B9L,SAASC,eAAe,iCAC1DN,KAAKoM,4BAA8B/L,SAASC,eAAe,0BAE3DN,KAAKqM,kBAAoBhM,SAASC,eAAe,iBACjDN,KAAKsM,uBAAyBjM,SAASC,eAAe,uBACtDN,KAAKuM,uBAAyBlM,SAASC,eAAe,uBACtDN,KAAKwM,aAAenM,SAASC,eAAe,YAC5CN,KAAKyM,eAAiBpM,SAASC,eAAe,gBAC9CN,KAAK0M,gBAAkBrM,SAASC,eAAe,aAC/CN,KAAK2M,cAAgBtM,SAASC,eAAe,WAE7CN,KAAK4M,gBAAkBvM,SAASC,eAAe,iBAC/CN,KAAK6M,YAAcxM,SAASC,eAAe,gBAC3CN,KAAK8M,gBAAkBzM,SAASC,eAAe,iBAE/CN,KAAK+M,cAAgB1M,SAASC,eAAe,aAC7CN,KAAKgN,eAAiB3M,SAASC,eAAe,cAC9CN,KAAKiN,iBAAmB5M,SAASC,eAAe,gBAChDN,KAAKkN,WAAa7M,SAASC,eAAe,gBAC1CN,KAAKmN,kBAAoB9M,SAASC,eAAe,aAEjDN,KAAKoN,qBAAuB/M,SAASC,eAAe,qBACpDN,KAAKqN,iBAAmBhN,SAASC,eAAe,gBAChDN,KAAKsN,uBAAyBjN,SAASC,eAAe,uBACtDN,KAAKuN,wBAA0BlN,SAASC,eAAe,wBACvDN,KAAKwN,sBAAwBnN,SAASC,eAAe,qBACrDN,KAAKyN,iBAAmBpN,SAASC,eAAe,gBAChDN,KAAK0N,iBAAmBrN,SAASC,eAAe,kBAChDN,KAAK2N,yBAA2BtN,SAASC,eAAe,oBAGxDN,KAAK4N,iBAAmBvN,SAASC,eAAe,iBAChDN,KAAK6N,iBAAmBxN,SAASC,eAAe,iBAChDN,KAAK8N,kBAAoBzN,SAASC,eAAe,mBACjDN,KAAK+N,kBAAoB1N,SAASC,eAAe,mBACjDN,KAAKgO,kBAAoB3N,SAASC,eAAe,mBACjDN,KAAKiO,eAAiB5N,SAASC,eAAe,cAC9CN,KAAKkO,eAAiB7N,SAASC,eAAe,cAC9CN,KAAKmO,yBAA2B9N,SAASC,eAAe,+BACxDN,KAAKoO,0BAA4B/N,SAASC,eAAe,wBACzDN,KAAKqO,wBAA0BhO,SAASC,eAAe,uBAGvDN,KAAKsO,wBAA0BjO,SAASC,eAAe,6BACvDN,KAAKuO,oBAAsBlO,SAASC,eAAe,mBACnDN,KAAKwO,sBAAwBnO,SAASC,eAAe,qBACrDN,KAAKyO,oBAAsBpO,SAASC,eAAe,yBACnDN,KAAK0O,iBAAmBrO,SAASC,eAAe,sBACpD,CAEA,iBAAAJ,GACIF,KAAKkB,aAAaU,iBAAiB,QAAS,IAAM5B,KAAK2O,qBACvD3O,KAAK8K,qBAAqBlJ,iBAAiB,QAAS,IAAM5B,KAAK4O,6BAC/D5O,KAAK2L,gBAAgB/J,iBAAiB,QAAS,IAAM5B,KAAK6O,wBAC1D7O,KAAK+L,oBAAoBnK,iBAAiB,QAAS,IAAM5B,KAAK8O,6BAC9D9O,KAAKyM,eAAe7K,iBAAiB,QAAS,IAAM5B,KAAK+O,wBACzD/O,KAAK4M,gBAAgBhL,iBAAiB,QAAS,IAAM5B,KAAKgP,uBAC1DhP,KAAK8M,gBAAgBlL,iBAAiB,QAAS,IAAM5B,KAAKiP,gBAC1DjP,KAAKsK,cAAc1I,iBAAiB,QAAS,IAAM5B,KAAKkP,oBACxDlP,KAAKkN,WAAWtL,iBAAiB,QAAS,IAAM5B,KAAKmP,iBACrDnP,KAAK0N,iBAAiB9L,iBAAiB,QAAS,IAAM5B,KAAKoP,uBAC3DpP,KAAKiL,kBAAkBrJ,iBAAiB,QAAS,IAAM5B,KAAKqP,qBAC5DrP,KAAKkL,qBAAqBtJ,iBAAiB,QAAS,IAAM5B,KAAKsP,qBAC/DtP,KAAKmM,2BAA2BvK,iBAAiB,QAAS,IAAM5B,KAAKuP,oCACrEvP,KAAKmO,yBAAyBvM,iBAAiB,QAAS,IAAM5B,KAAKwP,iCAEhExP,KAAKwL,iBAAiBxL,KAAKwL,gBAAgB5J,iBAAiB,QAAS,IAAM5B,KAAKyP,6BAGnFzP,KAAK0O,iBAAiB9M,iBAAiB,QAAS,IAAM5B,KAAK0P,uBAG3D1P,KAAKyK,oBAAoB7I,iBAAiB,QAAS,IAAM5B,KAAK2P,mBAAmB,SACjF3P,KAAK0K,oBAAoB9I,iBAAiB,QAAS,IAAM5B,KAAK2P,mBAAmB,SAEjF3P,KAAKmN,kBAAkBvL,iBAAiB,QAAUlD,IAC9C,GAAIA,EAAEkR,QAAUlR,EAAEkR,OAAO9M,UAAUG,SAAS,mBAAoB,CAC5D,MAAM7D,EAASV,EAAEkR,OAAOC,QAAQrQ,GAChCQ,KAAK8P,iBAAiB1Q,EAC1B,CACA,GAAIV,EAAEkR,QAAUlR,EAAEkR,OAAO9M,UAAUG,SAAS,wBAAyB,CACjE,MAAM7D,EAASV,EAAEkR,OAAOC,QAAQrQ,GAChCQ,KAAK+P,iBAAiB3Q,EAC1B,CACA,GAAIV,EAAEkR,QAAUlR,EAAEkR,OAAO9M,UAAUG,SAAS,iBAAkB,CAC1D,MAAM7D,EAASV,EAAEkR,OAAOC,QAAQrQ,GAChCQ,KAAKgQ,eAAe5Q,EACxB,IAGJY,KAAK2N,yBAAyB/L,iBAAiB,QAAUlD,IACrD,GAAIA,EAAEkR,QAAUlR,EAAEkR,OAAO9M,UAAUG,SAAS,sBAAuB,CAC/D,MAAMgN,EAAYvR,EAAEkR,OAAOC,QAAQrQ,GACnCQ,KAAKkQ,oBAAoBD,EAC7B,CACA,GAAIvR,EAAEkR,QAAUlR,EAAEkR,OAAO9M,UAAUG,SAAS,oBAAqB,CAC7D,MAAMgN,EAAYvR,EAAEkR,OAAOC,QAAQrQ,GACnCQ,KAAKmQ,kBAAkBF,EAC3B,GAER,CAEA,kBAAAN,CAAmBhH,GACF,SAATA,GACA3I,KAAKyK,oBAAoB3H,UAAUC,IAAI,UACvC/C,KAAK0K,oBAAoB5H,UAAUE,OAAO,UAC1ChD,KAAK2K,mBAAmB/H,MAAMC,QAAU,QACxC7C,KAAK4K,mBAAmBhI,MAAMC,QAAU,SAExC7C,KAAKyK,oBAAoB3H,UAAUE,OAAO,UAC1ChD,KAAK0K,oBAAoB5H,UAAUC,IAAI,UACvC/C,KAAK2K,mBAAmB/H,MAAMC,QAAU,OACxC7C,KAAK4K,mBAAmBhI,MAAMC,QAAU,SAE5C7C,KAAKsP,mBACT,CAEA,iBAAAX,GACI,MAAMrS,EAAWoD,WAAWM,KAAKQ,cAAc1C,QAAU,EACnDvB,EAAYmD,WAAWM,KAAKyJ,eAAe3L,QAAU,EACrDvC,EAAcS,EAAWgE,KAAK0J,iBAAiB5L,MAAOkC,KAAK2J,mBAAmB7L,MAAOkC,KAAK4J,mBAAmB9L,OAC7GsS,EAAYpQ,KAAK6J,gBAAgB/L,MACjCuS,EAAW3Q,WAAWM,KAAK8J,cAAchM,QAAU,EACnDwS,EAAUtQ,KAAKgK,kBAAkBuG,QAEvC,GAAIjU,GAAY,GAAKf,GAAe,EAEhC,YADA0G,MAAM,gBAIV,MACMuO,EAAUhU,EADLH,EAAYC,EAAUC,GACAhB,IAE3BkV,SAAEA,GTxMT,SAAwBD,EAASjV,EAAa6U,EAAWC,EAAUK,GACtE,MAMMC,EANiB,CACnBC,KAAQ,IACRC,WAAc,EACdC,UAAa,KACbC,OAAU,KAEuBX,IAAc,EAE7CY,GAAiBX,GAAY,GAAK,IAAO,EAAKA,EAAW,IAAS,EAExE,IAAIY,EAAgB,EAUpB,OATIP,GAAenV,EAAc,IAG7B0V,EAAgB,EAAKvV,KAAKwV,MAAM3V,EAAc,GAAK,EACnD0V,EAAgBvV,KAAKuI,IAAI,GAAKgN,IAK3B,CACHR,SAHaD,EAAUG,EAAgBK,EAAgBC,EAIvDN,gBACAK,gBACAC,gBAER,CS6K6BE,CAAeX,EAASjV,EAAa6U,EAAWC,EAAUC,GAE/EtQ,KAAKkK,mBAAmBlI,YAAc,GAAG1F,EAAS8J,QAAQ,QAC1DpG,KAAKmK,oBAAoBnI,YAAc,GAAGzF,EAAU6J,QAAQ,OAC5DpG,KAAKoK,eAAepI,YAAc1G,EAAWC,GAC7CyE,KAAKqK,WAAWrI,YAAcyO,EAASrK,QAAQ,EACnD,CAEA,SAAA8C,GACI,MAAMnK,EAAQD,IACdkB,KAAKmN,kBAAkBiE,UAAY,GACnCpR,KAAKwK,gBAAgB4G,UAAY,gCACZ,IAAjBrS,EAAMsS,OAIVtS,EAAMuS,QAAQC,IACVvR,KAAKwR,eAAeD,GACpBvR,KAAKyR,kBAAkBF,KALvBvR,KAAKmN,kBAAkBiE,UAAY,uCAO3C,CAEA,cAAAI,CAAeD,GACX,MAAMG,EAAOrR,SAASsR,cAAc,OACpCD,EAAKE,UAAY,YACjBF,EAAK7B,QAAQrQ,GAAK+R,EAAK/R,GACvB,MACMqS,EAAMnW,KAAKwI,IAAKqN,EAAK9R,eADR,IACuC,IAAK,KAC/DiS,EAAKN,UAAY,6GAGmBG,EAAKO,wDACLP,EAAKQ,wHAGYR,EAAK/R,iFACH+R,EAAK/R,uMAIwBqS,8DAClDN,EAAK9R,eAAe2G,QAAQ,kFACNmL,EAAK/R,kDAG7DQ,KAAKmN,kBAAkB6E,YAAYN,EACvC,CAEA,iBAAAD,CAAkBF,GACd,MAAMU,EAAM5R,SAASsR,cAAc,UACnCM,EAAInU,MAAQyT,EAAK/R,GACjByS,EAAIjQ,YAAc,GAAGuP,EAAKO,SAASP,EAAKQ,SACxC/R,KAAKwK,gBAAgBwH,YAAYC,EACrC,CAEA,aAAA9C,GACI,MAAM2C,EAAO9R,KAAK+M,cAAcjP,MAAMqE,OAChC4P,EAAQ/R,KAAKgN,eAAelP,MAAMqE,OAClC+P,EAAUxS,WAAWM,KAAKiN,iBAAiBnP,QAAU,EACtDgU,GAASC,ILhQf,SAAiBI,GACpB,MAAMpT,EAAQD,IACRsT,EAAU,CACZ5S,GAAI,QAAQ6S,KAAKC,QACjBR,KAAMK,EAASL,KACfC,MAAOI,EAASJ,MAChBQ,eAAgB7S,WAAWyS,EAASI,iBAAmB,EACvD9S,eAAgBC,WAAWyS,EAASI,iBAAmB,EACvDC,WAAW,IAAIH,MAAOI,eAE1B1T,EAAM2T,KAAKN,GACXpT,EAAaD,EACjB,CKqPQ4T,CAAQ,CAAEb,OAAMC,QAAOQ,eAAgBL,IACvClS,KAAK+M,cAAcjP,MAAQ,GAC3BkC,KAAKgN,eAAelP,MAAQ,GAC5BkC,KAAKiN,iBAAiBnP,MAAQ,GAC9BkC,KAAKkJ,aALkBjH,MAAM,cAMjC,CAEA,gBAAA6N,CAAiB1Q,GACTwT,QAAQ,mBLxOb,SAAoBxT,GACvB,IAAIL,EAAQD,IACZC,EAAQA,EAAM8T,OAAO1W,GAAKA,EAAEqD,KAAOJ,GACnCJ,EAAaD,EACjB,CKoOuC+T,CAAW1T,GAASY,KAAKkJ,YAC5D,CAEA,gBAAA6G,CAAiB3Q,GACb,MAAM2T,EAAKC,OAAO,kBAClB,GAAW,OAAPD,EAAa,OACjB,MAAME,EAAMvT,WAAWqT,GACnBvX,MAAMyX,IAAQA,GAAO,EAAKhR,MAAM,WACpC9C,EAAkBC,EAAQ6T,GAC1BjT,KAAKkJ,YACLjH,MAAM,UAAUgR,EAAI7M,QAAQ,UAChC,CAEA,cAAA4J,CAAe5Q,GACX,MAAML,EAAQD,IACRyS,EAAOxS,EAAMmU,KAAK/W,GAAKA,EAAEqD,KAAOJ,GACtC,IAAKmS,EAAM,OACX,MAAM4B,EAAUH,OAAO,eAAgBzB,EAAKO,MACtCsB,EAAWJ,OAAO,eAAgBzB,EAAKQ,OACvCsB,EAAUL,OAAO,qBAAsBzB,EAAK9R,eAAe2G,QAAQ,IACzE,GAAgB,OAAZ+M,GAAiC,OAAbC,GAAiC,OAAZC,EAAkB,OAC/D,MAAMC,EAAU,CACZxB,MAAOqB,GAAW5B,EAAKO,MAAM3P,OAC7B4P,OAAQqB,GAAY7B,EAAKQ,OAAO5P,OAChC1C,eAAgBC,WAAW2T,IAAY9B,EAAK9R,gBAEhDN,EAAkBC,EAAQ,GAC1B,MAAMmU,EAAMxU,EAAMQ,UAAUpD,GAAKA,EAAEqD,KAAOJ,GAC1CL,EAAMwU,GAAO,IAAKxU,EAAMwU,MAASD,GACjChV,aAAaW,QAAQ,QAAST,KAAKU,UAAUH,IAC7CiB,KAAKkJ,YACLjH,MAAM,WACV,CAEA,mBAAAiO,CAAoBD,GACZ2C,QAAQ,qBJpSb,SAAuB3C,GAC1B,IAAIpQ,EAAWD,IACfC,EAAWA,EAASgT,OAAOW,GAAKA,EAAEhU,KAAOyQ,GACzC3R,aAAaW,QAAQU,EAAqBnB,KAAKU,UAAUW,GAC7D,CIiSY4T,CAAcxD,GACdjQ,KAAKmJ,cACLnJ,KAAKqJ,4BAEb,CAEA,iBAAA8G,CAAkBF,GACd,MACMyD,EADW9T,IACQsT,KAAKM,GAAKA,EAAEhU,KAAOyQ,GACvCyD,IAEL1T,KAAKoN,qBAAqBtP,MAAQ4V,EAAQC,SAC1C3T,KAAKqN,iBAAiBvP,MAAQ4V,EAAQE,KACtC5T,KAAKsN,uBAAuBxP,MAAQ4V,EAAQG,WAC5C7T,KAAKuN,wBAAwBzP,MAAQ4V,EAAQI,YAC7C9T,KAAKwN,sBAAsB1P,MAAQ4V,EAAQK,UAC3C/T,KAAKyN,iBAAiB3P,MAAQ4V,EAAQM,KAEtChU,KAAK0N,iBAAiB1L,YAAc,OACpChC,KAAKiJ,iBAAmBgH,EAGxBjQ,KAAKoN,qBAAqB6G,eAAe,CAAEC,SAAU,WACzD,CAEA,mBAAA9E,GACI,MAAM+E,EAAQ,CACVR,SAAU3T,KAAKoN,qBAAqBtP,MAAMqE,OAC1CyR,KAAM5T,KAAKqN,iBAAiBvP,MAC5B+V,WAAY7T,KAAKsN,uBAAuBxP,MAAMqE,OAC9C2R,YAAa9T,KAAKuN,wBAAwBzP,MAAMqE,OAChD4R,UAAW/T,KAAKwN,sBAAsB1P,MAAMqE,OAC5C6R,KAAMhU,KAAKyN,iBAAiB3P,MAAMqE,QAEjCgS,EAAMR,UAAaQ,EAAMP,MAE1B5T,KAAKiJ,mBJ9TV,SAAuBgH,EAAWmE,GACrC,MAAMvU,EAAWD,IACXyU,EAAQxU,EAASN,UAAUiU,GAAKA,EAAEhU,KAAOyQ,IACjC,IAAVoE,IACAxU,EAASwU,GAAS,IAAKxU,EAASwU,MAAWD,GAC3C9V,aAAaW,QAAQU,EAAqBnB,KAAKU,UAAUW,IAEjE,CIwTYyU,CAActU,KAAKiJ,iBAAkBkL,GACrClS,MAAM,YACNjC,KAAKiJ,iBAAmB,KACxBjJ,KAAK0N,iBAAiB1L,YAAc,UJ7VzC,SAAqBuS,GACxB,MAAM1U,EAAWD,IACX4U,EAAa,CACfhV,GAAI,WAAW6S,KAAKC,QACpB3P,KAAM,aACH4R,EACHE,SAAS,IAAIpC,MAAOI,eAExB5S,EAAS6S,KAAK8B,GACdlW,aAAaW,QAAQU,EAAqBnB,KAAKU,UAAUW,GAC7D,CIqVY6U,CAAYP,GACZlS,MAAM,aAGV,CAAC,WAAY,OAAQ,aAAc,cAAe,YAAa,QAC1DqP,QAAQqD,GAAK3U,KAAK,UAAU2U,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,WAAWhX,MAAQ,IACxFkC,KAAKmJ,cACLnJ,KAAKqJ,6BAfiCpH,MAAM,gBAgBhD,CAEA,WAAAkH,GACInJ,KAAK6M,YAAYuE,UAAY,GAC7B,MAEM2D,EAAW,IAFH3W,OACAwB,KACwBoV,KAAK,CAACvX,EAAGwX,IAAM,IAAI5C,KAAK4C,EAAErB,MAAQ,IAAIvB,KAAK5U,EAAEmW,OAC3D,IAApBmB,EAAS1D,QAIb0D,EAASzD,QAAQ4D,GAAMlV,KAAKmV,qBAAqBD,IACjDlV,KAAKqJ,6BAJDrJ,KAAK6M,YAAYuE,UAAY,yCAKrC,CAEA,yBAAA/H,GACI,IAAKrJ,KAAK2N,yBAA0B,OACpC,MAAM9N,EAAWD,IAAcoV,KAAK,CAACvX,EAAGwX,IAAM,IAAI5C,KAAK4C,EAAErB,MAAQ,IAAIvB,KAAK5U,EAAEmW,OAC5E5T,KAAK2N,yBAAyByD,UAAY,GAClB,IAApBvR,EAASwR,OAIbxR,EAASyR,QAAQkC,IACb,MAAM3K,EAAUxI,SAASsR,cAAc,WACvC9I,EAAQ+I,UAAY,eAEpB,MAAMwD,EAAU/U,SAASsR,cAAc,WACvCyD,EAAQxD,UAAY,kBACpBwD,EAAQhE,UAAY,WAAWoC,EAAEG,8BAA8B,IAAItB,KAAKmB,EAAEI,MAAMyB,mBAAmB,qBAEnG,MAAMC,EAAUjV,SAASsR,cAAc,OACvC2D,EAAQ1D,UAAY,kBACpB0D,EAAQlE,UAAY,+CACYoC,EAAEK,YAAc,wDAChBL,EAAEM,aAAe,wDACjBN,EAAEO,WAAa,wDACfP,EAAEQ,MAAQ,qJAEoCR,EAAEhU,6GACDgU,EAAEhU,wDAIjFqJ,EAAQmJ,YAAYoD,GACpBvM,EAAQmJ,YAAYsD,GACpBtV,KAAK2N,yBAAyBqE,YAAYnJ,KA1B1C7I,KAAK2N,yBAAyByD,UAAY,qCA4BlD,CAEA,oBAAA+D,CAAqBhB,GACjB,MAAMoB,EAAQvV,KAAK6M,YAAY3E,cAAc,kBACzCqN,GAAOA,EAAMvS,SACjB,IAAIwS,EAAO,GACX,GAAmB,YAAfrB,EAAMxR,KACN6S,EAAO,6CACuB,IAAInD,KAAK8B,EAAMP,MAAMyB,mBAAmB,8BAA8BlB,EAAMR,yKAEpBQ,EAAMN,YAAc,kHACtBM,EAAML,YAAc,MAAQ,kHAC5BK,EAAMJ,UAAY,MAAQ,kHAC1BI,EAAMH,KAAO,MAAQ,8CAEtG,CACH,MAAMjV,EAAQD,IACRyS,EAAO4C,EAAM/U,OAASL,EAAMmU,KAAK/W,GAAKA,EAAEqD,KAAO2U,EAAM/U,QAAU,KAC/DqW,EAAWlE,EAAOA,EAAKO,KAAO,GAEpC0D,EAAO,6CACuB,IAAInD,KAAK8B,EAAMP,MAAMyB,mBAAmB,wBAAwBlB,EAAMrC,MAAQ,oKAExBqC,EAAM7X,wHACN6X,EAAM5X,wHACNjB,EAAW6Y,EAAMuB,2GACxBvB,EAAMwB,IAAIvP,QAAQ,qCACrFqP,EAAW,6EAA6EA,cAAuB,4BAE7H,CACA,MAAMG,EAAOvV,SAASsR,cAAc,OACpCiE,EAAKhE,UAAY,eACjBgE,EAAKxE,UAAYoE,EACjBxV,KAAK6M,YAAYgJ,QAAQD,EAC7B,CAEA,iBAAAvG,GACIrP,KAAKoJ,qBACL,MAAM0M,EAAMzV,SAASsR,cAAc,OACnCmE,EAAIlE,UAAY,0BAChBkE,EAAI1E,UAAY,kTAMhBpR,KAAKgL,sBAAsBgH,YAAY8D,EAC3C,CAEA,iBAAAxG,GACItP,KAAKoJ,mBAAqB,EAC1B,MAAM2M,EAAO/V,KAAKgL,sBAAsBgL,iBAAiB,iBACzDD,EAAKzE,QAAQ,CAACnV,EAAG8Z,KAAYA,EAAI,GAAG9Z,EAAE6G,WACtC+S,EAAK,IAAIC,iBAAiB,SAAS1E,QAAQ4E,GAAOA,EAAIpY,MAAQ,IAC9DkC,KAAK+K,oBAAoBqG,UAAY,GACrCpR,KAAKmL,6BAA6BnJ,YAAc,OAChDhC,KAAKoL,yBAAyBpJ,YAAc,UAChD,CAEA,yBAAA4M,GACI,MAAMtS,EAAWoD,WAAWM,KAAK6K,sBAAsB/M,QAAU,EACjE,GAAIxB,GAAY,EAEZ,YADA0D,KAAK+K,oBAAoBqG,UAAY,yCAIzC,MAAM+E,EAAYzW,WAAWM,KAAK+J,eAAejM,QAAU,EAC3D,IAAIsY,EAAY,EAAGC,EAAW,EAI9B,GAHArW,KAAK+K,oBAAoBqG,UAAY,GAGjCpR,KAAKyK,oBAAoB3H,UAAUG,SAAS,UAAW,CAEvD,MAAM8S,EAAO,GAOb,GANA/V,KAAKgL,sBAAsBgL,iBAAiB,iBAAiB1E,QAAQgF,IACjE,MAAMC,EAAMna,SAASka,EAAIpO,cAAc,qBAAqBpK,MAAO,IAC7D0Y,EAAMpa,SAASka,EAAIpO,cAAc,mBAAmBpK,MAAO,KAC5DtC,MAAM+a,KAAS/a,MAAMgb,IAAQD,EAAM,GAAKC,EAAM,GAAGT,EAAKrD,KAAK,CAAEgD,KAAMa,EAAKE,MAAOD,MAGpE,IAAhBT,EAAK1E,OAEL,YADArR,KAAK+K,oBAAoBqG,UAAY,yCAIzC2E,EAAKzE,QAAQ,CAACoF,EAAInD,KACd,MAAM1N,EAAQ6Q,EAAGhB,KAAO,IAAOpZ,EAAW,KACpC4H,EAAMxI,KAAKC,MAAMkK,GAAO0Q,EAAM7a,KAAKmB,MAAqB,IAAdgJ,EAAO3B,IACvD,IAAI2N,EAAM,GTxfnB,IAAsC8E,EAAYC,ESyfrCT,EAAY,IAAGtE,EAAM,MTzfI8E,ESyf8B9Q,ETzflB+Q,ESyfwBT,ETxfzES,GAAiB,EAAU,EACvBA,EAAgBD,EAAc,KSufkDvQ,QAAQ,eACpFgQ,GAAc9Z,EAAW,IAAQoa,EAAGD,MACpCJ,GAAYK,EAAGhB,KAAOgB,EAAGD,MACzBzW,KAAK+K,oBAAoBqG,WAAa,wGAEAyF,OAAOtD,EAAM,GAAGxX,SAAS,EAAG,4HAE1BwX,EAAM,UAAUmD,EAAGD,sEACrBvS,KAAO2S,OAAON,GAAKxa,SAAS,EAAG,UAAU8V,qEAIvF,KAAO,CAEH,MAAMiF,EAAU1a,SAAS4D,KAAKqL,sBAAsBvN,MAAO,KAAO,EAC5DiZ,EAAU3a,SAAS4D,KAAKsL,sBAAsBxN,MAAO,KAAO,EAC5DkZ,EAAO5a,SAAS4D,KAAKuL,iBAAiBzN,MAAO,KAAO,EAE1D,GAAIkZ,GAAQ,GAAMF,GAAW,GAAKC,GAAW,EAEzC,YADA/W,KAAK+K,oBAAoBqG,UAAY,4CAIzC,MAEM6F,GAFmC,GAAVH,EAAgBC,GACC,IACXza,EAE/B4a,EAASxb,KAAKC,MAAMsb,EAAa,IACjCE,EAASzb,KAAKmB,MAAMoa,EAAa,IAEvCb,EAAa9Z,EAAW,IAAQ0a,EAChCX,EAAWY,EAAaD,EAExBhX,KAAK+K,oBAAoBqG,UAAY,gGAECyF,OAAOG,GAAMjb,SAAS,EAAG,wHAEnBib,8DACNE,KAAUL,OAAOM,GAAQpb,SAAS,EAAG,8DAG/E,CAEAiE,KAAKmL,6BAA6BnJ,YAAc,GAAGoU,EAAUhQ,QAAQ,QACrEpG,KAAKoL,yBAAyBpJ,YAAc1G,EAAW+a,EAAW,KACtE,CAEA,oBAAAxH,GACI,MAAMhJ,EAAOnG,WAAWM,KAAKyL,aAAa3N,QAAU,EAC9CsZ,EAAQ1X,WAAWM,KAAK0L,cAAc5N,QAAU,EACtD,GAAI+H,GAAQ,EAAG,OACf,MAAM5H,EPnhBc,EAAC4H,EAAMwR,EAAUnZ,EAAO,IACrC2H,GAAQ,EAAIwR,EAAWrZ,EAAkBC,MACvC,EAAIC,EAAOF,EAAkBE,MOihB1BoZ,CAAazR,EAAMuR,GACzBlT,EAAMxI,KAAKC,MAAMsC,GAAMsY,EAAM7a,KAAKmB,MAAoB,IAAboB,EAAMiG,IACrDlE,KAAK4L,iBAAiB5J,YAAc,GAAGkC,KAAO2S,OAAON,GAAKxa,SAAS,EAAG,SAC1E,CAEA,yBAAA+S,GACI,MAAMyI,EAAQ7X,WAAWM,KAAK6L,oBAAoB/N,QAAU,EACtD0Z,EAAU9X,WAAWM,KAAK8L,sBAAsBhO,QAAU,EAChE,GAAIyZ,GAAS,EAAG,OAChB,MAAM1R,EAhjBd,SAAgC0R,EAAOC,GACnC,OAAID,GAAS,EAAU,EACL,GAAKA,EACS,IAAVC,CAE1B,CA2iBqBC,CAAuBF,EAAOC,GACrCtT,EAAMxI,KAAKC,MAAMkK,GAAO0Q,EAAM7a,KAAKmB,MAAqB,IAAdgJ,EAAO3B,IACvDlE,KAAKgM,sBAAsBhK,YAAc,GAAGkC,KAAO2S,OAAON,GAAKxa,SAAS,EAAG,SAC/E,CAEA,gCAAAwT,GACI,MAAMmI,EAAWhY,WAAWM,KAAKiM,cAAcnO,QAAU,EACnD0Z,EAAU9X,WAAWM,KAAKkM,6BAA6BpO,QAAU,EACvE,GAAI4Z,GAAY,EAA6B,YAAxBzV,MAAM,iBAC3B,MAAMsV,EAljBd,SAAqC1R,EAAM2R,GACvC,OAAI3R,GAAQ,EAAU,EACR,IAAMA,EAAkB,IAAV2R,EAEhC,CA8iBsBG,CAA4BD,EAAUF,GACpDxX,KAAKoM,4BAA4BpK,YAAc,GAAGuV,EAAMnR,QAAQ,SACpE,CAEA,oBAAA2I,GAEI,MAAM6I,EAAIlY,WAAWM,KAAKqM,kBAAkBvO,QAAU,EAChD+Z,EAASnY,WAAWM,KAAKsM,uBAAuBxO,QAAU,EAC1Dga,EAAUpY,WAAWM,KAAKuM,uBAAuBzO,QAAU,EAC3D6X,EAAMjW,WAAWM,KAAKwM,aAAa1O,QAAU,EAEnD,GAAI8Z,GAAK,GAAKjC,GAAO,EAEjB,YADA1T,MAAM,6BAKV,MAAM8V,EAAqB,GAAKpC,EAO1BqC,EAAiBhY,KAAKsO,wBAAwB2J,KAC9CC,EAAKxY,WAAWM,KAAKuO,oBAAoBzQ,QAAU,EACnDqa,EAAKzY,WAAWM,KAAKwO,sBAAsB1Q,QAAU,EAErDsa,EAAc,GACpBpY,KAAKyO,oBAAoBuH,iBAAiB,sBAAsB1E,QAAQ+G,IACpE,MAAMC,EAAO5Y,WAAW2Y,EAAMnQ,cAAc,qBAAqBpK,OAC3D4X,EAAOhW,WAAW2Y,EAAMnQ,cAAc,qBAAqBpK,QAC5DtC,MAAM8c,KAAU9c,MAAMka,IAAS4C,EAAO,GAAK5C,EAAO,GACnD0C,EAAY1F,KAAK,CAAEpW,SAAUgc,EAAM5C,KAAMA,MAIjD,IAAI6C,EAAqB,EACrB5P,EAAO,QAEPqP,GAA0B,IAAPE,GAAqB,IAAPC,EAMjCI,EAAqBX,EAAKC,EA1BnB,IA0BmCC,EAzBnC,KAqBPnP,EAAO,OACP4P,EAAqBX,EAAKC,GAvBnB,IAuBkCK,GAAQJ,GAtB1C,IAsB0DK,IAMrE,IAAIK,EAAeD,EAAqBR,EAGxC,GAAIC,GAAkBI,EAAY/G,OAAS,EAAG,CAE1CmH,GAD+BJ,EAAYK,OAAO,CAACC,EAAOC,IAAYD,EAAQC,EAAQjD,KAAM,GAE/E,SAAT/M,IAAiBA,EAAO,WAChC,CAEA,MAAMiQ,EAAaJ,EAAe,GAElCxY,KAAK0M,gBAAgB1K,YAAc1G,EAAWsd,GAAc,IAAIjQ,IAChE3I,KAAK2M,cAAc3K,YAAc,GAAGuW,EAAmBnS,QAAQ,QACnE,CAEA,6BAAAoJ,GACI,MAAMqJ,EAAcnZ,WAAWM,KAAK4N,iBAAiB9P,QAAU,EACzDgb,EAAcpZ,WAAWM,KAAK6N,iBAAiB/P,QAAU,EACzDib,EAAc/c,EAAWgE,KAAK8N,kBAAkBhQ,MAAOkC,KAAK+N,kBAAkBjQ,MAAOkC,KAAKgO,kBAAkBlQ,OAE5Gkb,EAAYtZ,WAAWM,KAAKiO,eAAenQ,QAAU,EACrDmb,EAAYvZ,WAAWM,KAAKkO,eAAepQ,QAAU,EAE3D,GAAI+a,GAAe,GAAKE,GAAe,GAAKC,EAAY,EAEpD,YADA/W,MAAM,sBAIV,MACMiX,EAAa1c,EADDH,EAAYwc,EAAaC,GACAC,GAE3C,GAAIvd,MAAM0d,KAAgBC,SAASD,GAE/B,YADAjX,MAAM,yBAIV,MACMmX,EADU/c,EAAY2c,EAAWC,GACCC,EAExClZ,KAAKqO,wBAAwBrM,YAAckX,EAAW9S,QAAQ,GAC9DpG,KAAKoO,0BAA0BpM,YAAc1G,EAAW8d,EAC5D,CAEA,mBAAA1J,GACI,MAAM2J,EAAerZ,KAAKyO,oBAAoB6K,SAASjI,OACjDkI,EAAalZ,SAASsR,cAAc,OAC1C4H,EAAW3H,UAAY,sCACvB2H,EAAWnI,UAAY,gFAEQiI,6BAAwCA,EAAe,qEAC1CA,8JAGbA,6FACaA,yLAI5CrZ,KAAKyO,oBAAoBuD,YAAYuH,GAErCA,EAAWrR,cAAc,2BAA2BtG,iBAAiB,QAAS,KAC1E2X,EAAWvW,UAEnB,CAEA,mBAAAgM,GACI,MAAMwK,EAAYxZ,KAAKwJ,eAAe1L,MAAMqE,QAAU,QAChD7F,EAAWoD,WAAWM,KAAKQ,cAAc1C,OACzCqW,EAAQ,CACVP,MAAM,IAAIvB,MAAOI,cACjBX,KAAM0H,EACNld,SAAUA,EACVC,UAAWyD,KAAKyJ,eAAe3L,MAC/B4X,KAAM1Z,EAAWgE,KAAK0J,iBAAiB5L,MAAOkC,KAAK2J,mBAAmB7L,MAAOkC,KAAK4J,mBAAmB9L,OACrG6X,IAAKjW,WAAWM,KAAKqK,WAAWrI,cAAgB,EAChDW,KAAM,WACNvD,OAAQY,KAAKwK,gBAAgB1M,OAAS,MAErCqW,EAAM7X,UAAa6X,EAAMuB,ON5qB/B,SAA+BvB,GAClC,MAAM9V,EAAUD,IAChBC,EAAQqU,KAAKyB,GACb,IACI7V,aAAaW,QAAQd,EAAsBK,KAAKU,UAAUb,GAC9D,CAAE,MAAOK,GACLC,QAAQC,MAAM,gDAAiDF,EACnE,CACJ,CMsqBQ+a,CAAsBtF,GAElBA,EAAM/U,QAAU+U,EAAM7X,SAAW,IACjC6C,EAAkBgV,EAAM/U,OAAQ+U,EAAM7X,UACtC0D,KAAKkJ,aAGTlJ,KAAKmJ,cACLlH,MAAM,UAAUuX,MAVsBvX,MAAM,gBAWhD,CAEA,gBAAAiN,GACI,MAAM5S,EAAW0D,KAAKkK,mBAAmBlI,YACnCzF,EAAYyD,KAAKmK,oBAAoBnI,YACrC0T,EAAO1V,KAAKoK,eAAepI,YAC3B2T,EAAM3V,KAAKqK,WAAWrI,YACtB8T,EAAMzV,SAASsR,cAAc,OACnCmE,EAAIlT,MAAM8W,MAAQ,QAClB5D,EAAIlT,MAAM+W,OAAS,QACnB7D,EAAIlT,MAAMgX,SAAW,WACrB9D,EAAIlT,MAAMiX,KAAO,UACjB/D,EAAIlT,MAAMkX,WAAa,OACvBhE,EAAIlT,MAAMC,QAAU,OACpBiT,EAAIlT,MAAMmX,oBAAsB,UAChCjE,EAAIlT,MAAM3E,IAAM,OAChB6X,EAAIlT,MAAMoX,QAAU,OACpBlE,EAAIlT,MAAMqX,WAAa,6BACvBnE,EAAIlT,MAAMsX,MAAQ,oBAClBpE,EAAI1E,UAAY,8MACmL9U,0NACCC,yNACDmZ,0NACCC,wBAEpMtV,SAAS8Z,KAAKnI,YAAY8D,GCjuB3B,SAA4BsE,EAASC,EAAW,iBAAkBC,EAAqB,CAAA,GACrFF,EAMLG,YAAYH,EAAS,CACjBI,gBAAiB,KACjBC,MAAO,KACJH,IACJ9X,KAAKkY,IAEJ,MAAMC,EAAOta,SAASsR,cAAc,KACpCgJ,EAAKC,SAAWP,EAChBM,EAAKE,KAAOH,EAAOI,UAAU,aAG7Bza,SAAS8Z,KAAKnI,YAAY2I,GAC1BA,EAAKI,QACL1a,SAAS8Z,KAAKa,YAAYL,KAC3BlY,MAAMC,IACL/D,QAAQC,MAAM,uBAAwB8D,KApBtC/D,QAAQC,MAAM,oCAsBtB,CD0sBQqc,CAAmBnF,EAAK,kBAAkBzD,KAAKC,YAAa,CAAEoH,MAAO,IAAKC,OAAQ,MAClFuB,WAAW,IAAM7a,SAAS8Z,KAAKa,YAAYlF,GAAM,IACrD,CAEA,eAAAqF,CAAgBC,GACZ,MAAMC,EAAOD,EAAMxL,OAAO0L,MAAM,GAChC,IAAKD,EAAM,OACX,MAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAU/c,IACb,IACI,MAAMgd,ER1uBf,SAAkBC,GACrB,MAGMC,GAHS,IAAIC,WACGC,gBAAgBH,EAAY,YAE5BI,qBAAqB,SAC3C,GAAIH,EAAOvK,OAAS,EAEhB,OADA1S,QAAQC,MAAM,mDACP,KAGX,IAAIod,EAAgB,EAChBC,EAAqB,EACrBC,EAAqB,EACzB,MAAMC,EAAS,GAEf,IAAK,IAAIlG,EAAI,EAAGA,EAAI2F,EAAOvK,OAAQ4E,IAAK,CACpC,MAAM7Y,EAAMsC,WAAWkc,EAAO3F,GAAGmG,aAAa,QACxC9e,EAAMoC,WAAWkc,EAAO3F,GAAGmG,aAAa,QACxCC,EAAUT,EAAO3F,GAAG8F,qBAAqB,OAAO,GAChDO,EAAMD,EAAU3c,WAAW2c,EAAQra,aAAe,EAGxD,GAFAma,EAAOzJ,KAAK,CAAEtV,MAAKE,MAAKgf,QAEpBrG,EAAI,EAAG,CACP,MAAMsG,EAAYJ,EAAOlG,EAAI,GAC7B+F,GAAiBjf,EAAkBwf,EAAWJ,EAAOlG,IACrD,MAAMuG,EAAUF,EAAMC,EAAUD,IAC5BE,EAAU,EACVP,GAAsBO,EAEtBN,GAAsBxgB,KAAK+gB,IAAID,EAEvC,CACJ,CAEA,MAAO,CACHlgB,SAAU0f,EACVzf,UAAW0f,EACXS,QAASR,EACTC,OAAQA,EAEhB,CQksB4BQ,CAASje,EAAEkR,OAAOgN,QAC1BlB,GACA1b,KAAKQ,cAAc1C,MAAQ4d,EAAIpf,SAAS8J,QAAQ,GAChDpG,KAAKyJ,eAAe3L,MAAQ4d,EAAInf,UAAU6J,QAAQ,GAClDnE,MAAM,YAAYyZ,EAAIpf,SAAS8J,QAAQ,UAAUsV,EAAInf,UAAU6J,QAAQ,SAEvEnE,MAAM,eAEd,CAAE,MAAOS,GACLT,MAAM,kBACV,GAEJsZ,EAAOsB,WAAWxB,EACtB,CAEA,YAAApM,GACQ2D,QAAQ,qBN9tBb,WACH,IACItU,aAAawe,WAAW3e,EAC5B,CAAE,MAAOO,GACLC,QAAQC,MAAM,oDAAqDF,EACvE,CACJ,CMytBYqe,GJ5sBRze,aAAawe,WAAWnd,GI8sBhBK,KAAKmJ,cAEb,CAEA,yBAAAsG,GACI,MAAMuN,EAAchd,KAAK+K,oBACzB,GAAoC,IAAhCiS,EAAY1D,SAASjI,OAErB,YADApP,MAAM,aAIV,IAAIC,EAAa,gBACjB8a,EAAYhH,iBAAiB,gBAAgB1E,QAAQsE,IACjD,MAAMqH,EAAQrH,EAAK1N,cAAc,gBAAgBlG,YAAYG,OACvDrE,EAAQ8X,EAAK1N,cAAc,iBAAiBlG,YAAYG,OAC9DD,GAAc,KAAK+a,MAAUnf,QAGjC,MAAMsY,EAAYpW,KAAKmL,6BAA6BnJ,YAC9Ckb,EAAYld,KAAKoL,yBAAyBpJ,YAChDE,GAAc,UAAUkU,WAAmB8G,IAE3C7a,UAAUC,UAAUC,UAAUL,GAAYM,KAAK,KAC3CP,MAAM,gBACPQ,MAAMC,IACL/D,QAAQC,MAAM,WAAY8D,GAC1BT,MAAM,mBAEd,EAGJ5B,SAASuB,iBAAiB,mBAAoB,KAC1C,IAAIoH"}