{"version":3,"file":"bundle.js","sources":["js/core/calculator.js","js/core/gpx-parser.js","js/modules/gap-ngp.js","js/ui/history-manager.js","js/ui/shoe-manager.js","js/ui/debrief-manager.js","js/ui/training-pace-calculator.js","js/core/training-planner.js","js/ui/training-plan-ui.js","js/app.js"],"sourcesContent":["/**\n * Calculates the percentage of actual pace relative to a threshold pace.\n * @param {number} actualPace - The actual pace in minutes/km.\n * @param {number} thresholdPace - The threshold pace in minutes/km.\n * @returns {number} The percentage (e.g., 105 for 105%).\n */\nexport function calculateThresholdPercentage(actualPace, thresholdPace) {\n    if (thresholdPace <= 0) return 0; // Avoid division by zero\n    return (thresholdPace / actualPace) * 100;\n}\n\n/**\n * Modifies EPH based on non-linear fatigue for ultra-distance races.\n * @param {number} baseEph - The base EPH.\n * @param {number} timeInHours - The estimated time in hours.\n * @param {string} routeType - The route type.\n * @param {number} altitude - The altitude.\n * @param {boolean} isUltraRace - True if it's an ultra-distance race.\n * @returns {object} An object containing the final EPH and fatigue factor.\n */\nexport function getAdvancedEPH(baseEph, timeInHours, routeType, altitude, isUltraRace) {\n    const terrainFactors = {\n        'road': 0.92,\n        'fire_trail': 1.0,\n        'technical': 1.35,\n        'alpine': 1.8\n    };\n    const terrainFactor = terrainFactors[routeType] || 1.0;\n\n    const gravityFactor = (altitude || 0) > 2000 ? 1 + (altitude / 10000) : 1;\n\n    let fatigueFactor = 1.0;\n    if (isUltraRace && timeInHours > 2) { // Apply non-linear fatigue for races longer than 2 hours\n        // Simplified non-linear fatigue model: logarithmic decay\n        // The longer the time, the more the fatigue factor reduces EPH\n        fatigueFactor = 1 - (Math.log10(timeInHours + 1) / 2); \n        fatigueFactor = Math.max(0.5, fatigueFactor); // Ensure fatigue factor doesn't drop below 0.5\n    }\n\n    const finalEph = baseEph * terrainFactor * gravityFactor * fatigueFactor;\n\n    return {\n        finalEph,\n        terrainFactor,\n        gravityFactor,\n        fatigueFactor\n    };\n}\n\n/**\n * 將小時轉換為 HH:MM:SS 格式\n * @param {number} timeInHours - 小時數\n * @returns {string} 格式化後的時間字串\n */\nexport function formatTime(timeInHours) {\n    if (isNaN(timeInHours) || timeInHours < 0) {\n        return '00:00:00';\n    }\n    const hours = Math.floor(timeInHours);\n    const minutes = Math.floor((timeInHours - hours) * 60);\n    const seconds = Math.floor((((timeInHours - hours) * 60) - minutes) * 60);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n}\n\n/**\n * 將時、分、秒轉換為小時\n * @param {number} h - 小時\n * @param {number} m - 分鐘\n * @param {number} s - 秒\n * @returns {number} 總小時數\n */\nexport function hmsToHours(h, m, s) {\n    return (parseInt(h, 10) || 0) + (parseInt(m, 10) || 0) / 60 + (parseInt(s, 10) || 0) / 3600;\n}\n\n/**\n * 計算 EP (Equivalent Pace)\n * @param {number} distance - 距離 (km)\n * @param {number} elevation - 爬升 (m)\n * @returns {number} EP 值\n */\nexport function calculateEP(distance, elevation) {\n    return (distance || 0) + ((elevation || 0) / 100);\n}\n\n/**\n * 計算 EPH (Equivalent Pace per Hour)\n * @param {number} ep - EP 值\n * @param {number} timeInHours - 時間 (小時)\n * @returns {number} EPH 值\n */\nexport function calculateEPH(ep, timeInHours) {\n    if (timeInHours <= 0) return 0;\n    return ep / timeInHours;\n}\n\n/**\n * Converts pace in hours per kilometer to a formatted string 'MM:SS/km'.\n * @param {number} paceInHoursPerKm - Pace in hours per kilometer.\n * @returns {string} Formatted pace string.\n */\nexport function paceToMinutesPerKm(paceInHoursPerKm) {\n    if (isNaN(paceInHoursPerKm) || paceInHoursPerKm <= 0) {\n        return '0:00/km';\n    }\n    const totalSeconds = paceInHoursPerKm * 3600;\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = Math.round(totalSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}/km`;\n}\n\n/**\n * Converts pace from minutes and seconds per km to hours per km.\n * @param {number} minutes - The minutes part of the pace.\n * @param {number} seconds - The seconds part of the pace.\n * @returns {number} Pace in hours per kilometer.\n */\nexport function minutesPerKmToHoursPerKm(minutes, seconds) {\n    const totalSeconds = (minutes * 60) + seconds;\n    return totalSeconds / 3600;\n}\n\n/**\n * Calculates equivalent pace based on distance and time.\n * For simplicity, this is flat ground pace.\n * @param {number} distance - Distance in km.\n * @param {number} timeInHours - Time in hours.\n * @returns {number} Pace in hours per kilometer.\n */\nexport function calculateEquivalentPace(distance, timeInHours) {\n    if (distance <= 0 || timeInHours <= 0) {\n        return 0;\n    }\n    return timeInHours / distance;\n}\n\n/**\n * Recommends training paces based on a base equivalent pace and specific training distances.\n * Uses a logarithmic adjustment for interval pace and a linear adjustment for LSD pace.\n * @param {number} basePaceInHoursPerKm - The runner's current equivalent pace from a race.\n * @param {number} intervalDistanceMeters - The distance for the interval workout in meters.\n * @param {number} lsdDistanceKm - The distance for the LSD run in kilometers.\n * @returns {object} An object containing paces for different training types.\n */\nexport function getTrainingPaces(basePaceInHoursPerKm, intervalDistanceMeters = 400, lsdDistanceKm = 20) {\n    if (basePaceInHoursPerKm <= 0) {\n        return {\n            interval: 0,\n            lsd: 0,\n            recovery: 0\n        };\n    }\n\n    // --- Interval Pace Calculation ---\n    const i_ref_dist = 800; // meters\n    const i_ref_factor = 0.95; // 95% of base pace time\n    const i_k = 0.05; // Factor adjustment per doubling of distance\n    const i_dist_adj = Math.log2(intervalDistanceMeters / i_ref_dist);\n    let intervalPaceFactor = i_ref_factor + (i_dist_adj * i_k);\n    intervalPaceFactor = Math.max(0.85, Math.min(1.05, intervalPaceFactor));\n\n    // --- LSD Pace Calculation ---\n    const lsd_ref_dist = 20; // km\n    const lsd_ref_factor = 1.25; // 125% of base pace time\n    const lsd_k = 0.025; // Factor adjustment per 10km increase\n    const lsd_dist_adj = (lsdDistanceKm - lsd_ref_dist) / 10;\n    let lsdPaceFactor = lsd_ref_factor + (lsd_dist_adj * lsd_k);\n    lsdPaceFactor = Math.max(1.20, Math.min(1.35, lsdPaceFactor)); // Clamp to reasonable bounds\n\n    // --- Recovery Pace (fixed) ---\n    const recoveryPaceFactor = 1.35;\n\n    return {\n        interval: basePaceInHoursPerKm * intervalPaceFactor,\n        lsd: basePaceInHoursPerKm * lsdPaceFactor,\n        recovery: basePaceInHoursPerKm * recoveryPaceFactor\n    };\n}\n\n","\n// GPX 文件解析器\n\n/**\n * 解析 GPX 文件內容\n * @param {string} gpxContent - GPX 文件的 XML 文本內容\n * @returns {object|null} 包含距離、爬升、下降等資訊的物件，或在失敗時返回 null\n */\nexport function parseGPX(gpxContent) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(gpxContent, \"text/xml\");\n\n    const trkpts = xmlDoc.getElementsByTagName('trkpt');\n    if (trkpts.length < 2) {\n        console.error(\"GPX file must contain at least two trackpoints.\");\n        return null;\n    }\n\n    let totalDistance = 0;\n    let totalElevationGain = 0;\n    let totalElevationLoss = 0;\n    const points = [];\n\n    for (let i = 0; i < trkpts.length; i++) {\n        const lat = parseFloat(trkpts[i].getAttribute('lat'));\n        const lon = parseFloat(trkpts[i].getAttribute('lon'));\n        const eleNode = trkpts[i].getElementsByTagName('ele')[0];\n        const ele = eleNode ? parseFloat(eleNode.textContent) : 0;\n        points.push({ lat, lon, ele });\n\n        if (i > 0) {\n            const prevPoint = points[i - 1];\n            totalDistance += haversineDistance(prevPoint, points[i]);\n            const eleDiff = ele - prevPoint.ele;\n            if (eleDiff > 0) {\n                totalElevationGain += eleDiff;\n            } else {\n                totalElevationLoss += Math.abs(eleDiff);\n            }\n        }\n    }\n\n    return {\n        distance: totalDistance,\n        elevation: totalElevationGain,\n        descent: totalElevationLoss,\n        points: points\n    };\n}\n\n/**\n * 使用 Haversine 公式計算兩點之間的距離\n * @param {{lat: number, lon: number}} p1 - 點 1\n * @param {{lat: number, lon: number}} p2 - 點 2\n * @returns {number} 距離 (km)\n */\nfunction haversineDistance(p1, p2) {\n    const R = 6371; // 地球半徑 (km)\n    const dLat = toRad(p2.lat - p1.lat);\n    const dLon = toRad(p2.lon - p1.lon);\n    const lat1 = toRad(p1.lat);\n    const lat2 = toRad(p2.lat);\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n              Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n}\n\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n","// js/modules/gap-ngp.js\n/**\n * GAP/NGP 對照模組 (C3) - 骨骼肌體版\n * \n * 設計哲學：\n * 1. 數據即代碼：用結構化數據驅動邏輯\n * 2. 零魔數：所有常量集中管理\n * 3. 查表代替分支：用 O(1) 查表取代 O(n) 分支\n * 4. 機器可讀性：100%\n * \n * 代碼量：15 行核心邏輯\n */\n\n// ======================\n// 核心數據結構\n// ======================\nconst GapConfig = {\n  bounds: {\n    pace: [0.5, 25],\n    gradient: [-30, 30]\n  },\n  factors: {\n    gap: 0.07,\n    ngp: 0.05,\n    tech: 0.03\n  }\n};\n\n// ======================\n// 核心計算函數\n// ======================\nexport const calculateGAP = (pace, gradient, tech = 0) => {\n  const base = pace * (1 + gradient * GapConfig.factors.gap);\n  return base * (1 + tech * GapConfig.factors.tech);\n};\n\nexport const calculateNGP = (pace, gradient, tech = 0) => {\n  const base = pace * (1 + gradient * GapConfig.factors.ngp);\n  return base * (1 + tech * GapConfig.factors.tech);\n};\n\nexport const gapToNpg = (gap, gradient) => \n  gap / (1 + gradient * GapConfig.factors.gap) * \n  (1 + gradient * GapConfig.factors.ngp);\n\nexport const ngpToGap = (ngp, gradient) => \n  ngp / (1 + gradient * GapConfig.factors.ngp) * \n  (1 + gradient * GapConfig.factors.gap);\n\n// ======================\n// 工具函數\n// ======================\nexport const validateInput = (value, [min, max]) => \n  value >= min && value <= max;\n\nexport const formatResult = {\n  gap: gap => `${gap.toFixed(2)} min/km`,\n  ngp: ngp => `${ngp.toFixed(2)} min/km`,\n  diff: (gap, ngp) => {\n    const diff = gap - ngp;\n    return {\n      value: diff.toFixed(2),\n      percent: ((diff / ngp) * 100).toFixed(1)\n    };\n  }\n};","\n// 歷史紀錄管理器 (使用 localStorage)\n\nconst TRAINING_HISTORY_KEY = 'trailSyncTrainingHistory';\n\n/**\n * 從 localStorage 獲取訓練歷史\n * @returns {Array} 歷史紀錄陣列\n */\nexport function getTrainingHistory() {\n    try {\n        const history = localStorage.getItem(TRAINING_HISTORY_KEY);\n        return history ? JSON.parse(history) : [];\n    } catch (e) {\n        console.error(\"Error reading training history from localStorage\", e);\n        return [];\n    }\n}\n\n/**\n * 保存一筆訓練紀錄到 localStorage\n * @param {object} entry - 要保存的紀錄物件\n */\nexport function saveTrainingToHistory(entry) {\n    const history = getTrainingHistory();\n    history.push(entry);\n    try {\n        localStorage.setItem(TRAINING_HISTORY_KEY, JSON.stringify(history));\n    } catch (e) {\n        console.error(\"Error saving training history to localStorage\", e);\n    }\n}\n\n/**\n * 清除 localStorage 中的訓練歷史\n */\nexport function clearTrainingHistory() {\n    try {\n        localStorage.removeItem(TRAINING_HISTORY_KEY);\n    } catch (e) {\n        console.error(\"Error clearing training history from localStorage\", e);\n    }\n}\n","const SHOE_STORAGE_KEY = 'trailSyncShoes';\n\n/**\n * Retrieves all shoes from localStorage.\n * @returns {Array} An array of shoe objects.\n */\nexport function getShoes() {\n    const shoes = localStorage.getItem(SHOE_STORAGE_KEY);\n    return shoes ? JSON.parse(shoes) : [];\n}\n\n/**\n * Saves the entire array of shoes to localStorage.\n * @param {Array} shoes - The array of shoe objects to save.\n */\nfunction saveAllShoes(shoes) {\n    localStorage.setItem(SHOE_STORAGE_KEY, JSON.stringify(shoes));\n}\n\n/**\n * Adds a new shoe to the collection.\n * @param {object} shoeData - The shoe object to add (e.g., { name, brand, initialMileage }).\n */\nexport function addShoe(shoeData) {\n    const shoes = getShoes();\n    const newShoe = {\n        id: `shoe_${Date.now()}`,\n        name: shoeData.name,\n        brand: shoeData.brand,\n        initialMileage: parseFloat(shoeData.initialMileage) || 0,\n        currentMileage: parseFloat(shoeData.initialMileage) || 0,\n        addedDate: new Date().toISOString()\n    };\n    shoes.push(newShoe);\n    saveAllShoes(shoes);\n}\n\n/**\n * Updates the mileage of a specific shoe.\n * @param {string} shoeId - The ID of the shoe to update.\n * @param {number} runDistance - The distance of the run to add to the shoe's mileage.\n */\nexport function updateShoeMileage(shoeId, runDistance) {\n    const shoes = getShoes();\n    const shoeIndex = shoes.findIndex(s => s.id === shoeId);\n\n    if (shoeIndex > -1) {\n        shoes[shoeIndex].currentMileage += parseFloat(runDistance);\n        saveAllShoes(shoes);\n    }\n}\n\n/**\n * Deletes a shoe from the collection.\n * @param {string} shoeId - The ID of the shoe to delete.\n */\nexport function deleteShoe(shoeId) {\n    let shoes = getShoes();\n    shoes = shoes.filter(s => s.id !== shoeId);\n    saveAllShoes(shoes);\n}","const DEBRIEF_STORAGE_KEY = 'trailSyncDebriefs';\n\n/**\n * Retrieves all debrief entries from localStorage.\n * @returns {Array} An array of debrief objects.\n */\nexport function getDebriefs() {\n    const debriefs = localStorage.getItem(DEBRIEF_STORAGE_KEY);\n    return debriefs ? JSON.parse(debriefs) : [];\n}\n\n/**\n * Saves a new debrief entry to the collection.\n * @param {object} debriefData - The debrief object to add.\n */\nexport function saveDebrief(debriefData) {\n    const debriefs = getDebriefs();\n    const newDebrief = {\n        id: `debrief_${Date.now()}`,\n        type: 'debrief', // Mark as debrief entry\n        ...debriefData,\n        savedAt: new Date().toISOString()\n    };\n    debriefs.push(newDebrief);\n    localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n}\n\n/**\n * Deletes a debrief entry from the collection.\n * @param {string} debriefId - The ID of the debrief to delete.\n */\nexport function deleteDebrief(debriefId) {\n    let debriefs = getDebriefs();\n    debriefs = debriefs.filter(d => d.id !== debriefId);\n    localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n}\n\n/**\n * Updates a specific debrief entry.\n * @param {string} debriefId - The ID of the debrief to update.\n * @param {object} updatedData - The new data for the debrief entry.\n */\nexport function updateDebrief(debriefId, updatedData) {\n    const debriefs = getDebriefs();\n    const index = debriefs.findIndex(d => d.id === debriefId);\n    if (index !== -1) {\n        debriefs[index] = { ...debriefs[index], ...updatedData };\n        localStorage.setItem(DEBRIEF_STORAGE_KEY, JSON.stringify(debriefs));\n    }\n}\n\n/**\n * Clears all debrief entries from the collection.\n */\nexport function clearDebriefs() {\n    localStorage.removeItem(DEBRIEF_STORAGE_KEY);\n}","import { hmsToHours, calculateEquivalentPace, getTrainingPaces, paceToMinutesPerKm, minutesPerKmToHoursPerKm } from '../core/calculator.js';\n\nexport class TrainingPaceCalculator {\n    constructor(notifier) {\n        this.notifier = notifier;\n        this.cacheDOMElements();\n        this.addEventListeners();\n        this.init();\n    }\n\n    init() {\n        // Initial calculation on load can be done here if needed\n    }\n\n    cacheDOMElements() {\n        // Input mode\n        this.modeCurrentBtn = document.getElementById('tpc-mode-current');\n        this.modeTargetBtn = document.getElementById('tpc-mode-target');\n\n        // Distance\n        this.distanceInput = document.getElementById('tpc-distance');\n\n        // Input type\n        this.inputTypeTimeBtn = document.getElementById('tpc-input-time');\n        this.inputTypePaceBtn = document.getElementById('tpc-input-pace');\n        this.timeGroup = document.getElementById('tpc-time-group');\n        this.paceGroup = document.getElementById('tpc-pace-group');\n\n        // Time inputs\n        this.hoursInput = document.getElementById('tpc-hours');\n        this.minutesInput = document.getElementById('tpc-minutes');\n        this.secondsInput = document.getElementById('tpc-seconds');\n\n        // Pace inputs\n        this.paceMinInput = document.getElementById('tpc-pace-min');\n        this.paceSecInput = document.getElementById('tpc-pace-sec');\n\n        // Calculate button\n        this.calculateBtn = document.getElementById('tpc-calculate');\n\n        // Result elements\n        this.basePaceOutput = document.getElementById('tpc-base-pace');\n        this.basePaceOutputCompact = document.getElementById('tpc-base-pace-compact');\n        \n        // Interval results\n        this.intervalDistInput = document.getElementById('tpc-interval-dist');\n        this.intervalRepsInput = document.getElementById('tpc-interval-reps');\n        this.intervalPaceOutput = document.getElementById('tpc-interval-pace');\n        this.intervalPaceOutputCompact = document.getElementById('tpc-interval-pace-compact');\n        this.intervalRecoveryOutput = document.getElementById('tpc-interval-recovery');\n        this.intervalRecoveryOutputCompact = document.getElementById('tpc-interval-recovery-compact');\n\n        // LSD results\n        this.lsdDistInput = document.getElementById('tpc-lsd-dist');\n        this.lsdPaceOutput = document.getElementById('tpc-lsd-pace');\n        this.lsdPaceOutputCompact = document.getElementById('tpc-lsd-pace-compact');\n        this.lsdRecoveryOutput = document.getElementById('tpc-lsd-recovery');\n        this.lsdRecoveryOutputCompact = document.getElementById('tpc-lsd-recovery-compact');\n\n        // Copy button\n        this.copyBtn = document.getElementById('copy-tpc-results');\n    }\n\n    addEventListeners() {\n        this.inputTypeTimeBtn.addEventListener('click', () => this.toggleInputType('time'));\n        this.inputTypePaceBtn.addEventListener('click', () => this.toggleInputType('pace'));\n        this.calculateBtn.addEventListener('click', () => this.calculateAndDisplay());\n        \n        // Recalculate on input change for immediate feedback\n        this.intervalDistInput.addEventListener('input', () => this.calculateAndDisplay());\n        this.lsdDistInput.addEventListener('input', () => this.calculateAndDisplay());\n\n        if(this.copyBtn) this.copyBtn.addEventListener('click', (e) => this.copyResults(e.currentTarget));\n    }\n\n    copyResults(button) {\n        if (this.basePaceOutput.textContent === '0:00/km') {\n            alert('沒有結果可以複製。');\n            return;\n        }\n\n        const textToCopy = `\n訓練配速計算結果：\n- 基準配速: ${this.basePaceOutput.textContent}\n\n間歇跑 (Interval)\n- 趟數距離: ${this.intervalDistInput.value || 'N/A'} m\n- 趟數: ${this.intervalRepsInput.value || 'N/A'}\n- 建議配速: ${this.intervalPaceOutput.textContent}\n- 恢復跑: ${this.intervalRecoveryOutput.textContent}\n\n長距離慢跑 (LSD)\n- LSD 距離: ${this.lsdDistInput.value || 'N/A'} km\n- 建議配速: ${this.lsdPaceOutput.textContent}\n- 恢復跑: ${this.lsdRecoveryOutput.textContent}\n        `.trim().replace(/^ +/gm, ''); // trim and remove leading spaces\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            if (this.notifier) {\n                this.notifier(button);\n            } else {\n                alert('結果已複製到剪貼簿！');\n            }\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    toggleInputType(type) {\n        if (type === 'time') {\n            this.timeGroup.style.display = 'block';\n            this.paceGroup.style.display = 'none';\n            this.inputTypeTimeBtn.classList.add('active');\n            this.inputTypePaceBtn.classList.remove('active');\n        } else {\n            this.timeGroup.style.display = 'none';\n            this.paceGroup.style.display = 'block';\n            this.inputTypeTimeBtn.classList.remove('active');\n            this.inputTypePaceBtn.classList.add('active');\n        }\n    }\n\n    calculateAndDisplay() {\n        const distance = parseFloat(this.distanceInput.value);\n        let timeInHours;\n\n        if (this.inputTypeTimeBtn.classList.contains('active')) {\n            const hours = parseInt(this.hoursInput.value) || 0;\n            const minutes = parseInt(this.minutesInput.value) || 0;\n            const seconds = parseInt(this.secondsInput.value) || 0;\n            timeInHours = hmsToHours(hours, minutes, seconds);\n        } else {\n            const paceMinutes = parseInt(this.paceMinInput.value) || 0;\n            const paceSeconds = parseInt(this.paceSecInput.value) || 0;\n            if (distance > 0) {\n                const paceInHoursPerKm = minutesPerKmToHoursPerKm(paceMinutes, paceSeconds);\n                timeInHours = paceInHoursPerKm * distance;\n            } else {\n                timeInHours = 0;\n            }\n        }\n\n        if (!distance || distance <= 0 || !timeInHours || timeInHours <= 0) {\n            // Clear results if input is invalid\n            this.basePaceOutput.textContent = '0:00/km';\n            this.intervalPaceOutput.textContent = '0:00/km';\n            this.intervalRecoveryOutput.textContent = '0:00/km';\n            this.lsdPaceOutput.textContent = '0:00/km';\n            this.lsdRecoveryOutput.textContent = '0:00/km';\n            return;\n        }\n\n        const intervalDistance = parseFloat(this.intervalDistInput.value) || 400;\n        const lsdDistance = parseFloat(this.lsdDistInput.value) || 20;\n        const basePace = calculateEquivalentPace(distance, timeInHours);\n        const trainingPaces = getTrainingPaces(basePace, intervalDistance, lsdDistance);\n\n        this.basePaceOutput.textContent = paceToMinutesPerKm(basePace);\n        this.basePaceOutputCompact.textContent = paceToMinutesPerKm(basePace);\n        \n        // Interval pace doesn't depend on interval distance, but the display might in future\n        this.intervalPaceOutput.textContent = paceToMinutesPerKm(trainingPaces.interval);\n        this.intervalPaceOutputCompact.textContent = paceToMinutesPerKm(trainingPaces.interval);\n        this.intervalRecoveryOutput.textContent = paceToMinutesPerKm(trainingPaces.recovery);\n        this.intervalRecoveryOutputCompact.textContent = paceToMinutesPerKm(trainingPaces.recovery);\n\n        // LSD pace doesn't depend on LSD distance\n        this.lsdPaceOutput.textContent = paceToMinutesPerKm(trainingPaces.lsd);\n        this.lsdPaceOutputCompact.textContent = paceToMinutesPerKm(trainingPaces.lsd);\n        this.lsdRecoveryOutput.textContent = paceToMinutesPerKm(trainingPaces.recovery); // Often same recovery pace\n        this.lsdRecoveryOutputCompact.textContent = paceToMinutesPerKm(trainingPaces.recovery);\n    }\n}\n","\nimport { minutesPerKmToHoursPerKm, paceToMinutesPerKm } from './calculator.js';\n\n/**\n * 使用 Riegel 公式預測不同距離的完賽時間\n * T2 = T1 * (D2 / D1)^1.06\n * @param {number} t1 - 已知時間 (小時)\n * @param {number} d1 - 已知距離 (公里)\n * @param {number} d2 - 目標距離 (公里)\n * @returns {number} 預測的目標距離完賽時間 (小時)\n */\nexport function riegelPrediction(t1, d1, d2) {\n    if (t1 <= 0 || d1 <= 0 || d2 <= 0) return 0;\n    return t1 * Math.pow(d2 / d1, 1.06);\n}\n\n/**\n * 根據基準配速 (小時/公里) 計算各強度配速\n * @param {number} basePaceInHoursPerKm - 10K 競賽配速 (小時/公里)\n * @returns {object} 包含 I, T, M, E 配速的物件 (小時/公里)\n */\nexport function getPaceZones(basePaceInHoursPerKm) {\n    if (basePaceInHoursPerKm <= 0) {\n        return { I: 0, T: 0, M: 0, E: 0 };\n    }\n\n    // 根據 Daniels' Running Formula 的通用規則估算\n    // T-Pace (Threshold): 約比 10K 配速慢 15-20 秒/公里\n    const tPace = basePaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 18);\n\n    // I-Pace (Interval): 約等於 3K-5K 配速。我們用 Riegel 從 10K 推算 3K 配速\n    const time10k = basePaceInHoursPerKm * 10;\n    const time3k = riegelPrediction(time10k, 10, 3);\n    const iPace = time3k / 3;\n\n    // M-Pace (Marathon): 全馬配速。用 Riegel 從 10K 推算 42.195K 配速\n    const time42k = riegelPrediction(time10k, 10, 42.195);\n    const mPace = time42k / 42.195;\n\n    // E-Pace (Easy/LSD): 約比 M-Pace 慢 60-90 秒/公里\n    const ePace = mPace + minutesPerKmToHoursPerKm(1, 15);\n\n    return {\n        I: iPace,\n        T: tPace,\n        M: mPace,\n        E: ePace,\n    };\n}\n\n/**\n * 產生完整的訓練課表建議\n * @param {object} options - 使用者輸入的選項\n * @returns {object} 包含熱身、主課表、緩和的完整課表物件\n */\nexport function generateWorkout(options) {\n    const {\n        baseRace, // { distance, timeInHours }\n        mainWorkout, // { type, distance, reps, targetPace }\n        warmup, // { type, value }\n    } = options;\n\n    // 1. 計算基準配速和各區間配速\n    const basePace = baseRace.timeInHours / baseRace.distance;\n    const paceZones = getPaceZones(basePace);\n\n    // 2. 決定主課表配速\n    let mainPaceInHoursPerKm;\n    switch (mainWorkout.targetPace) {\n        case 'I pace':\n            mainPaceInHoursPerKm = paceZones.I;\n            break;\n        case 'T pace':\n            mainPaceInHoursPerKm = paceZones.T;\n            break;\n        case 'M pace':\n            mainPaceInHoursPerKm = paceZones.M;\n            break;\n        default: // LSD 或其他\n            mainPaceInHoursPerKm = paceZones.E;\n    }\n    \n    const mainPaceFormatted = paceToMinutesPerKm(mainPaceInHoursPerKm);\n    const finalMainWorkout = { ...mainWorkout, pace: mainPaceFormatted };\n\n    // 3. 計算熱身\n    const warmupPaceInHoursPerKm = mainPaceInHoursPerKm + minutesPerKmToHoursPerKm(1, 45); // 主配速 +1:30-2:00\n    const warmupPaceFormatted = `${paceToMinutesPerKm(warmupPaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 10))} - ${paceToMinutesPerKm(warmupPaceInHoursPerKm - minutesPerKmToHoursPerKm(0, 10))}`;\n    \n    let warmupDistance, warmupTime;\n    if (warmup.type === 'distance') {\n        warmupDistance = warmup.value;\n        warmupTime = warmup.value * warmupPaceInHoursPerKm * 60; // 分鐘\n    } else { // time\n        warmupTime = warmup.value;\n        warmupDistance = warmup.value / 60 / warmupPaceInHoursPerKm;\n    }\n\n    const finalWarmup = {\n        text: `${warmupTime.toFixed(0)} 分鐘 (約 ${warmupDistance.toFixed(1)} 公里)`,\n        pace: warmupPaceFormatted,\n        zone: 'Zone 1-2',\n        strides: mainWorkout.targetPace === 'I pace' ? '4-6x100m strides' : null\n    };\n\n    // 4. 計算緩和\n    const cooldownTime = warmupTime * 0.7; // 熱身時間的 0.6-0.8\n    const cooldownPaceInHoursPerKm = warmupPaceInHoursPerKm + minutesPerKmToHoursPerKm(0, 10); // 比熱身慢\n    const cooldownDistance = cooldownTime / 60 / cooldownPaceInHoursPerKm;\n\n    const finalCooldown = {\n        text: `${cooldownTime.toFixed(0)} 分鐘 (約 ${cooldownDistance.toFixed(1)} 公里)`,\n        pace: paceToMinutesPerKm(cooldownPaceInHoursPerKm)\n    };\n\n    return {\n        warmup: finalWarmup,\n        main: finalMainWorkout,\n        cooldown: finalCooldown,\n        debug: { paceZones }\n    };\n}\n","\nimport { hmsToHours } from '../core/calculator.js';\nimport { generateWorkout } from '../core/training-planner.js';\n\nexport class TrainingPlanUI {\n    constructor(notifier) {\n        this.notifier = notifier;\n        this.cacheDOMElements();\n        if (this.generateBtn) { // Only add listeners if the element exists\n            this.addEventListeners();\n        }\n    }\n\n    cacheDOMElements() {\n        // Mode Buttons\n        this.modeResultBtn = document.getElementById('plan-mode-result');\n        this.modeGoalBtn = document.getElementById('plan-mode-goal');\n        this.resultGroup = document.getElementById('plan-result-group');\n        this.goalGroup = document.getElementById('plan-goal-group');\n\n        // Result Inputs\n        this.resultDist = document.getElementById('plan-result-dist');\n        this.resultHours = document.getElementById('plan-result-hours');\n        this.resultMinutes = document.getElementById('plan-result-minutes');\n        this.resultSeconds = document.getElementById('plan-result-seconds');\n\n        // Goal Inputs\n        this.goalDist = document.getElementById('plan-goal-dist');\n        this.goalHours = document.getElementById('plan-goal-hours');\n        this.goalMinutes = document.getElementById('plan-goal-minutes');\n        this.goalSeconds = document.getElementById('plan-goal-seconds');\n\n        // Main Workout Inputs\n        this.mainType = document.getElementById('plan-main-type');\n        this.mainDetails = document.getElementById('plan-main-details');\n        this.mainPace = document.getElementById('plan-main-pace');\n\n        // Warmup Inputs\n        this.warmupTimeBtn = document.getElementById('plan-warmup-time');\n        this.warmupDistBtn = document.getElementById('plan-warmup-dist');\n        this.warmupValue = document.getElementById('plan-warmup-value');\n        this.warmupLabel = document.querySelector('label[for=\"plan-warmup-value\"]');\n\n        // Generate Button\n        this.generateBtn = document.getElementById('plan-generate-btn');\n\n        // Result Display\n        this.resWarmup = document.getElementById('plan-res-warmup');\n        this.resWarmupPace = document.getElementById('plan-res-warmup-pace');\n        this.resWarmupCompact = document.getElementById('plan-res-warmup-compact');\n        this.resWarmupPaceCompact = document.getElementById('plan-res-warmup-pace-compact');\n        this.resMainTitle = document.getElementById('plan-res-main-title');\n        this.resMainPace = document.getElementById('plan-res-main-pace');\n        this.resMainCompact = document.getElementById('plan-res-main-compact');\n        this.resMainPaceCompact = document.getElementById('plan-res-main-pace-compact');\n        this.resCooldown = document.getElementById('plan-res-cooldown');\n        this.resCooldownPace = document.getElementById('plan-res-cooldown-pace');\n        this.resCooldownCompact = document.getElementById('plan-res-cooldown-compact');\n        this.resCooldownPaceCompact = document.getElementById('plan-res-cooldown-pace-compact');\n\n        // Copy Button\n        this.copyBtn = document.getElementById('copy-plan-results');\n    }\n\n    addEventListeners() {\n        this.modeResultBtn.addEventListener('click', () => this.toggleMode('result'));\n        this.modeGoalBtn.addEventListener('click', () => this.toggleMode('goal'));\n        this.warmupTimeBtn.addEventListener('click', () => this.toggleWarmupInput('time'));\n        this.warmupDistBtn.addEventListener('click', () => this.toggleWarmupInput('dist'));\n        this.generateBtn.addEventListener('click', () => this.calculateAndDisplay());\n        if(this.copyBtn) this.copyBtn.addEventListener('click', (e) => this.copyResults(e.currentTarget));\n    }\n\n    copyResults(button) {\n        if (this.resWarmup.textContent === '--') {\n            alert('沒有課表可以複製。');\n            return;\n        }\n\n        const textToCopy = `\nTrailSync 課表建議：\n\n- 熱身: ${this.resWarmup.textContent}\n  ${this.resWarmupPace.textContent}\n\n- 主課表: ${this.resMainTitle.textContent}\n  ${this.resMainPace.textContent}\n\n- 緩和: ${this.resCooldown.textContent}\n  ${this.resCooldownPace.textContent}\n        `.trim().replace(/^ +/gm, '');\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            if (this.notifier) {\n                this.notifier(button);\n            } else {\n                alert('課表已複製到剪貼簿！');\n            }\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    toggleMode(mode) {\n        if (mode === 'result') {\n            this.resultGroup.style.display = 'block';\n            this.goalGroup.style.display = 'none';\n            this.modeResultBtn.classList.add('active');\n            this.modeGoalBtn.classList.remove('active');\n        } else {\n            this.resultGroup.style.display = 'none';\n            this.goalGroup.style.display = 'block';\n            this.modeResultBtn.classList.remove('active');\n            this.modeGoalBtn.classList.add('active');\n        }\n    }\n\n    toggleWarmupInput(type) {\n        if (type === 'time') {\n            this.warmupLabel.textContent = '時間 (分鐘) 或 距離 (公里)';\n            this.warmupValue.placeholder = '例如: 15 (分鐘)';\n            this.warmupTimeBtn.classList.add('active');\n            this.warmupDistBtn.classList.remove('active');\n        } else {\n            this.warmupLabel.textContent = '距離 (公里) 或 時間 (分鐘)';\n            this.warmupValue.placeholder = '例如: 2 (公里)';\n            this.warmupTimeBtn.classList.remove('active');\n            this.warmupDistBtn.classList.add('active');\n        }\n    }\n\n    calculateAndDisplay() {\n        // 1. Gather Base Race Info\n        let baseRace = {};\n        if (this.modeResultBtn.classList.contains('active')) {\n            baseRace.distance = parseFloat(this.resultDist.value);\n            baseRace.timeInHours = hmsToHours(this.resultHours.value, this.resultMinutes.value, this.resultSeconds.value);\n        } else {\n            baseRace.distance = parseFloat(this.goalDist.value);\n            baseRace.timeInHours = hmsToHours(this.goalHours.value, this.goalMinutes.value, this.goalSeconds.value);\n        }\n\n        if (!baseRace.distance || !baseRace.timeInHours) {\n            alert('請輸入有效的比賽成績或目標時間。');\n            return;\n        }\n\n        // 2. Gather Main Workout Info\n        const mainWorkout = {\n            type: this.mainType.value,\n            details: this.mainDetails.value,\n            targetPace: this.mainPace.value\n        };\n\n        // 3. Gather Warmup Info\n        const warmup = {\n            type: this.warmupTimeBtn.classList.contains('active') ? 'time' : 'distance',\n            value: parseFloat(this.warmupValue.value)\n        };\n\n        if (!warmup.value) {\n            alert('請輸入有效的熱身時間或距離。');\n            return;\n        }\n\n        // 4. Generate Workout\n        const workoutPlan = generateWorkout({ baseRace, mainWorkout, warmup });\n\n        // 5. Display Results\n        this.resWarmup.textContent = workoutPlan.warmup.text;\n        this.resWarmupCompact.textContent = workoutPlan.warmup.text;\n        let warmupPaceText = `配速: ${workoutPlan.warmup.pace}`;\n        if(workoutPlan.warmup.strides){\n            warmupPaceText += ` + ${workoutPlan.warmup.strides}`;\n        }\n        this.resWarmupPace.textContent = warmupPaceText;\n        this.resWarmupPaceCompact.textContent = workoutPlan.warmup.pace;\n\n        this.resMainTitle.textContent = `${workoutPlan.main.type}: ${workoutPlan.main.details}`;\n        this.resMainCompact.textContent = `${workoutPlan.main.type}: ${workoutPlan.main.details}`;\n        this.resMainPace.textContent = `配速: ${workoutPlan.main.pace}`;\n        this.resMainPaceCompact.textContent = workoutPlan.main.pace;\n\n        this.resCooldown.textContent = workoutPlan.cooldown.text;\n        this.resCooldownCompact.textContent = workoutPlan.cooldown.text;\n        this.resCooldownPace.textContent = `配速: ${workoutPlan.cooldown.pace}`;\n        this.resCooldownPaceCompact.textContent = workoutPlan.cooldown.pace;\n    }\n}\n","import { formatTime, hmsToHours, calculateEP, calculateEPH, getAdvancedEPH, calculateThresholdPercentage } from './core/calculator.js';\nimport { parseGPX } from './core/gpx-parser.js';\nimport { calculateGAP } from './modules/gap-ngp.js';\nimport { parseIntervals } from './modules/interval-parser.js';\nimport { getTrainingHistory, saveTrainingToHistory, clearTrainingHistory } from './ui/history-manager.js';\nimport { exportElementAsPng } from './ui/png-generator.js';\nimport { getShoes, addShoe, updateShoeMileage, deleteShoe } from './ui/shoe-manager.js';\nimport { saveDebrief, getDebriefs, clearDebriefs, deleteDebrief, updateDebrief } from './ui/debrief-manager.js';\nimport { TrainingPaceCalculator } from './ui/training-pace-calculator.js';\nimport { TrainingPlanUI } from './ui/training-plan-ui.js';\n\nfunction onSafe(sel, evt, handler, options) {\n  const el = typeof sel === 'string' ? document.querySelector(sel) : sel;\n  if (!el) { console.warn('[bind-skip]', sel); return; }\n  el.addEventListener(evt, handler, options);\n}\nfunction qs(sel) { return document.querySelector(sel); }\nfunction qsa(sel){ return Array.from(document.querySelectorAll(sel)); }\n\nfunction convertTreadmillToPace(speed, incline) {\n    if (speed <= 0) return 0;\n    const pacePerKm = 60 / speed;\n    const inclineEffect = incline * 0.15;\n    return pacePerKm + inclineEffect;\n}\n\nfunction convertPaceToTreadmillSpeed(pace, incline) {\n    if (pace <= 0) return 0;\n    const speed = 60 / (pace - (incline * 0.15));\n    return speed;\n}\n\nclass TrailSyncApp {\n    constructor() {\n        this.editingDebriefId = null;\n        this.cacheDOMElements();\n        this.addEventListeners();\n        this.initTheme();\n        this.initView();\n        this.loadShoes();\n        this.loadHistory();\n        this.intervalSetCounter = 0;\n        this.initializeDebriefCalendar();\n        this.trainingPaceCalculator = new TrainingPaceCalculator();\n        this.trainingPlanUI = new TrainingPlanUI(); // Initialize new UI module\n    }\n\n    cacheDOMElements() {\n        // RWD, A11y & Theme elements\n        this.themeToggleBtn = document.getElementById('theme-toggle-btn');\n        this.viewDesktopBtn = document.getElementById('view-desktop-btn');\n        this.viewMobileBtn = document.getElementById('view-mobile-btn');\n        this.menuToggleBtn = document.getElementById('menu-toggle-btn');\n        this.navLinks = document.getElementById('main-nav-links');\n        this.advancedOptionsToggle = document.getElementById('advanced-options-toggle');\n        this.advancedOptionsContent = document.getElementById('advanced-options-content');\n\n        this.routeNameInput = document.getElementById('route-name');\n        this.distanceInput = document.getElementById('distance');\n        this.elevationInput = document.getElementById('elevation');\n        this.targetHoursInput = document.getElementById('target-hours');\n        this.targetMinutesInput = document.getElementById('target-minutes');\n        this.targetSecondsInput = document.getElementById('target-seconds');\n        this.routeTypeSelect = document.getElementById('route-type');\n        this.altitudeInput = document.getElementById('altitude');\n        this.userTPaceInput = document.getElementById('user-t-pace');\n        this.ultraRaceCheckbox = document.getElementById('ultra-race-checkbox');\n        this.calculateBtn = document.getElementById('calculate-btn');\n        this.resultsPaneOnPage = document.getElementById('results-pane-onpage');\n        this.resDistanceDisplay = document.getElementById('res-distance');\n        this.resElevationDisplay = document.getElementById('res-elevation');\n        this.resTimeDisplay = document.getElementById('res-time');\n        this.ephDisplay = document.getElementById('eph');\n        this.resDistanceDisplayCompact = document.getElementById('res-distance-compact');\n        this.resElevationDisplayCompact = document.getElementById('res-elevation-compact');\n        this.resTimeDisplayCompact = document.getElementById('res-time-compact');\n        this.ephDisplayCompact = document.getElementById('eph-compact');\n        this.cardExporterContent = document.getElementById('card-exporter-content');\n        this.runShoeSelector = document.getElementById('run-shoe-selector');\n\n        // Interval Elements\n        this.intervalModeTimeBtn = document.getElementById('interval-mode-time');\n        this.intervalModePaceBtn = document.getElementById('interval-mode-pace');\n        this.intervalTimeInputs = document.getElementById('interval-time-inputs');\n        this.intervalPaceInputs = document.getElementById('interval-pace-inputs');\n        this.intervalDistanceInput = document.getElementById('interval-distance');\n        this.intervalCalculateBtn = document.getElementById('interval-calculate');\n        this.intervalResultsList = document.getElementById('interval-results-list');\n        this.intervalResultsListMobile = document.getElementById('interval-results-list-mobile');\n        this.intervalResultsListDesktop = document.getElementById('interval-results-list-desktop');\n        this.intervalSetsContainer = document.getElementById('interval-sets-container');\n        this.addIntervalSetBtn = document.getElementById('add-interval-set-btn');\n        this.clearIntervalSetsBtn = document.getElementById('clear-interval-sets-btn');\n        this.intervalTotalDistanceDisplay = document.getElementById('interval-total-distance');\n        this.intervalTotalTimeDisplay = document.getElementById('interval-total-time');\n        this.intervalTotalDistanceDisplayCompact = document.getElementById('interval-total-distance-compact');\n        this.intervalTotalTimeDisplayCompact = document.getElementById('interval-total-time-compact');\n        this.intervalTargetPaceMin = document.getElementById('interval-target-pace-min');\n        this.intervalTargetPaceSec = document.getElementById('interval-target-pace-sec');\n        this.intervalPaceReps = document.getElementById('interval-pace-reps');\n        this.copyIntervalBtn = document.getElementById('copy-interval-results');\n        this.copyTpcBtn = document.getElementById('copy-tpc-results');\n        this.copyPlanBtn = document.getElementById('copy-plan-results');\n        this.allCopyButtons = document.querySelectorAll('.btn-copy-results');\n\n        // Race Predictor v2\n\n        this.gapPaceInput = document.getElementById('gap-pace');\n        this.gapGradeInput = document.getElementById('gap-grade');\n        this.gapCalculateBtn = document.getElementById('gap-calculate');\n        this.gapResultDisplay = document.getElementById('gap-result');\n        this.gapResultDisplayCompact = document.getElementById('gap-result-compact');\n\n        this.treadmillSpeedInput = document.getElementById('treadmill-speed');\n        this.treadmillInclineInput = document.getElementById('treadmill-incline');\n        this.treadmillConvertBtn = document.getElementById('treadmill-convert');\n        this.equivalentPaceDisplay = document.getElementById('equivalent-pace');\n        this.equivalentPaceDisplayCompact = document.getElementById('equivalent-pace-compact');\n        this.flatPaceInput = document.getElementById('flat-pace-input');\n        this.reverseTreadmillInclineInput = document.getElementById('reverse-treadmill-incline');\n        this.reverseTreadmillConvertBtn = document.getElementById('reverse-treadmill-convert-btn');\n        this.treadmillSpeedResultDisplay = document.getElementById('treadmill-speed-result');\n        this.treadmillSpeedResultDisplayCompact = document.getElementById('treadmill-speed-result-compact');\n\n        this.raceDistanceInput = document.getElementById('race-distance');\n        this.raceElevationGainInput = document.getElementById('race-elevation-gain');\n        this.raceElevationLossInput = document.getElementById('race-elevation-loss');\n        this.userEphInput = document.getElementById('user-eph');\n        this.racePredictBtn = document.getElementById('race-predict');\n        this.raceTimeDisplay = document.getElementById('race-time');\n        this.raceTimeDisplayCompact = document.getElementById('race-time-compact');\n        this.raceEpDisplay = document.getElementById('race-ep');\n        this.raceEpDisplayCompact = document.getElementById('race-ep-compact');\n\n        this.saveTrainingBtn = document.getElementById('save-training');\n        this.historyList = document.getElementById('history-list');\n        this.clearHistoryBtn = document.getElementById('clear-history');\n\n        this.shoeNameInput = document.getElementById('shoe-name');\n        this.shoeBrandInput = document.getElementById('shoe-brand');\n        this.shoeMileageInput = document.getElementById('shoe-mileage');\n        this.addShoeBtn = document.getElementById('add-shoe-btn');\n        this.shoeListContainer = document.getElementById('shoe-list');\n\n        this.debriefRaceNameInput = document.getElementById('debrief-race-name');\n        this.debriefDateInput = document.getElementById('debrief-date');\n        this.debriefActualTimeInput = document.getElementById('debrief-actual-time');\n        this.debriefMentalStateInput = document.getElementById('debrief-mental-state');\n        this.debriefNutritionInput = document.getElementById('debrief-nutrition');\n        this.debriefGearInput = document.getElementById('debrief-gear');\n        this.debriefSubmitBtn = document.getElementById('debrief-submit');\n        this.debriefCalendarContainer = document.getElementById('debrief-calendar');\n\n        // Race Predictor v2\n        this.refRaceDistInput = document.getElementById('ref-race-dist');\n        this.refRaceElevInput = document.getElementById('ref-race-elev');\n        this.refRaceTimeHInput = document.getElementById('ref-race-time-h');\n        this.refRaceTimeMInput = document.getElementById('ref-race-time-m');\n        this.refRaceTimeSInput = document.getElementById('ref-race-time-s');\n        this.trainDistInput = document.getElementById('train-dist');\n        this.trainElevInput = document.getElementById('train-elev');\n        this.calculateTrainingTimeBtn = document.getElementById('calculate-training-time-btn');\n        this.trainingTimeResultDisplay = document.getElementById('training-time-result');\n        this.trainingTimeResultDisplayCompact = document.getElementById('training-time-result-compact');\n        this.refRaceEphResultDisplay = document.getElementById('ref-race-eph-result');\n        this.refRaceEphResultDisplayCompact = document.getElementById('ref-race-eph-result-compact');\n\n        // Advanced Prediction\n        this.advancedStrategySection = document.getElementById('advanced-strategy-section');\n        this.climbingFactorInput = document.getElementById('climbing-factor');\n        this.descendingFactorInput = document.getElementById('descending-factor');\n        this.aidStationContainer = document.getElementById('aid-station-container');\n        this.addAidStationBtn = document.getElementById('add-aid-station-btn');\n    }\n\n    addEventListeners() {\n        // RWD, A11y & Theme listeners\n        onSafe(this.themeToggleBtn, 'click', this.handleThemeToggle.bind(this));\n        onSafe(this.viewDesktopBtn, 'click', () => this.handleViewToggle('desktop'));\n        onSafe(this.viewMobileBtn, 'click', () => this.handleViewToggle('mobile'));\n        onSafe(this.menuToggleBtn, 'click', this.handleMenuToggle.bind(this));\n        this.navLinks.querySelectorAll('.nav-link').forEach(link => {\n            onSafe(link, 'click', () => {\n                if (this.navLinks.classList.contains('is-open')) {\n                    this.handleMenuToggle(); // Close the menu\n                }\n            });\n        });\n        onSafe(this.advancedOptionsToggle, 'click', this.handleAdvancedOptionsToggle.bind(this));\n\n        onSafe(this.calculateBtn, 'click', this.handleCalculation.bind(this));\n        onSafe(this.intervalCalculateBtn, 'click', this.handleIntervalCalculation.bind(this));\n        onSafe(this.gapCalculateBtn, 'click', this.handleGapCalculation.bind(this));\n        onSafe(this.treadmillConvertBtn, 'click', this.handleTreadmillConversion.bind(this));\n        onSafe(this.racePredictBtn, 'click', this.handleRacePrediction.bind(this));\n        onSafe(this.saveTrainingBtn, 'click', this.saveCurrentTraining.bind(this));\n        onSafe(this.clearHistoryBtn, 'click', this.clearHistory.bind(this));\n        onSafe(this.addShoeBtn, 'click', this.handleAddShoe.bind(this));\n        onSafe(this.debriefSubmitBtn, 'click', this.handleDebriefSubmit.bind(this));\n        onSafe(this.addIntervalSetBtn, 'click', this.addIntervalSetRow.bind(this));\n        onSafe(this.clearIntervalSetsBtn, 'click', this.clearIntervalSets.bind(this));\n        onSafe(this.reverseTreadmillConvertBtn, 'click', this.handleReverseTreadmillConversion.bind(this));\n        onSafe(this.calculateTrainingTimeBtn, 'click', this.handleTrainingTimeCalculation.bind(this));\n\n        // Copy buttons\n        if(this.copyIntervalBtn) onSafe(this.copyIntervalBtn, 'click', (e) => this.handleCopyIntervalResults(e.currentTarget));\n        if(this.copyTpcBtn) onSafe(this.copyTpcBtn, 'click', (e) => this.trainingPaceCalculator.handleCopyTpcResults(e.currentTarget));\n        if(this.copyPlanBtn) onSafe(this.copyPlanBtn, 'click', (e) => this.trainingPlanUI.handleCopyPlanResults(e.currentTarget));\n        this.allCopyButtons.forEach(button => {\n            onSafe(button, 'click', (e) => this.handleCopyResults(e.currentTarget));\n        });\n\n        // Advanced Prediction Listeners\n        onSafe(this.addAidStationBtn, 'click', this.handleAddAidStation.bind(this));\n\n        // Interval mode switching\n        onSafe(this.intervalModeTimeBtn, 'click', () => this.switchIntervalMode('time'));\n        onSafe(this.intervalModePaceBtn, 'click', () => this.switchIntervalMode('pace'));\n\n        onSafe(this.shoeListContainer, 'click', (e) => {\n            if (e.target && e.target.classList.contains('shoe-delete-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleDeleteShoe(shoeId);\n            }\n            if (e.target && e.target.classList.contains('shoe-add-mileage-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleAddMileage(shoeId);\n            }\n            if (e.target && e.target.classList.contains('shoe-edit-btn')) {\n                const shoeId = e.target.dataset.id;\n                this.handleEditShoe(shoeId);\n            }\n        });\n\n        onSafe(this.debriefCalendarContainer, 'click', (e) => {\n            if (e.target && e.target.classList.contains('debrief-delete-btn')) {\n                const debriefId = e.target.dataset.id;\n                this.handleDeleteDebrief(debriefId);\n            }\n            if (e.target && e.target.classList.contains('debrief-edit-btn')) {\n                const debriefId = e.target.dataset.id;\n                this.handleEditDebrief(debriefId);\n            }\n        });\n    }\n\n    initTheme() {\n        const savedTheme = localStorage.getItem('theme');\n        const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\n            document.documentElement.classList.add('theme-dark');\n            this.themeToggleBtn.setAttribute('aria-pressed', 'true');\n            this.themeToggleBtn.classList.add('is-dark');\n        } else {\n            document.documentElement.classList.remove('theme-dark');\n            this.themeToggleBtn.setAttribute('aria-pressed', 'false');\n            this.themeToggleBtn.classList.remove('is-dark');\n        }\n    }\n\n    initView() {\n        const savedView = localStorage.getItem('preferred-view');\n        if (savedView) {\n            this.handleViewToggle(savedView);\n        } else {\n            // Default to no forced view, let CSS media queries handle it\n            document.documentElement.classList.remove('force-desktop', 'force-mobile');\n            this.viewDesktopBtn.classList.remove('active');\n            this.viewMobileBtn.classList.remove('active');\n        }\n    }\n\n    handleThemeToggle() {\n        const darkOn = document.documentElement.classList.toggle('theme-dark');\n        localStorage.setItem('theme', darkOn ? 'dark' : 'light');\n        this.themeToggleBtn.setAttribute('aria-pressed', darkOn ? 'true' : 'false');\n        this.themeToggleBtn.classList.toggle('is-dark', darkOn);\n    }\n\n    handleMenuToggle() {\n        const isOpen = this.navLinks.classList.toggle('is-open');\n        this.menuToggleBtn.setAttribute('aria-expanded', isOpen);\n    }\n\n    handleViewToggle(viewMode) {\n        document.documentElement.classList.remove('force-desktop', 'force-mobile');\n        this.viewDesktopBtn.classList.remove('active');\n        this.viewMobileBtn.classList.remove('active');\n\n        if (viewMode === 'desktop') {\n            document.documentElement.classList.add('force-desktop');\n            this.viewDesktopBtn.classList.add('active');\n        } else if (viewMode === 'mobile') {\n            document.documentElement.classList.add('force-mobile');\n            this.viewMobileBtn.classList.add('active');\n        }\n        localStorage.setItem('preferred-view', viewMode);\n    }\n\n    handleAdvancedOptionsToggle() {\n        const isOpen = this.advancedOptionsContent.classList.toggle('is-open');\n        this.advancedOptionsToggle.setAttribute('aria-expanded', isOpen);\n    }\n\n    notifyCopied(button) {\n        const originalText = button.textContent;\n        button.textContent = '已複製!';\n        button.disabled = true;\n        setTimeout(() => {\n            button.textContent = originalText;\n            button.disabled = false;\n        }, 2000);\n    }\n\n    switchIntervalMode(mode) {\n        if (mode === 'time') {\n            this.intervalModeTimeBtn.classList.add('active');\n            this.intervalModePaceBtn.classList.remove('active');\n            this.intervalTimeInputs.style.display = 'block';\n            this.intervalPaceInputs.style.display = 'none';\n        } else {\n            this.intervalModeTimeBtn.classList.remove('active');\n            this.intervalModePaceBtn.classList.add('active');\n            this.intervalTimeInputs.style.display = 'none';\n            this.intervalPaceInputs.style.display = 'block';\n        }\n        this.clearIntervalSets(); // Reset results when switching modes\n    }\n\n    handleCalculation() {\n        const distance = parseFloat(this.distanceInput.value) || 0;\n        const elevation = parseFloat(this.elevationInput.value) || 0;\n        const timeInHours = hmsToHours(this.targetHoursInput.value, this.targetMinutesInput.value, this.targetSecondsInput.value);\n        const routeType = this.routeTypeSelect.value;\n        const altitude = parseFloat(this.altitudeInput.value) || 0;\n        const isUltra = this.ultraRaceCheckbox.checked;\n\n        if (distance <= 0 || timeInHours <= 0) {\n            alert('請輸入有效的距離和時間。');\n            return;\n        }\n\n        const ep = calculateEP(distance, elevation);\n        const baseEph = calculateEPH(ep, timeInHours);\n\n        const { finalEph } = getAdvancedEPH(baseEph, timeInHours, routeType, altitude, isUltra);\n\n        this.resDistanceDisplay.textContent = `${distance.toFixed(1)} km`;\n        this.resElevationDisplay.textContent = `${elevation.toFixed(0)} m`;\n        this.resTimeDisplay.textContent = formatTime(timeInHours);\n        this.ephDisplay.textContent = finalEph.toFixed(1);\n\n        // Update compact display for desktop\n        this.resDistanceDisplayCompact.textContent = `${distance.toFixed(1)} km`;\n        this.resElevationDisplayCompact.textContent = `${elevation.toFixed(0)} m`;\n        this.resTimeDisplayCompact.textContent = formatTime(timeInHours);\n        this.ephDisplayCompact.textContent = finalEph.toFixed(1);\n    }\n\n    loadShoes() {\n        const shoes = getShoes();\n        this.shoeListContainer.innerHTML = '';\n        this.runShoeSelector.innerHTML = '<option value=\"\">不指定</option>';\n        if (shoes.length === 0) {\n            this.shoeListContainer.innerHTML = '<p class=\"history-empty\">尚未加入任何跑鞋</p>';\n            return;\n        }\n        shoes.forEach(shoe => {\n            this.renderShoeCard(shoe);\n            this.addShoeToSelector(shoe);\n        });\n    }\n\n    renderShoeCard(shoe) {\n        const card = document.createElement('div');\n        card.className = 'shoe-card';\n        card.dataset.id = shoe.id;\n        const retirement = 800;\n        const pct = Math.min((shoe.currentMileage / retirement) * 100, 100);\n        card.innerHTML = `\n            <div class=\"shoe-header\">\n                <div>\n                    <h4 class=\"shoe-name\">${shoe.name}</h4>\n                    <p class=\"shoe-brand\">${shoe.brand}</p>\n                </div>\n                <div>\n                    <button class=\"shoe-edit-btn\" data-id=\"${shoe.id}\">編輯</button>\n                    <button class=\"shoe-delete-btn\" data-id=\"${shoe.id}\">&times;</button>\n                </div>\n            </div>\n            <div class=\"mileage-info\">\n                <div class=\"mileage-bar-container\"><div class=\"mileage-bar\" style=\"width: ${pct}%;\"></div></div>\n                <p class=\"mileage-text\">${shoe.currentMileage.toFixed(1)} / ${retirement} km</p>\n                <button class=\"shoe-add-mileage-btn\" data-id=\"${shoe.id}\">新增里程</button>\n            </div>\n        `;\n        this.shoeListContainer.appendChild(card);\n    }\n\n    addShoeToSelector(shoe) {\n        const opt = document.createElement('option');\n        opt.value = shoe.id;\n        opt.textContent = `${shoe.name} (${shoe.brand})`;\n        this.runShoeSelector.appendChild(opt);\n    }\n\n    handleAddShoe() {\n        const name = this.shoeNameInput.value.trim();\n        const brand = this.shoeBrandInput.value.trim();\n        const initial = parseFloat(this.shoeMileageInput.value) || 0;\n        if (!name || !brand) { alert('請輸入跑鞋型號和品牌。'); return; }\n        addShoe({ name, brand, initialMileage: initial });\n        this.shoeNameInput.value = '';\n        this.shoeBrandInput.value = '';\n        this.shoeMileageInput.value = '';\n        this.loadShoes();\n    }\n\n    handleDeleteShoe(shoeId) {\n        if (confirm('您確定要刪除這雙跑鞋嗎？')) { deleteShoe(shoeId); this.loadShoes(); }\n    }\n\n    handleAddMileage(shoeId) {\n        const km = prompt('請輸入本次新增里程（km）：');\n        if (km === null) return;\n        const num = parseFloat(km);\n        if (isNaN(num) || num <= 0) { alert('請輸入正數！'); return; }\n        updateShoeMileage(shoeId, num);\n        this.loadShoes();\n        alert(`已為跑鞋新增 ${num.toFixed(1)} km！`);\n    }\n\n    handleEditShoe(shoeId) {\n        const shoes = getShoes();\n        const shoe = shoes.find(s => s.id === shoeId);\n        if (!shoe) return;\n        const newName = prompt('新名稱（留空保持原值）：', shoe.name);\n        const newBrand = prompt('新品牌（留空保持原值）：', shoe.brand);\n        const newMile = prompt('目前累積里程（km，留空保持原值）：', shoe.currentMileage.toFixed(1));\n        if (newName === null && newBrand === null && newMile === null) return;\n        const updated = {\n            name: (newName || shoe.name).trim(),\n            brand: (newBrand || shoe.brand).trim(),\n            currentMileage: parseFloat(newMile) || shoe.currentMileage\n        };\n        updateShoeMileage(shoeId, 0); // 先寫 0 觸發更新介面\n        const idx = shoes.findIndex(s => s.id === shoeId);\n        shoes[idx] = { ...shoes[idx], ...updated };\n        localStorage.setItem('shoes', JSON.stringify(shoes));\n        this.loadShoes();\n        alert('跑鞋資料已更新！');\n    }\n\n    handleDeleteDebrief(debriefId) {\n        if (confirm('您確定要刪除這篇復盤日誌嗎？')) {\n            deleteDebrief(debriefId);\n            this.loadHistory();\n            this.initializeDebriefCalendar();\n        }\n    }\n\n    handleEditDebrief(debriefId) {\n        const debriefs = getDebriefs();\n        const debrief = debriefs.find(d => d.id === debriefId);\n        if (!debrief) return;\n\n        this.debriefRaceNameInput.value = debrief.raceName;\n        this.debriefDateInput.value = debrief.date;\n        this.debriefActualTimeInput.value = debrief.actualTime;\n        this.debriefMentalStateInput.value = debrief.mentalState;\n        this.debriefNutritionInput.value = debrief.nutrition;\n        this.debriefGearInput.value = debrief.gear;\n\n        this.debriefSubmitBtn.textContent = '更新復盤';\n        this.editingDebriefId = debriefId;\n\n        // Scroll to the form\n        this.debriefRaceNameInput.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    handleDebriefSubmit() {\n        const entry = {\n            raceName: this.debriefRaceNameInput.value.trim(),\n            date: this.debriefDateInput.value,\n            actualTime: this.debriefActualTimeInput.value.trim(),\n            mentalState: this.debriefMentalStateInput.value.trim(),\n            nutrition: this.debriefNutritionInput.value.trim(),\n            gear: this.debriefGearInput.value.trim()\n        };\n        if (!entry.raceName || !entry.date) { alert('請至少輸入賽事名稱和日期。'); return; }\n\n        if (this.editingDebriefId) {\n            updateDebrief(this.editingDebriefId, entry);\n            alert('賽後復盤已更新！');\n            this.editingDebriefId = null;\n            this.debriefSubmitBtn.textContent = '提交復盤';\n        } else {\n            saveDebrief(entry);\n            alert('賽後復盤已提交！');\n        }\n\n        ['raceName', 'date', 'actualTime', 'mentalState', 'nutrition', 'gear']\n            .forEach(k => this[`debrief${k.charAt(0).toUpperCase() + k.slice(1)}Input`].value = '');\n        this.loadHistory();\n        this.initializeDebriefCalendar();\n    }\n\n    loadHistory() {\n        this.historyList.innerHTML = '';\n        const tHist = getTrainingHistory();\n        const dHist = getDebriefs();\n        const combined = [...tHist, ...dHist].sort((a, b) => new Date(b.date) - new Date(a.date));\n        if (combined.length === 0) {\n            this.historyList.innerHTML = '<div class=\"history-empty\">尚無歷史紀錄</div>';\n            return;\n        }\n        combined.forEach(it => this.addHistoryEntryToDOM(it));\n        this.initializeDebriefCalendar();\n    }\n\n    initializeDebriefCalendar() {\n        if (!this.debriefCalendarContainer) return;\n        const debriefs = getDebriefs().sort((a, b) => new Date(b.date) - new Date(a.date));\n        this.debriefCalendarContainer.innerHTML = '';\n        if (debriefs.length === 0) {\n            this.debriefCalendarContainer.innerHTML = '<p class=\"history-empty\">尚無復盤紀錄</p>';\n            return;\n        }\n        debriefs.forEach(d => {\n            const details = document.createElement('details');\n            details.className = 'debrief-item';\n\n            const summary = document.createElement('summary');\n            summary.className = 'debrief-summary';\n            summary.innerHTML = `<strong>${d.raceName}</strong> - <small>${new Date(d.date).toLocaleDateString('zh-Hant')}</small>`;\n\n            const content = document.createElement('div');\n            content.className = 'debrief-content';\n            content.innerHTML = `\n                <p><strong>完賽時間:</strong> ${d.actualTime || '未記錄'}</p>\n                <p><strong>心態感受:</strong> ${d.mentalState || '未記錄'}</p>\n                <p><strong>補給策略:</strong> ${d.nutrition || '未記錄'}</p>\n                <p><strong>裝備表現:</strong> ${d.gear || '未記錄'}</p>\n                <div class=\"debrief-actions\">\n                    <button class=\"btn btn-outline btn-small debrief-edit-btn\" data-id=\"${d.id}\">編輯</button>\n                    <button class=\"btn btn-danger btn-small debrief-delete-btn\" data-id=\"${d.id}\">刪除</button>\n                </div>\n            `;\n\n            details.appendChild(summary);\n            details.appendChild(content);\n            this.debriefCalendarContainer.appendChild(details);\n        });\n    }\n\n    addHistoryEntryToDOM(entry) {\n        const empty = this.historyList.querySelector('.history-empty');\n        if (empty) empty.remove();\n        let html = '';\n        if (entry.type === 'debrief') {\n            html = `\n                <p class=\"history-date\">${new Date(entry.date).toLocaleDateString('zh-Hant')} - <strong>賽後復盤: ${entry.raceName}</strong></p>\n                <div class=\"history-metrics\">\n                    <div><p class=\"history-metric-name\">完賽時間</p><p class=\"history-metric-value\">${entry.actualTime || '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">心態</p><p class=\"history-metric-value\">${entry.mentalState ? '已記錄' : '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">補給</p><p class=\"history-metric-value\">${entry.nutrition ? '已記錄' : '未記錄'}</p></div>\n                    <div><p class=\"history-metric-name\">裝備</p><p class=\"history-metric-value\">${entry.gear ? '已記錄' : '未記錄'}</p></div>\n                </div>`;\n        } else {\n            const shoes = getShoes();\n            const shoe = entry.shoeId ? shoes.find(s => s.id === entry.shoeId) : null;\n            const shoeName = shoe ? shoe.name : '';\n\n            html = `\n                <p class=\"history-date\">${new Date(entry.date).toLocaleDateString('zh-Hant')} - <strong>${entry.name || '無標題'}</strong></p>\n                <div class=\"history-metrics\">\n                    <div><p class=\"history-metric-name\">距離</p><p class=\"history-metric-value\">${entry.distance} km</p></div>\n                    <div><p class=\"history-metric-name\">爬升</p><p class=\"history-metric-value\">${entry.elevation} m</p></div>\n                    <div><p class=\"history-metric-name\">時間</p><p class=\"history-metric-value\">${formatTime(entry.time)}</p></div>\n                    <div><p class=\"history-metric-name\">EPH</p><p class=\"metric-value\">${entry.eph.toFixed(1)}</p></div>\n                    ${shoeName ? `<div><p class=\"history-metric-name\">跑鞋</p><p class=\"history-metric-value\">${shoeName}</p></div>` : ''}\n                </div>`;\n        }\n        const item = document.createElement('div');\n        item.className = 'history-item';\n        item.innerHTML = html;\n        this.historyList.prepend(item);\n    }\n\n    addIntervalSetRow() {\n        const currentSetIndex = this.intervalSetCounter++;\n        const div = document.createElement('div');\n        div.className = 'form-group interval-set';\n        div.innerHTML = `\n            <label class=\"form-label\" for=\"interval-seconds-${currentSetIndex}\">單趟間歇時間 (秒)</label>\n            <input type=\"number\" class=\"form-control interval-seconds\" id=\"interval-seconds-${currentSetIndex}\" placeholder=\"例如: 90\">\n            <label class=\"form-label\" for=\"interval-count-${currentSetIndex}\">次數</label>\n            <input type=\"number\" class=\"form-control interval-count\" id=\"interval-count-${currentSetIndex}\" placeholder=\"例如: 8\">\n        `;\n        this.intervalSetsContainer.appendChild(div);\n    }\n\n    clearIntervalSets() {\n        this.intervalSetCounter = 0;\n        const sets = this.intervalSetsContainer.querySelectorAll('.interval-set');\n        sets.forEach((s, i) => { if (i > 0) s.remove(); });\n        sets[0]?.querySelectorAll('input').forEach(inp => inp.value = '');\n        this.intervalResultsList.innerHTML = '';\n        this.intervalTotalDistanceDisplay.textContent = '0 km';\n        this.intervalTotalTimeDisplay.textContent = '00:00:00';\n    }\n\n    handleCopyIntervalResults(button) {\n        const resultsList = this.intervalResultsList;\n        if (resultsList.children.length === 0) {\n            alert('沒有結果可以複製。');\n            return;\n        }\n\n        let textToCopy = '間歇訓練配速解析結果：\\n';\n        resultsList.querySelectorAll('.metric-item').forEach(item => {\n            const title = item.querySelector('.metric-name').textContent.trim();\n            const value = item.querySelector('.metric-value').textContent.trim();\n            textToCopy += `- ${title}: ${value}\\n`;\n        });\n\n        const totalDist = this.intervalTotalDistanceDisplay.textContent;\n        const totalTime = this.intervalTotalTimeDisplay.textContent;\n        textToCopy += `\\n總距離: ${totalDist}\\n總時間: ${totalTime}`;\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            this.notifyCopied(button);\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    handleIntervalCalculation() {\n        const distance = parseFloat(this.intervalDistanceInput.value) || 0;\n        if (distance <= 0) {\n            this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的間歇距離</p>';\n            return;\n        }\n\n        const userTPace = parseFloat(this.userTPaceInput.value) || 0;\n        this.intervalResultsListMobile.innerHTML = '';\n        const desktopTableBody = this.intervalResultsListDesktop.querySelector('tbody');\n        if (desktopTableBody) desktopTableBody.innerHTML = '';\n\n        // Mode check\n        if (this.intervalModeTimeBtn.classList.contains('active')) {\n            // Existing \"by time\" logic\n            const sets = [];\n            this.intervalSetsContainer.querySelectorAll('.interval-set').forEach(set => {\n                const sec = parseInt(set.querySelector('.interval-seconds').value, 10);\n                const cnt = parseInt(set.querySelector('.interval-count').value, 10);\n                if (!isNaN(sec) && !isNaN(cnt) && sec > 0 && cnt > 0) sets.push({ time: sec, count: cnt });\n            });\n\n            if (sets.length === 0) {\n                this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的間歇數據</p>';\n                return;\n            }\n\n            sets.forEach((st, idx) => {\n                const pace = (st.time / 60) / (distance / 1000);\n                const min = Math.floor(pace), sec = Math.round((pace - min) * 60);\n                let pct = '';\n                if (userTPace > 0) pct = ` (${calculateThresholdPercentage(pace, userTPace).toFixed(0)}% T-Pace)`;\n                totalDist += (distance / 1000) * st.count;\n                totalSec += st.time * st.count;\n                \n                // Update mobile view\n                this.intervalResultsListMobile.innerHTML += `\n                    <div class=\"metric-item\">\n                        <span class=\"metric-number\">${String(idx + 1).padStart(2, '0')}</span>\n                        <div class=\"metric-content\">\n                            <h3 class=\"metric-name\">第 ${idx + 1} 組配速 (${st.count} 趟)</h3>\n                            <p class=\"metric-value\">${min}:${String(sec).padStart(2, '0')}/km${pct}</p>\n                        </div>\n                    </div>`;\n\n                // Update desktop compact table view\n                desktopTableBody.innerHTML += `\n                    <tr>\n                        <td>第 ${idx + 1} 組 (${st.count} 趟)</td>\n                        <td>${min}:${String(sec).padStart(2, '0')}/km${pct}</td>\n                    </tr>`;\n            });\n        } else {\n            // New \"by pace\" logic\n            const paceMin = parseInt(this.intervalTargetPaceMin.value, 10) || 0;\n            const paceSec = parseInt(this.intervalTargetPaceSec.value, 10) || 0;\n            const reps = parseInt(this.intervalPaceReps.value, 10) || 0;\n\n            if (reps <= 0 || (paceMin <= 0 && paceSec <= 0)) {\n                this.intervalResultsList.innerHTML = '<p class=\"metric-name\">請輸入有效的目標配速和次數</p>';\n                return;\n            }\n\n            const totalPaceSecondsPerKm = (paceMin * 60) + paceSec;\n            const secondsPerMeter = totalPaceSecondsPerKm / 1000;\n            const timePerRep = secondsPerMeter * distance;\n\n            const repMin = Math.floor(timePerRep / 60);\n            const repSec = Math.round(timePerRep % 60);\n\n            totalDist = (distance / 1000) * reps;\n            totalSec = timePerRep * reps;\n\n            this.intervalResultsListMobile.innerHTML = `\n                <div class=\"metric-item\">\n                    <span class=\"metric-number\">${String(reps).padStart(2, '0')}</span>\n                    <div class=\"metric-content\">\n                        <h3 class=\"metric-name\">單趟時間 (${reps} 趟)</h3>\n                        <p class=\"metric-value\">${repMin}:${String(repSec).padStart(2, '0')}</p>\n                    </div>\n                </div>`;\n            desktopTableBody.innerHTML = `\n                <tr>\n                    <td>單趟時間 (${reps} 趟)</td>\n                    <td>${repMin}:${String(repSec).padStart(2, '0')}</td>\n                </tr>`;\n        }\n\n        this.intervalTotalDistanceDisplay.textContent = `${totalDist.toFixed(2)} km`;\n        this.intervalTotalTimeDisplay.textContent = formatTime(totalSec / 3600);\n\n        // Update compact display for desktop\n        this.intervalTotalDistanceDisplayCompact.textContent = `${totalDist.toFixed(2)} km`;\n        this.intervalTotalTimeDisplayCompact.textContent = formatTime(totalSec / 3600);\n    }\n\n    handleGapCalculation() {\n        const pace = parseFloat(this.gapPaceInput.value) || 0;\n        const grade = parseFloat(this.gapGradeInput.value) || 0;\n        if (pace <= 0) return;\n        const gap = calculateGAP(pace, grade);\n        const min = Math.floor(gap), sec = Math.round((gap - min) * 60);\n        this.gapResultDisplay.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n        this.gapResultDisplayCompact.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n    }\n\n    handleTreadmillConversion() {\n        const speed = parseFloat(this.treadmillSpeedInput.value) || 0;\n        const incline = parseFloat(this.treadmillInclineInput.value) || 0;\n        if (speed <= 0) return;\n        const pace = convertTreadmillToPace(speed, incline);\n        const min = Math.floor(pace), sec = Math.round((pace - min) * 60);\n        this.equivalentPaceDisplay.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n        this.equivalentPaceDisplayCompact.textContent = `${min}:${String(sec).padStart(2, '0')}/km`;\n    }\n\n    handleReverseTreadmillConversion() {\n        const flatPace = parseFloat(this.flatPaceInput.value) || 0;\n        const incline = parseFloat(this.reverseTreadmillInclineInput.value) || 0;\n        if (flatPace <= 0) { alert('請輸入有效的目標平路配速。'); return; }\n        const speed = convertPaceToTreadmillSpeed(flatPace, incline);\n        this.treadmillSpeedResultDisplay.textContent = `${speed.toFixed(1)} km/h`;\n        this.treadmillSpeedResultDisplayCompact.textContent = `${speed.toFixed(1)} km/h`;\n    }\n\n    handleRacePrediction() {\n        // --- Get Base Inputs ---\n        const D = parseFloat(this.raceDistanceInput.value) || 0;\n        const G_plus = parseFloat(this.raceElevationGainInput.value) || 0;\n        const G_minus = parseFloat(this.raceElevationLossInput.value) || 0;\n        const eph = parseFloat(this.userEphInput.value) || 0;\n\n        if (D <= 0 || eph <= 0) {\n            alert('請輸入有效的賽事距離、爬升/下降和您的平均EPH。');\n            return;\n        }\n\n        // --- Convert EPH (speed) to eHP (pace) ---\n        const targetEhpInMinutes = 60 / eph;\n\n        // --- Define Coefficients ---\n        const Kg = 100; // 爬升難度係數\n        const Kd = 200; // 下降難度係數 (折中值)\n\n        // --- Check for Advanced Mode ---\n        const isAdvancedMode = this.advancedStrategySection.open;\n        const AG = parseFloat(this.climbingFactorInput.value) || 1.0; // 爬坡能力係數\n        const AD = parseFloat(this.descendingFactorInput.value) || 1.0; // 下坡能力係數\n        \n        const aidStations = [];\n        this.aidStationContainer.querySelectorAll('.aid-station-group').forEach(group => {\n            const dist = parseFloat(group.querySelector('.aid-station-dist').value);\n            const time = parseFloat(group.querySelector('.aid-station-time').value);\n            if (!isNaN(dist) && !isNaN(time) && dist > 0 && time > 0) {\n                aidStations.push({ distance: dist, time: time });\n            }\n        });\n\n        let equivalentDistance = 0;\n        let mode = \"(標準)\";\n\n        if (isAdvancedMode && (AG !== 1.0 || AD !== 1.0)) {\n            // --- Personalized Formula (Level 3) ---\n            mode = \"(進階)\";\n            equivalentDistance = D + (G_plus / (Kg * AG)) + (G_minus / (Kd * AD));\n        } else {\n            // --- Baseline Formula (Level 2) ---\n            equivalentDistance = D + (G_plus / Kg) + (G_minus / Kd);\n        }\n\n        let totalMinutes = equivalentDistance * targetEhpInMinutes;\n\n        // Add aid station time if in advanced mode\n        if (isAdvancedMode && aidStations.length > 0) {\n            const totalAidStationMinutes = aidStations.reduce((total, station) => total + station.time, 0);\n            totalMinutes += totalAidStationMinutes;\n            if (mode === \"(標準)\") mode = \"(進階-補給站)\"; // Indicate that aid stations were used\n        }\n\n        const totalHours = totalMinutes / 60;\n\n        this.raceTimeDisplay.textContent = formatTime(totalHours) + ` ${mode}`;\n        this.raceTimeDisplayCompact.textContent = formatTime(totalHours) + ` ${mode}`;\n        this.raceEpDisplay.textContent = `${equivalentDistance.toFixed(1)} ekm`;\n        this.raceEpDisplayCompact.textContent = `${equivalentDistance.toFixed(1)} ekm`;\n    }\n\n    handleTrainingTimeCalculation() {\n        const refRaceDist = parseFloat(this.refRaceDistInput.value) || 0;\n        const refRaceElev = parseFloat(this.refRaceElevInput.value) || 0;\n        const refRaceTime = hmsToHours(this.refRaceTimeHInput.value, this.refRaceTimeMInput.value, this.refRaceTimeSInput.value);\n\n        const trainDist = parseFloat(this.trainDistInput.value) || 0;\n        const trainElev = parseFloat(this.trainElevInput.value) || 0;\n\n        if (refRaceDist <= 0 || refRaceTime <= 0 || trainDist < 0) {\n            alert('請輸入有效的參考賽事數據和訓練距離。');\n            return;\n        }\n\n        const refRaceEP = calculateEP(refRaceDist, refRaceElev);\n        const refRaceEPH = calculateEPH(refRaceEP, refRaceTime);\n\n        if (isNaN(refRaceEPH) || !isFinite(refRaceEPH)) {\n            alert('無法計算參考賽事的 EPH，請檢查輸入值。');\n            return;\n        }\n\n        const trainEP = calculateEP(trainDist, trainElev);\n        const estimatedTrainingTime = trainEP / refRaceEPH; // in hours\n\n        this.refRaceEphResultDisplay.textContent = refRaceEPH.toFixed(1);\n        this.refRaceEphResultDisplayCompact.textContent = refRaceEPH.toFixed(1);\n        this.trainingTimeResultDisplay.textContent = formatTime(estimatedTrainingTime);\n        this.trainingTimeResultDisplayCompact.textContent = formatTime(estimatedTrainingTime);\n    }\n\n    handleAddAidStation() {\n        const stationIndex = this.aidStationContainer.children.length;\n        const stationDiv = document.createElement('div');\n        stationDiv.className = 'form-group-inline aid-station-group';\n        stationDiv.innerHTML = `\n            <div class=\"form-group\">\n                <label for=\"aid-dist-${stationIndex}\" class=\"form-label\">補給站 ${stationIndex + 1} (km)</label>\n                <input type=\"number\" id=\"aid-dist-${stationIndex}\" class=\"form-control aid-station-dist\" placeholder=\"距離\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"aid-time-${stationIndex}\" class=\"form-label\">停留時間 (分)</label>\n                <input type=\"number\" id=\"aid-time-${stationIndex}\" class=\"form-control aid-station-time\" placeholder=\"分鐘\">\n            </div>\n            <button class=\"btn btn-danger btn-small remove-aid-station-btn\">&times;</button>\n        `;\n        this.aidStationContainer.appendChild(stationDiv);\n\n        stationDiv.querySelector('.remove-aid-station-btn').addEventListener('click', () => {\n            stationDiv.remove();\n        });\n    }\n\n    saveCurrentTraining() {\n        const routeName = this.routeNameInput.value.trim() || '未命名訓練';\n        const distance = parseFloat(this.distanceInput.value);\n        const entry = {\n            date: new Date().toISOString(),\n            name: routeName,\n            distance: distance,\n            elevation: this.elevationInput.value,\n            time: hmsToHours(this.targetHoursInput.value, this.targetMinutesInput.value, this.targetSecondsInput.value),\n            eph: parseFloat(this.ephDisplay.textContent) || 0,\n            type: 'training',\n            shoeId: this.runShoeSelector.value || null\n        };\n        if (!entry.distance || !entry.time) { alert('沒有可儲存的有效訓練數據。'); return; }\n        \n        saveTrainingToHistory(entry);\n\n        if (entry.shoeId && entry.distance > 0) {\n            updateShoeMileage(entry.shoeId, entry.distance);\n            this.loadShoes(); \n        }\n\n        this.loadHistory();\n        alert(`已儲存訓練: ${routeName}`);\n    }\n\n    handleGPXUpload(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const gpx = parseGPX(e.target.result);\n                if (gpx) {\n                    this.distanceInput.value = gpx.distance.toFixed(2);\n                    this.elevationInput.value = gpx.elevation.toFixed(0);\n                    alert(`GPX 已載入: ${gpx.distance.toFixed(2)} km, ${gpx.elevation.toFixed(0)} m`);\n                } else {\n                    alert('無法解析 GPX 檔案。');\n                }\n            } catch (err) {\n                alert('解析 GPX 檔案時發生錯誤。');\n            }\n        };\n        reader.readAsText(file);\n    }\n\n    clearHistory() {\n        if (confirm('您確定要清除所有歷史紀錄嗎？')) {\n            clearTrainingHistory();\n            clearDebriefs();\n            this.loadHistory();\n        }\n    }\n\n    handleCopyIntervalResults(button) {\n        const resultsList = this.intervalResultsListMobile;\n        if (resultsList.children.length === 0) {\n            alert('沒有結果可以複製。');\n            return;\n        }\n\n        let textToCopy = '間歇訓練配速解析結果：\\n';\n        resultsList.querySelectorAll('.metric-item').forEach(item => {\n            const title = item.querySelector('.metric-name').textContent.trim();\n            const value = item.querySelector('.metric-value').textContent.trim();\n            textToCopy += `- ${title}: ${value}\\n`;\n        });\n\n        const totalDist = this.intervalTotalDistanceDisplay.textContent;\n        const totalTime = this.intervalTotalTimeDisplay.textContent;\n        textToCopy += `\\n總距離: ${totalDist}\\n總時間: ${totalTime}`;\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            this.notifyCopied(button);\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n\n    handleCopyResults(button) {\n        const targetSelector = button.dataset.target;\n        const targetElement = document.querySelector(targetSelector);\n\n        if (!targetElement) {\n            alert('無法找到要複製的內容。');\n            return;\n        }\n\n        let textToCopy = '';\n        // For metrics-list, format the content nicely\n        if (targetElement.classList.contains('metrics-list')) {\n            targetElement.querySelectorAll('.metric-item').forEach(item => {\n                const name = item.querySelector('.metric-name') ? item.querySelector('.metric-name').textContent.trim() : '';\n                const value = item.querySelector('.metric-value') ? item.querySelector('.metric-value').textContent.trim() : '';\n                if (name && value) {\n                    textToCopy += `${name}: ${value}\\n`;\n                }\n            });\n        } else {\n            // For other elements, just get the text content\n            textToCopy = targetElement.textContent.trim();\n        }\n\n        if (!textToCopy) {\n            alert('沒有內容可以複製。');\n            return;\n        }\n\n        navigator.clipboard.writeText(textToCopy).then(() => {\n            this.notifyCopied(button);\n        }).catch(err => {\n            console.error('無法複製文字: ', err);\n            alert('複製失敗，請檢查瀏覽器權限。');\n        });\n    }\n}\n\n(function bootOnce(){\n  if (window.__TrailSyncBooted) return;\n  window.__TrailSyncBooted = true;\n\n  document.addEventListener('DOMContentLoaded', () => {\n    try {\n      window.__ts = new TrailSyncApp();\n\n      // 3.1 沒有 type 的按鈕統一補上，避免意外提交或重整\n      qsa('button:not([type])').forEach(b => b.setAttribute('type','button'));\n\n      // 3.2 把 data-tooltip 同步到 title，避免沒載到 tooltip 程式時報錯或不可用\n      qsa('[data-tooltip]').forEach(el => {\n        if (!el.getAttribute('title')) el.setAttribute('title', el.getAttribute('data-tooltip'));\n      });\n    } catch (e) {\n      console.error('[TrailSync init failed]', e);\n    }\n  });\n})();"],"names":["formatTime","timeInHours","isNaN","hours","Math","floor","minutes","seconds","toString","padStart","hmsToHours","h","m","s","parseInt","calculateEP","distance","elevation","calculateEPH","ep","paceToMinutesPerKm","paceInHoursPerKm","totalSeconds","round","minutesPerKmToHoursPerKm","haversineDistance","p1","p2","dLat","toRad","lat","dLon","lon","lat1","lat2","a","sin","cos","atan2","sqrt","value","PI","GapConfig","gap","tech","TRAINING_HISTORY_KEY","getTrainingHistory","history","localStorage","getItem","JSON","parse","e","console","error","SHOE_STORAGE_KEY","getShoes","shoes","saveAllShoes","setItem","stringify","updateShoeMileage","shoeId","runDistance","shoeIndex","findIndex","id","currentMileage","parseFloat","DEBRIEF_STORAGE_KEY","getDebriefs","debriefs","TrainingPaceCalculator","constructor","notifier","this","cacheDOMElements","addEventListeners","init","modeCurrentBtn","document","getElementById","modeTargetBtn","distanceInput","inputTypeTimeBtn","inputTypePaceBtn","timeGroup","paceGroup","hoursInput","minutesInput","secondsInput","paceMinInput","paceSecInput","calculateBtn","basePaceOutput","basePaceOutputCompact","intervalDistInput","intervalRepsInput","intervalPaceOutput","intervalPaceOutputCompact","intervalRecoveryOutput","intervalRecoveryOutputCompact","lsdDistInput","lsdPaceOutput","lsdPaceOutputCompact","lsdRecoveryOutput","lsdRecoveryOutputCompact","copyBtn","addEventListener","toggleInputType","calculateAndDisplay","copyResults","currentTarget","button","textContent","alert","textToCopy","trim","replace","navigator","clipboard","writeText","then","catch","err","type","style","display","classList","add","remove","contains","paceMinutes","paceSeconds","intervalDistance","lsdDistance","basePace","calculateEquivalentPace","trainingPaces","basePaceInHoursPerKm","intervalDistanceMeters","lsdDistanceKm","interval","lsd","recovery","intervalPaceFactor","log2","max","min","lsdPaceFactor","getTrainingPaces","riegelPrediction","t1","d1","d2","pow","generateWorkout","options","baseRace","mainWorkout","warmup","paceZones","I","T","M","E","tPace","time10k","iPace","mPace","getPaceZones","mainPaceInHoursPerKm","targetPace","mainPaceFormatted","finalMainWorkout","pace","warmupPaceInHoursPerKm","warmupPaceFormatted","warmupDistance","warmupTime","finalWarmup","text","toFixed","zone","strides","cooldownTime","cooldownPaceInHoursPerKm","cooldownDistance","main","cooldown","debug","TrainingPlanUI","generateBtn","modeResultBtn","modeGoalBtn","resultGroup","goalGroup","resultDist","resultHours","resultMinutes","resultSeconds","goalDist","goalHours","goalMinutes","goalSeconds","mainType","mainDetails","mainPace","warmupTimeBtn","warmupDistBtn","warmupValue","warmupLabel","querySelector","resWarmup","resWarmupPace","resWarmupCompact","resWarmupPaceCompact","resMainTitle","resMainPace","resMainCompact","resMainPaceCompact","resCooldown","resCooldownPace","resCooldownCompact","resCooldownPaceCompact","toggleMode","toggleWarmupInput","mode","placeholder","details","workoutPlan","warmupPaceText","onSafe","sel","evt","handler","el","warn","qsa","Array","from","querySelectorAll","TrailSyncApp","editingDebriefId","initTheme","initView","loadShoes","loadHistory","intervalSetCounter","initializeDebriefCalendar","trainingPaceCalculator","trainingPlanUI","themeToggleBtn","viewDesktopBtn","viewMobileBtn","menuToggleBtn","navLinks","advancedOptionsToggle","advancedOptionsContent","routeNameInput","elevationInput","targetHoursInput","targetMinutesInput","targetSecondsInput","routeTypeSelect","altitudeInput","userTPaceInput","ultraRaceCheckbox","resultsPaneOnPage","resDistanceDisplay","resElevationDisplay","resTimeDisplay","ephDisplay","resDistanceDisplayCompact","resElevationDisplayCompact","resTimeDisplayCompact","ephDisplayCompact","cardExporterContent","runShoeSelector","intervalModeTimeBtn","intervalModePaceBtn","intervalTimeInputs","intervalPaceInputs","intervalDistanceInput","intervalCalculateBtn","intervalResultsList","intervalResultsListMobile","intervalResultsListDesktop","intervalSetsContainer","addIntervalSetBtn","clearIntervalSetsBtn","intervalTotalDistanceDisplay","intervalTotalTimeDisplay","intervalTotalDistanceDisplayCompact","intervalTotalTimeDisplayCompact","intervalTargetPaceMin","intervalTargetPaceSec","intervalPaceReps","copyIntervalBtn","copyTpcBtn","copyPlanBtn","allCopyButtons","gapPaceInput","gapGradeInput","gapCalculateBtn","gapResultDisplay","gapResultDisplayCompact","treadmillSpeedInput","treadmillInclineInput","treadmillConvertBtn","equivalentPaceDisplay","equivalentPaceDisplayCompact","flatPaceInput","reverseTreadmillInclineInput","reverseTreadmillConvertBtn","treadmillSpeedResultDisplay","treadmillSpeedResultDisplayCompact","raceDistanceInput","raceElevationGainInput","raceElevationLossInput","userEphInput","racePredictBtn","raceTimeDisplay","raceTimeDisplayCompact","raceEpDisplay","raceEpDisplayCompact","saveTrainingBtn","historyList","clearHistoryBtn","shoeNameInput","shoeBrandInput","shoeMileageInput","addShoeBtn","shoeListContainer","debriefRaceNameInput","debriefDateInput","debriefActualTimeInput","debriefMentalStateInput","debriefNutritionInput","debriefGearInput","debriefSubmitBtn","debriefCalendarContainer","refRaceDistInput","refRaceElevInput","refRaceTimeHInput","refRaceTimeMInput","refRaceTimeSInput","trainDistInput","trainElevInput","calculateTrainingTimeBtn","trainingTimeResultDisplay","trainingTimeResultDisplayCompact","refRaceEphResultDisplay","refRaceEphResultDisplayCompact","advancedStrategySection","climbingFactorInput","descendingFactorInput","aidStationContainer","addAidStationBtn","handleThemeToggle","bind","handleViewToggle","handleMenuToggle","forEach","link","handleAdvancedOptionsToggle","handleCalculation","handleIntervalCalculation","handleGapCalculation","handleTreadmillConversion","handleRacePrediction","saveCurrentTraining","clearHistory","handleAddShoe","handleDebriefSubmit","addIntervalSetRow","clearIntervalSets","handleReverseTreadmillConversion","handleTrainingTimeCalculation","handleCopyIntervalResults","handleCopyTpcResults","handleCopyPlanResults","handleCopyResults","handleAddAidStation","switchIntervalMode","target","dataset","handleDeleteShoe","handleAddMileage","handleEditShoe","debriefId","handleDeleteDebrief","handleEditDebrief","savedTheme","prefersDark","window","matchMedia","matches","documentElement","setAttribute","savedView","darkOn","toggle","isOpen","viewMode","notifyCopied","originalText","disabled","setTimeout","routeType","altitude","isUltra","checked","baseEph","finalEph","isUltraRace","terrainFactor","road","fire_trail","technical","alpine","gravityFactor","fatigueFactor","log10","getAdvancedEPH","innerHTML","length","shoe","renderShoeCard","addShoeToSelector","card","createElement","className","pct","name","brand","appendChild","opt","initial","shoeData","newShoe","Date","now","initialMileage","addedDate","toISOString","push","addShoe","confirm","filter","deleteShoe","km","prompt","num","find","newName","newBrand","newMile","updated","idx","d","deleteDebrief","debrief","raceName","date","actualTime","mentalState","nutrition","gear","scrollIntoView","behavior","entry","updatedData","index","updateDebrief","debriefData","newDebrief","savedAt","saveDebrief","k","charAt","toUpperCase","slice","combined","sort","b","it","addHistoryEntryToDOM","summary","toLocaleDateString","content","empty","html","shoeName","time","eph","item","prepend","currentSetIndex","div","sets","i","inp","resultsList","children","title","totalDist","totalTime","userTPace","desktopTableBody","set","sec","cnt","count","st","actualPace","thresholdPace","totalSec","String","paceMin","paceSec","reps","timePerRep","repMin","repSec","grade","gradient","calculateGAP","speed","incline","convertTreadmillToPace","flatPace","convertPaceToTreadmillSpeed","D","G_plus","G_minus","targetEhpInMinutes","isAdvancedMode","open","AG","AD","aidStations","group","dist","equivalentDistance","totalMinutes","reduce","total","station","totalHours","refRaceDist","refRaceElev","refRaceTime","trainDist","trainElev","refRaceEPH","isFinite","estimatedTrainingTime","stationIndex","stationDiv","routeName","saveTrainingToHistory","handleGPXUpload","event","file","files","reader","FileReader","onload","gpx","gpxContent","trkpts","DOMParser","parseFromString","getElementsByTagName","totalDistance","totalElevationGain","totalElevationLoss","points","getAttribute","eleNode","ele","prevPoint","eleDiff","abs","descent","parseGPX","result","readAsText","removeItem","clearTrainingHistory","targetSelector","targetElement","__TrailSyncBooted","__ts"],"mappings":"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"}